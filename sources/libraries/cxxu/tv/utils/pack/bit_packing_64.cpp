//
// Automatically generated by gen-bit-packers, do not edit
//
#include <cxxu/pack/bit_packing_64.hpp>

namespace cxxu {
namespace pack {

void
pack_64_into_1(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 1, w += 64) {
        out[c + 0]  = ((in[w +  0] & 0x0000000000000001ULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x0000000000000001ULL) <<  1);
        out[c + 0] |= ((in[w +  2] & 0x0000000000000001ULL) <<  2);
        out[c + 0] |= ((in[w +  3] & 0x0000000000000001ULL) <<  3);
        out[c + 0] |= ((in[w +  4] & 0x0000000000000001ULL) <<  4);
        out[c + 0] |= ((in[w +  5] & 0x0000000000000001ULL) <<  5);
        out[c + 0] |= ((in[w +  6] & 0x0000000000000001ULL) <<  6);
        out[c + 0] |= ((in[w +  7] & 0x0000000000000001ULL) <<  7);
        out[c + 0] |= ((in[w +  8] & 0x0000000000000001ULL) <<  8);
        out[c + 0] |= ((in[w +  9] & 0x0000000000000001ULL) <<  9);
        out[c + 0] |= ((in[w + 10] & 0x0000000000000001ULL) << 10);
        out[c + 0] |= ((in[w + 11] & 0x0000000000000001ULL) << 11);
        out[c + 0] |= ((in[w + 12] & 0x0000000000000001ULL) << 12);
        out[c + 0] |= ((in[w + 13] & 0x0000000000000001ULL) << 13);
        out[c + 0] |= ((in[w + 14] & 0x0000000000000001ULL) << 14);
        out[c + 0] |= ((in[w + 15] & 0x0000000000000001ULL) << 15);
        out[c + 0] |= ((in[w + 16] & 0x0000000000000001ULL) << 16);
        out[c + 0] |= ((in[w + 17] & 0x0000000000000001ULL) << 17);
        out[c + 0] |= ((in[w + 18] & 0x0000000000000001ULL) << 18);
        out[c + 0] |= ((in[w + 19] & 0x0000000000000001ULL) << 19);
        out[c + 0] |= ((in[w + 20] & 0x0000000000000001ULL) << 20);
        out[c + 0] |= ((in[w + 21] & 0x0000000000000001ULL) << 21);
        out[c + 0] |= ((in[w + 22] & 0x0000000000000001ULL) << 22);
        out[c + 0] |= ((in[w + 23] & 0x0000000000000001ULL) << 23);
        out[c + 0] |= ((in[w + 24] & 0x0000000000000001ULL) << 24);
        out[c + 0] |= ((in[w + 25] & 0x0000000000000001ULL) << 25);
        out[c + 0] |= ((in[w + 26] & 0x0000000000000001ULL) << 26);
        out[c + 0] |= ((in[w + 27] & 0x0000000000000001ULL) << 27);
        out[c + 0] |= ((in[w + 28] & 0x0000000000000001ULL) << 28);
        out[c + 0] |= ((in[w + 29] & 0x0000000000000001ULL) << 29);
        out[c + 0] |= ((in[w + 30] & 0x0000000000000001ULL) << 30);
        out[c + 0] |= ((in[w + 31] & 0x0000000000000001ULL) << 31);
        out[c + 0] |= ((in[w + 32] & 0x0000000000000001ULL) << 32);
        out[c + 0] |= ((in[w + 33] & 0x0000000000000001ULL) << 33);
        out[c + 0] |= ((in[w + 34] & 0x0000000000000001ULL) << 34);
        out[c + 0] |= ((in[w + 35] & 0x0000000000000001ULL) << 35);
        out[c + 0] |= ((in[w + 36] & 0x0000000000000001ULL) << 36);
        out[c + 0] |= ((in[w + 37] & 0x0000000000000001ULL) << 37);
        out[c + 0] |= ((in[w + 38] & 0x0000000000000001ULL) << 38);
        out[c + 0] |= ((in[w + 39] & 0x0000000000000001ULL) << 39);
        out[c + 0] |= ((in[w + 40] & 0x0000000000000001ULL) << 40);
        out[c + 0] |= ((in[w + 41] & 0x0000000000000001ULL) << 41);
        out[c + 0] |= ((in[w + 42] & 0x0000000000000001ULL) << 42);
        out[c + 0] |= ((in[w + 43] & 0x0000000000000001ULL) << 43);
        out[c + 0] |= ((in[w + 44] & 0x0000000000000001ULL) << 44);
        out[c + 0] |= ((in[w + 45] & 0x0000000000000001ULL) << 45);
        out[c + 0] |= ((in[w + 46] & 0x0000000000000001ULL) << 46);
        out[c + 0] |= ((in[w + 47] & 0x0000000000000001ULL) << 47);
        out[c + 0] |= ((in[w + 48] & 0x0000000000000001ULL) << 48);
        out[c + 0] |= ((in[w + 49] & 0x0000000000000001ULL) << 49);
        out[c + 0] |= ((in[w + 50] & 0x0000000000000001ULL) << 50);
        out[c + 0] |= ((in[w + 51] & 0x0000000000000001ULL) << 51);
        out[c + 0] |= ((in[w + 52] & 0x0000000000000001ULL) << 52);
        out[c + 0] |= ((in[w + 53] & 0x0000000000000001ULL) << 53);
        out[c + 0] |= ((in[w + 54] & 0x0000000000000001ULL) << 54);
        out[c + 0] |= ((in[w + 55] & 0x0000000000000001ULL) << 55);
        out[c + 0] |= ((in[w + 56] & 0x0000000000000001ULL) << 56);
        out[c + 0] |= ((in[w + 57] & 0x0000000000000001ULL) << 57);
        out[c + 0] |= ((in[w + 58] & 0x0000000000000001ULL) << 58);
        out[c + 0] |= ((in[w + 59] & 0x0000000000000001ULL) << 59);
        out[c + 0] |= ((in[w + 60] & 0x0000000000000001ULL) << 60);
        out[c + 0] |= ((in[w + 61] & 0x0000000000000001ULL) << 61);
        out[c + 0] |= ((in[w + 62] & 0x0000000000000001ULL) << 62);
        out[c + 0] |= ((in[w + 63] & 0x0000000000000001ULL) << 63);
    }
}

void
pack_64_into_2(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 1, w += 32) {
        out[c + 0]  = ((in[w +  0] & 0x0000000000000003ULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x0000000000000003ULL) <<  2);
        out[c + 0] |= ((in[w +  2] & 0x0000000000000003ULL) <<  4);
        out[c + 0] |= ((in[w +  3] & 0x0000000000000003ULL) <<  6);
        out[c + 0] |= ((in[w +  4] & 0x0000000000000003ULL) <<  8);
        out[c + 0] |= ((in[w +  5] & 0x0000000000000003ULL) << 10);
        out[c + 0] |= ((in[w +  6] & 0x0000000000000003ULL) << 12);
        out[c + 0] |= ((in[w +  7] & 0x0000000000000003ULL) << 14);
        out[c + 0] |= ((in[w +  8] & 0x0000000000000003ULL) << 16);
        out[c + 0] |= ((in[w +  9] & 0x0000000000000003ULL) << 18);
        out[c + 0] |= ((in[w + 10] & 0x0000000000000003ULL) << 20);
        out[c + 0] |= ((in[w + 11] & 0x0000000000000003ULL) << 22);
        out[c + 0] |= ((in[w + 12] & 0x0000000000000003ULL) << 24);
        out[c + 0] |= ((in[w + 13] & 0x0000000000000003ULL) << 26);
        out[c + 0] |= ((in[w + 14] & 0x0000000000000003ULL) << 28);
        out[c + 0] |= ((in[w + 15] & 0x0000000000000003ULL) << 30);
        out[c + 0] |= ((in[w + 16] & 0x0000000000000003ULL) << 32);
        out[c + 0] |= ((in[w + 17] & 0x0000000000000003ULL) << 34);
        out[c + 0] |= ((in[w + 18] & 0x0000000000000003ULL) << 36);
        out[c + 0] |= ((in[w + 19] & 0x0000000000000003ULL) << 38);
        out[c + 0] |= ((in[w + 20] & 0x0000000000000003ULL) << 40);
        out[c + 0] |= ((in[w + 21] & 0x0000000000000003ULL) << 42);
        out[c + 0] |= ((in[w + 22] & 0x0000000000000003ULL) << 44);
        out[c + 0] |= ((in[w + 23] & 0x0000000000000003ULL) << 46);
        out[c + 0] |= ((in[w + 24] & 0x0000000000000003ULL) << 48);
        out[c + 0] |= ((in[w + 25] & 0x0000000000000003ULL) << 50);
        out[c + 0] |= ((in[w + 26] & 0x0000000000000003ULL) << 52);
        out[c + 0] |= ((in[w + 27] & 0x0000000000000003ULL) << 54);
        out[c + 0] |= ((in[w + 28] & 0x0000000000000003ULL) << 56);
        out[c + 0] |= ((in[w + 29] & 0x0000000000000003ULL) << 58);
        out[c + 0] |= ((in[w + 30] & 0x0000000000000003ULL) << 60);
        out[c + 0] |= ((in[w + 31] & 0x0000000000000003ULL) << 62);
    }
}

void
pack_64_into_3(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 3, w += 64) {
        out[c + 0]  = ((in[w +  0] & 0x0000000000000007ULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x0000000000000007ULL) <<  3);
        out[c + 0] |= ((in[w +  2] & 0x0000000000000007ULL) <<  6);
        out[c + 0] |= ((in[w +  3] & 0x0000000000000007ULL) <<  9);
        out[c + 0] |= ((in[w +  4] & 0x0000000000000007ULL) << 12);
        out[c + 0] |= ((in[w +  5] & 0x0000000000000007ULL) << 15);
        out[c + 0] |= ((in[w +  6] & 0x0000000000000007ULL) << 18);
        out[c + 0] |= ((in[w +  7] & 0x0000000000000007ULL) << 21);
        out[c + 0] |= ((in[w +  8] & 0x0000000000000007ULL) << 24);
        out[c + 0] |= ((in[w +  9] & 0x0000000000000007ULL) << 27);
        out[c + 0] |= ((in[w + 10] & 0x0000000000000007ULL) << 30);
        out[c + 0] |= ((in[w + 11] & 0x0000000000000007ULL) << 33);
        out[c + 0] |= ((in[w + 12] & 0x0000000000000007ULL) << 36);
        out[c + 0] |= ((in[w + 13] & 0x0000000000000007ULL) << 39);
        out[c + 0] |= ((in[w + 14] & 0x0000000000000007ULL) << 42);
        out[c + 0] |= ((in[w + 15] & 0x0000000000000007ULL) << 45);
        out[c + 0] |= ((in[w + 16] & 0x0000000000000007ULL) << 48);
        out[c + 0] |= ((in[w + 17] & 0x0000000000000007ULL) << 51);
        out[c + 0] |= ((in[w + 18] & 0x0000000000000007ULL) << 54);
        out[c + 0] |= ((in[w + 19] & 0x0000000000000007ULL) << 57);
        out[c + 0] |= ((in[w + 20] & 0x0000000000000007ULL) << 60);
        out[c + 0] |= ((in[w + 21] & 0x0000000000000007ULL) << 63);
        out[c + 1]  = ((in[w + 22] & 0x0000000000000007ULL) <<  2) | ((in[w + 21] & 0x0000000000000007ULL) >> 1);
        out[c + 1] |= ((in[w + 23] & 0x0000000000000007ULL) <<  5);
        out[c + 1] |= ((in[w + 24] & 0x0000000000000007ULL) <<  8);
        out[c + 1] |= ((in[w + 25] & 0x0000000000000007ULL) << 11);
        out[c + 1] |= ((in[w + 26] & 0x0000000000000007ULL) << 14);
        out[c + 1] |= ((in[w + 27] & 0x0000000000000007ULL) << 17);
        out[c + 1] |= ((in[w + 28] & 0x0000000000000007ULL) << 20);
        out[c + 1] |= ((in[w + 29] & 0x0000000000000007ULL) << 23);
        out[c + 1] |= ((in[w + 30] & 0x0000000000000007ULL) << 26);
        out[c + 1] |= ((in[w + 31] & 0x0000000000000007ULL) << 29);
        out[c + 1] |= ((in[w + 32] & 0x0000000000000007ULL) << 32);
        out[c + 1] |= ((in[w + 33] & 0x0000000000000007ULL) << 35);
        out[c + 1] |= ((in[w + 34] & 0x0000000000000007ULL) << 38);
        out[c + 1] |= ((in[w + 35] & 0x0000000000000007ULL) << 41);
        out[c + 1] |= ((in[w + 36] & 0x0000000000000007ULL) << 44);
        out[c + 1] |= ((in[w + 37] & 0x0000000000000007ULL) << 47);
        out[c + 1] |= ((in[w + 38] & 0x0000000000000007ULL) << 50);
        out[c + 1] |= ((in[w + 39] & 0x0000000000000007ULL) << 53);
        out[c + 1] |= ((in[w + 40] & 0x0000000000000007ULL) << 56);
        out[c + 1] |= ((in[w + 41] & 0x0000000000000007ULL) << 59);
        out[c + 1] |= ((in[w + 42] & 0x0000000000000007ULL) << 62);
        out[c + 2]  = ((in[w + 43] & 0x0000000000000007ULL) <<  1) | ((in[w + 42] & 0x0000000000000007ULL) >> 2);
        out[c + 2] |= ((in[w + 44] & 0x0000000000000007ULL) <<  4);
        out[c + 2] |= ((in[w + 45] & 0x0000000000000007ULL) <<  7);
        out[c + 2] |= ((in[w + 46] & 0x0000000000000007ULL) << 10);
        out[c + 2] |= ((in[w + 47] & 0x0000000000000007ULL) << 13);
        out[c + 2] |= ((in[w + 48] & 0x0000000000000007ULL) << 16);
        out[c + 2] |= ((in[w + 49] & 0x0000000000000007ULL) << 19);
        out[c + 2] |= ((in[w + 50] & 0x0000000000000007ULL) << 22);
        out[c + 2] |= ((in[w + 51] & 0x0000000000000007ULL) << 25);
        out[c + 2] |= ((in[w + 52] & 0x0000000000000007ULL) << 28);
        out[c + 2] |= ((in[w + 53] & 0x0000000000000007ULL) << 31);
        out[c + 2] |= ((in[w + 54] & 0x0000000000000007ULL) << 34);
        out[c + 2] |= ((in[w + 55] & 0x0000000000000007ULL) << 37);
        out[c + 2] |= ((in[w + 56] & 0x0000000000000007ULL) << 40);
        out[c + 2] |= ((in[w + 57] & 0x0000000000000007ULL) << 43);
        out[c + 2] |= ((in[w + 58] & 0x0000000000000007ULL) << 46);
        out[c + 2] |= ((in[w + 59] & 0x0000000000000007ULL) << 49);
        out[c + 2] |= ((in[w + 60] & 0x0000000000000007ULL) << 52);
        out[c + 2] |= ((in[w + 61] & 0x0000000000000007ULL) << 55);
        out[c + 2] |= ((in[w + 62] & 0x0000000000000007ULL) << 58);
        out[c + 2] |= ((in[w + 63] & 0x0000000000000007ULL) << 61);
    }
}

void
pack_64_into_4(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 1, w += 16) {
        out[c + 0]  = ((in[w +  0] & 0x000000000000000fULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x000000000000000fULL) <<  4);
        out[c + 0] |= ((in[w +  2] & 0x000000000000000fULL) <<  8);
        out[c + 0] |= ((in[w +  3] & 0x000000000000000fULL) << 12);
        out[c + 0] |= ((in[w +  4] & 0x000000000000000fULL) << 16);
        out[c + 0] |= ((in[w +  5] & 0x000000000000000fULL) << 20);
        out[c + 0] |= ((in[w +  6] & 0x000000000000000fULL) << 24);
        out[c + 0] |= ((in[w +  7] & 0x000000000000000fULL) << 28);
        out[c + 0] |= ((in[w +  8] & 0x000000000000000fULL) << 32);
        out[c + 0] |= ((in[w +  9] & 0x000000000000000fULL) << 36);
        out[c + 0] |= ((in[w + 10] & 0x000000000000000fULL) << 40);
        out[c + 0] |= ((in[w + 11] & 0x000000000000000fULL) << 44);
        out[c + 0] |= ((in[w + 12] & 0x000000000000000fULL) << 48);
        out[c + 0] |= ((in[w + 13] & 0x000000000000000fULL) << 52);
        out[c + 0] |= ((in[w + 14] & 0x000000000000000fULL) << 56);
        out[c + 0] |= ((in[w + 15] & 0x000000000000000fULL) << 60);
    }
}

void
pack_64_into_5(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 5, w += 64) {
        out[c + 0]  = ((in[w +  0] & 0x000000000000001fULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x000000000000001fULL) <<  5);
        out[c + 0] |= ((in[w +  2] & 0x000000000000001fULL) << 10);
        out[c + 0] |= ((in[w +  3] & 0x000000000000001fULL) << 15);
        out[c + 0] |= ((in[w +  4] & 0x000000000000001fULL) << 20);
        out[c + 0] |= ((in[w +  5] & 0x000000000000001fULL) << 25);
        out[c + 0] |= ((in[w +  6] & 0x000000000000001fULL) << 30);
        out[c + 0] |= ((in[w +  7] & 0x000000000000001fULL) << 35);
        out[c + 0] |= ((in[w +  8] & 0x000000000000001fULL) << 40);
        out[c + 0] |= ((in[w +  9] & 0x000000000000001fULL) << 45);
        out[c + 0] |= ((in[w + 10] & 0x000000000000001fULL) << 50);
        out[c + 0] |= ((in[w + 11] & 0x000000000000001fULL) << 55);
        out[c + 0] |= ((in[w + 12] & 0x000000000000001fULL) << 60);
        out[c + 1]  = ((in[w + 13] & 0x000000000000001fULL) <<  1) | ((in[w + 12] & 0x000000000000001fULL) >> 4);
        out[c + 1] |= ((in[w + 14] & 0x000000000000001fULL) <<  6);
        out[c + 1] |= ((in[w + 15] & 0x000000000000001fULL) << 11);
        out[c + 1] |= ((in[w + 16] & 0x000000000000001fULL) << 16);
        out[c + 1] |= ((in[w + 17] & 0x000000000000001fULL) << 21);
        out[c + 1] |= ((in[w + 18] & 0x000000000000001fULL) << 26);
        out[c + 1] |= ((in[w + 19] & 0x000000000000001fULL) << 31);
        out[c + 1] |= ((in[w + 20] & 0x000000000000001fULL) << 36);
        out[c + 1] |= ((in[w + 21] & 0x000000000000001fULL) << 41);
        out[c + 1] |= ((in[w + 22] & 0x000000000000001fULL) << 46);
        out[c + 1] |= ((in[w + 23] & 0x000000000000001fULL) << 51);
        out[c + 1] |= ((in[w + 24] & 0x000000000000001fULL) << 56);
        out[c + 1] |= ((in[w + 25] & 0x000000000000001fULL) << 61);
        out[c + 2]  = ((in[w + 26] & 0x000000000000001fULL) <<  2) | ((in[w + 25] & 0x000000000000001fULL) >> 3);
        out[c + 2] |= ((in[w + 27] & 0x000000000000001fULL) <<  7);
        out[c + 2] |= ((in[w + 28] & 0x000000000000001fULL) << 12);
        out[c + 2] |= ((in[w + 29] & 0x000000000000001fULL) << 17);
        out[c + 2] |= ((in[w + 30] & 0x000000000000001fULL) << 22);
        out[c + 2] |= ((in[w + 31] & 0x000000000000001fULL) << 27);
        out[c + 2] |= ((in[w + 32] & 0x000000000000001fULL) << 32);
        out[c + 2] |= ((in[w + 33] & 0x000000000000001fULL) << 37);
        out[c + 2] |= ((in[w + 34] & 0x000000000000001fULL) << 42);
        out[c + 2] |= ((in[w + 35] & 0x000000000000001fULL) << 47);
        out[c + 2] |= ((in[w + 36] & 0x000000000000001fULL) << 52);
        out[c + 2] |= ((in[w + 37] & 0x000000000000001fULL) << 57);
        out[c + 2] |= ((in[w + 38] & 0x000000000000001fULL) << 62);
        out[c + 3]  = ((in[w + 39] & 0x000000000000001fULL) <<  3) | ((in[w + 38] & 0x000000000000001fULL) >> 2);
        out[c + 3] |= ((in[w + 40] & 0x000000000000001fULL) <<  8);
        out[c + 3] |= ((in[w + 41] & 0x000000000000001fULL) << 13);
        out[c + 3] |= ((in[w + 42] & 0x000000000000001fULL) << 18);
        out[c + 3] |= ((in[w + 43] & 0x000000000000001fULL) << 23);
        out[c + 3] |= ((in[w + 44] & 0x000000000000001fULL) << 28);
        out[c + 3] |= ((in[w + 45] & 0x000000000000001fULL) << 33);
        out[c + 3] |= ((in[w + 46] & 0x000000000000001fULL) << 38);
        out[c + 3] |= ((in[w + 47] & 0x000000000000001fULL) << 43);
        out[c + 3] |= ((in[w + 48] & 0x000000000000001fULL) << 48);
        out[c + 3] |= ((in[w + 49] & 0x000000000000001fULL) << 53);
        out[c + 3] |= ((in[w + 50] & 0x000000000000001fULL) << 58);
        out[c + 3] |= ((in[w + 51] & 0x000000000000001fULL) << 63);
        out[c + 4]  = ((in[w + 52] & 0x000000000000001fULL) <<  4) | ((in[w + 51] & 0x000000000000001fULL) >> 1);
        out[c + 4] |= ((in[w + 53] & 0x000000000000001fULL) <<  9);
        out[c + 4] |= ((in[w + 54] & 0x000000000000001fULL) << 14);
        out[c + 4] |= ((in[w + 55] & 0x000000000000001fULL) << 19);
        out[c + 4] |= ((in[w + 56] & 0x000000000000001fULL) << 24);
        out[c + 4] |= ((in[w + 57] & 0x000000000000001fULL) << 29);
        out[c + 4] |= ((in[w + 58] & 0x000000000000001fULL) << 34);
        out[c + 4] |= ((in[w + 59] & 0x000000000000001fULL) << 39);
        out[c + 4] |= ((in[w + 60] & 0x000000000000001fULL) << 44);
        out[c + 4] |= ((in[w + 61] & 0x000000000000001fULL) << 49);
        out[c + 4] |= ((in[w + 62] & 0x000000000000001fULL) << 54);
        out[c + 4] |= ((in[w + 63] & 0x000000000000001fULL) << 59);
    }
}

void
pack_64_into_6(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 3, w += 32) {
        out[c + 0]  = ((in[w +  0] & 0x000000000000003fULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x000000000000003fULL) <<  6);
        out[c + 0] |= ((in[w +  2] & 0x000000000000003fULL) << 12);
        out[c + 0] |= ((in[w +  3] & 0x000000000000003fULL) << 18);
        out[c + 0] |= ((in[w +  4] & 0x000000000000003fULL) << 24);
        out[c + 0] |= ((in[w +  5] & 0x000000000000003fULL) << 30);
        out[c + 0] |= ((in[w +  6] & 0x000000000000003fULL) << 36);
        out[c + 0] |= ((in[w +  7] & 0x000000000000003fULL) << 42);
        out[c + 0] |= ((in[w +  8] & 0x000000000000003fULL) << 48);
        out[c + 0] |= ((in[w +  9] & 0x000000000000003fULL) << 54);
        out[c + 0] |= ((in[w + 10] & 0x000000000000003fULL) << 60);
        out[c + 1]  = ((in[w + 11] & 0x000000000000003fULL) <<  2) | ((in[w + 10] & 0x000000000000003fULL) >> 4);
        out[c + 1] |= ((in[w + 12] & 0x000000000000003fULL) <<  8);
        out[c + 1] |= ((in[w + 13] & 0x000000000000003fULL) << 14);
        out[c + 1] |= ((in[w + 14] & 0x000000000000003fULL) << 20);
        out[c + 1] |= ((in[w + 15] & 0x000000000000003fULL) << 26);
        out[c + 1] |= ((in[w + 16] & 0x000000000000003fULL) << 32);
        out[c + 1] |= ((in[w + 17] & 0x000000000000003fULL) << 38);
        out[c + 1] |= ((in[w + 18] & 0x000000000000003fULL) << 44);
        out[c + 1] |= ((in[w + 19] & 0x000000000000003fULL) << 50);
        out[c + 1] |= ((in[w + 20] & 0x000000000000003fULL) << 56);
        out[c + 1] |= ((in[w + 21] & 0x000000000000003fULL) << 62);
        out[c + 2]  = ((in[w + 22] & 0x000000000000003fULL) <<  4) | ((in[w + 21] & 0x000000000000003fULL) >> 2);
        out[c + 2] |= ((in[w + 23] & 0x000000000000003fULL) << 10);
        out[c + 2] |= ((in[w + 24] & 0x000000000000003fULL) << 16);
        out[c + 2] |= ((in[w + 25] & 0x000000000000003fULL) << 22);
        out[c + 2] |= ((in[w + 26] & 0x000000000000003fULL) << 28);
        out[c + 2] |= ((in[w + 27] & 0x000000000000003fULL) << 34);
        out[c + 2] |= ((in[w + 28] & 0x000000000000003fULL) << 40);
        out[c + 2] |= ((in[w + 29] & 0x000000000000003fULL) << 46);
        out[c + 2] |= ((in[w + 30] & 0x000000000000003fULL) << 52);
        out[c + 2] |= ((in[w + 31] & 0x000000000000003fULL) << 58);
    }
}

void
pack_64_into_7(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 7, w += 64) {
        out[c + 0]  = ((in[w +  0] & 0x000000000000007fULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x000000000000007fULL) <<  7);
        out[c + 0] |= ((in[w +  2] & 0x000000000000007fULL) << 14);
        out[c + 0] |= ((in[w +  3] & 0x000000000000007fULL) << 21);
        out[c + 0] |= ((in[w +  4] & 0x000000000000007fULL) << 28);
        out[c + 0] |= ((in[w +  5] & 0x000000000000007fULL) << 35);
        out[c + 0] |= ((in[w +  6] & 0x000000000000007fULL) << 42);
        out[c + 0] |= ((in[w +  7] & 0x000000000000007fULL) << 49);
        out[c + 0] |= ((in[w +  8] & 0x000000000000007fULL) << 56);
        out[c + 0] |= ((in[w +  9] & 0x000000000000007fULL) << 63);
        out[c + 1]  = ((in[w + 10] & 0x000000000000007fULL) <<  6) | ((in[w +  9] & 0x000000000000007fULL) >> 1);
        out[c + 1] |= ((in[w + 11] & 0x000000000000007fULL) << 13);
        out[c + 1] |= ((in[w + 12] & 0x000000000000007fULL) << 20);
        out[c + 1] |= ((in[w + 13] & 0x000000000000007fULL) << 27);
        out[c + 1] |= ((in[w + 14] & 0x000000000000007fULL) << 34);
        out[c + 1] |= ((in[w + 15] & 0x000000000000007fULL) << 41);
        out[c + 1] |= ((in[w + 16] & 0x000000000000007fULL) << 48);
        out[c + 1] |= ((in[w + 17] & 0x000000000000007fULL) << 55);
        out[c + 1] |= ((in[w + 18] & 0x000000000000007fULL) << 62);
        out[c + 2]  = ((in[w + 19] & 0x000000000000007fULL) <<  5) | ((in[w + 18] & 0x000000000000007fULL) >> 2);
        out[c + 2] |= ((in[w + 20] & 0x000000000000007fULL) << 12);
        out[c + 2] |= ((in[w + 21] & 0x000000000000007fULL) << 19);
        out[c + 2] |= ((in[w + 22] & 0x000000000000007fULL) << 26);
        out[c + 2] |= ((in[w + 23] & 0x000000000000007fULL) << 33);
        out[c + 2] |= ((in[w + 24] & 0x000000000000007fULL) << 40);
        out[c + 2] |= ((in[w + 25] & 0x000000000000007fULL) << 47);
        out[c + 2] |= ((in[w + 26] & 0x000000000000007fULL) << 54);
        out[c + 2] |= ((in[w + 27] & 0x000000000000007fULL) << 61);
        out[c + 3]  = ((in[w + 28] & 0x000000000000007fULL) <<  4) | ((in[w + 27] & 0x000000000000007fULL) >> 3);
        out[c + 3] |= ((in[w + 29] & 0x000000000000007fULL) << 11);
        out[c + 3] |= ((in[w + 30] & 0x000000000000007fULL) << 18);
        out[c + 3] |= ((in[w + 31] & 0x000000000000007fULL) << 25);
        out[c + 3] |= ((in[w + 32] & 0x000000000000007fULL) << 32);
        out[c + 3] |= ((in[w + 33] & 0x000000000000007fULL) << 39);
        out[c + 3] |= ((in[w + 34] & 0x000000000000007fULL) << 46);
        out[c + 3] |= ((in[w + 35] & 0x000000000000007fULL) << 53);
        out[c + 3] |= ((in[w + 36] & 0x000000000000007fULL) << 60);
        out[c + 4]  = ((in[w + 37] & 0x000000000000007fULL) <<  3) | ((in[w + 36] & 0x000000000000007fULL) >> 4);
        out[c + 4] |= ((in[w + 38] & 0x000000000000007fULL) << 10);
        out[c + 4] |= ((in[w + 39] & 0x000000000000007fULL) << 17);
        out[c + 4] |= ((in[w + 40] & 0x000000000000007fULL) << 24);
        out[c + 4] |= ((in[w + 41] & 0x000000000000007fULL) << 31);
        out[c + 4] |= ((in[w + 42] & 0x000000000000007fULL) << 38);
        out[c + 4] |= ((in[w + 43] & 0x000000000000007fULL) << 45);
        out[c + 4] |= ((in[w + 44] & 0x000000000000007fULL) << 52);
        out[c + 4] |= ((in[w + 45] & 0x000000000000007fULL) << 59);
        out[c + 5]  = ((in[w + 46] & 0x000000000000007fULL) <<  2) | ((in[w + 45] & 0x000000000000007fULL) >> 5);
        out[c + 5] |= ((in[w + 47] & 0x000000000000007fULL) <<  9);
        out[c + 5] |= ((in[w + 48] & 0x000000000000007fULL) << 16);
        out[c + 5] |= ((in[w + 49] & 0x000000000000007fULL) << 23);
        out[c + 5] |= ((in[w + 50] & 0x000000000000007fULL) << 30);
        out[c + 5] |= ((in[w + 51] & 0x000000000000007fULL) << 37);
        out[c + 5] |= ((in[w + 52] & 0x000000000000007fULL) << 44);
        out[c + 5] |= ((in[w + 53] & 0x000000000000007fULL) << 51);
        out[c + 5] |= ((in[w + 54] & 0x000000000000007fULL) << 58);
        out[c + 6]  = ((in[w + 55] & 0x000000000000007fULL) <<  1) | ((in[w + 54] & 0x000000000000007fULL) >> 6);
        out[c + 6] |= ((in[w + 56] & 0x000000000000007fULL) <<  8);
        out[c + 6] |= ((in[w + 57] & 0x000000000000007fULL) << 15);
        out[c + 6] |= ((in[w + 58] & 0x000000000000007fULL) << 22);
        out[c + 6] |= ((in[w + 59] & 0x000000000000007fULL) << 29);
        out[c + 6] |= ((in[w + 60] & 0x000000000000007fULL) << 36);
        out[c + 6] |= ((in[w + 61] & 0x000000000000007fULL) << 43);
        out[c + 6] |= ((in[w + 62] & 0x000000000000007fULL) << 50);
        out[c + 6] |= ((in[w + 63] & 0x000000000000007fULL) << 57);
    }
}

void
pack_64_into_8(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 1, w += 8) {
        out[c + 0]  = ((in[w + 0] & 0x00000000000000ffULL) <<  0);
        out[c + 0] |= ((in[w + 1] & 0x00000000000000ffULL) <<  8);
        out[c + 0] |= ((in[w + 2] & 0x00000000000000ffULL) << 16);
        out[c + 0] |= ((in[w + 3] & 0x00000000000000ffULL) << 24);
        out[c + 0] |= ((in[w + 4] & 0x00000000000000ffULL) << 32);
        out[c + 0] |= ((in[w + 5] & 0x00000000000000ffULL) << 40);
        out[c + 0] |= ((in[w + 6] & 0x00000000000000ffULL) << 48);
        out[c + 0] |= ((in[w + 7] & 0x00000000000000ffULL) << 56);
    }
}

void
pack_64_into_9(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 9, w += 64) {
        out[c + 0]  = ((in[w +  0] & 0x00000000000001ffULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x00000000000001ffULL) <<  9);
        out[c + 0] |= ((in[w +  2] & 0x00000000000001ffULL) << 18);
        out[c + 0] |= ((in[w +  3] & 0x00000000000001ffULL) << 27);
        out[c + 0] |= ((in[w +  4] & 0x00000000000001ffULL) << 36);
        out[c + 0] |= ((in[w +  5] & 0x00000000000001ffULL) << 45);
        out[c + 0] |= ((in[w +  6] & 0x00000000000001ffULL) << 54);
        out[c + 0] |= ((in[w +  7] & 0x00000000000001ffULL) << 63);
        out[c + 1]  = ((in[w +  8] & 0x00000000000001ffULL) <<  8) | ((in[w +  7] & 0x00000000000001ffULL) >> 1);
        out[c + 1] |= ((in[w +  9] & 0x00000000000001ffULL) << 17);
        out[c + 1] |= ((in[w + 10] & 0x00000000000001ffULL) << 26);
        out[c + 1] |= ((in[w + 11] & 0x00000000000001ffULL) << 35);
        out[c + 1] |= ((in[w + 12] & 0x00000000000001ffULL) << 44);
        out[c + 1] |= ((in[w + 13] & 0x00000000000001ffULL) << 53);
        out[c + 1] |= ((in[w + 14] & 0x00000000000001ffULL) << 62);
        out[c + 2]  = ((in[w + 15] & 0x00000000000001ffULL) <<  7) | ((in[w + 14] & 0x00000000000001ffULL) >> 2);
        out[c + 2] |= ((in[w + 16] & 0x00000000000001ffULL) << 16);
        out[c + 2] |= ((in[w + 17] & 0x00000000000001ffULL) << 25);
        out[c + 2] |= ((in[w + 18] & 0x00000000000001ffULL) << 34);
        out[c + 2] |= ((in[w + 19] & 0x00000000000001ffULL) << 43);
        out[c + 2] |= ((in[w + 20] & 0x00000000000001ffULL) << 52);
        out[c + 2] |= ((in[w + 21] & 0x00000000000001ffULL) << 61);
        out[c + 3]  = ((in[w + 22] & 0x00000000000001ffULL) <<  6) | ((in[w + 21] & 0x00000000000001ffULL) >> 3);
        out[c + 3] |= ((in[w + 23] & 0x00000000000001ffULL) << 15);
        out[c + 3] |= ((in[w + 24] & 0x00000000000001ffULL) << 24);
        out[c + 3] |= ((in[w + 25] & 0x00000000000001ffULL) << 33);
        out[c + 3] |= ((in[w + 26] & 0x00000000000001ffULL) << 42);
        out[c + 3] |= ((in[w + 27] & 0x00000000000001ffULL) << 51);
        out[c + 3] |= ((in[w + 28] & 0x00000000000001ffULL) << 60);
        out[c + 4]  = ((in[w + 29] & 0x00000000000001ffULL) <<  5) | ((in[w + 28] & 0x00000000000001ffULL) >> 4);
        out[c + 4] |= ((in[w + 30] & 0x00000000000001ffULL) << 14);
        out[c + 4] |= ((in[w + 31] & 0x00000000000001ffULL) << 23);
        out[c + 4] |= ((in[w + 32] & 0x00000000000001ffULL) << 32);
        out[c + 4] |= ((in[w + 33] & 0x00000000000001ffULL) << 41);
        out[c + 4] |= ((in[w + 34] & 0x00000000000001ffULL) << 50);
        out[c + 4] |= ((in[w + 35] & 0x00000000000001ffULL) << 59);
        out[c + 5]  = ((in[w + 36] & 0x00000000000001ffULL) <<  4) | ((in[w + 35] & 0x00000000000001ffULL) >> 5);
        out[c + 5] |= ((in[w + 37] & 0x00000000000001ffULL) << 13);
        out[c + 5] |= ((in[w + 38] & 0x00000000000001ffULL) << 22);
        out[c + 5] |= ((in[w + 39] & 0x00000000000001ffULL) << 31);
        out[c + 5] |= ((in[w + 40] & 0x00000000000001ffULL) << 40);
        out[c + 5] |= ((in[w + 41] & 0x00000000000001ffULL) << 49);
        out[c + 5] |= ((in[w + 42] & 0x00000000000001ffULL) << 58);
        out[c + 6]  = ((in[w + 43] & 0x00000000000001ffULL) <<  3) | ((in[w + 42] & 0x00000000000001ffULL) >> 6);
        out[c + 6] |= ((in[w + 44] & 0x00000000000001ffULL) << 12);
        out[c + 6] |= ((in[w + 45] & 0x00000000000001ffULL) << 21);
        out[c + 6] |= ((in[w + 46] & 0x00000000000001ffULL) << 30);
        out[c + 6] |= ((in[w + 47] & 0x00000000000001ffULL) << 39);
        out[c + 6] |= ((in[w + 48] & 0x00000000000001ffULL) << 48);
        out[c + 6] |= ((in[w + 49] & 0x00000000000001ffULL) << 57);
        out[c + 7]  = ((in[w + 50] & 0x00000000000001ffULL) <<  2) | ((in[w + 49] & 0x00000000000001ffULL) >> 7);
        out[c + 7] |= ((in[w + 51] & 0x00000000000001ffULL) << 11);
        out[c + 7] |= ((in[w + 52] & 0x00000000000001ffULL) << 20);
        out[c + 7] |= ((in[w + 53] & 0x00000000000001ffULL) << 29);
        out[c + 7] |= ((in[w + 54] & 0x00000000000001ffULL) << 38);
        out[c + 7] |= ((in[w + 55] & 0x00000000000001ffULL) << 47);
        out[c + 7] |= ((in[w + 56] & 0x00000000000001ffULL) << 56);
        out[c + 8]  = ((in[w + 57] & 0x00000000000001ffULL) <<  1) | ((in[w + 56] & 0x00000000000001ffULL) >> 8);
        out[c + 8] |= ((in[w + 58] & 0x00000000000001ffULL) << 10);
        out[c + 8] |= ((in[w + 59] & 0x00000000000001ffULL) << 19);
        out[c + 8] |= ((in[w + 60] & 0x00000000000001ffULL) << 28);
        out[c + 8] |= ((in[w + 61] & 0x00000000000001ffULL) << 37);
        out[c + 8] |= ((in[w + 62] & 0x00000000000001ffULL) << 46);
        out[c + 8] |= ((in[w + 63] & 0x00000000000001ffULL) << 55);
    }
}

void
pack_64_into_10(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 5, w += 32) {
        out[c + 0]  = ((in[w +  0] & 0x00000000000003ffULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x00000000000003ffULL) << 10);
        out[c + 0] |= ((in[w +  2] & 0x00000000000003ffULL) << 20);
        out[c + 0] |= ((in[w +  3] & 0x00000000000003ffULL) << 30);
        out[c + 0] |= ((in[w +  4] & 0x00000000000003ffULL) << 40);
        out[c + 0] |= ((in[w +  5] & 0x00000000000003ffULL) << 50);
        out[c + 0] |= ((in[w +  6] & 0x00000000000003ffULL) << 60);
        out[c + 1]  = ((in[w +  7] & 0x00000000000003ffULL) <<  6) | ((in[w +  6] & 0x00000000000003ffULL) >> 4);
        out[c + 1] |= ((in[w +  8] & 0x00000000000003ffULL) << 16);
        out[c + 1] |= ((in[w +  9] & 0x00000000000003ffULL) << 26);
        out[c + 1] |= ((in[w + 10] & 0x00000000000003ffULL) << 36);
        out[c + 1] |= ((in[w + 11] & 0x00000000000003ffULL) << 46);
        out[c + 1] |= ((in[w + 12] & 0x00000000000003ffULL) << 56);
        out[c + 2]  = ((in[w + 13] & 0x00000000000003ffULL) <<  2) | ((in[w + 12] & 0x00000000000003ffULL) >> 8);
        out[c + 2] |= ((in[w + 14] & 0x00000000000003ffULL) << 12);
        out[c + 2] |= ((in[w + 15] & 0x00000000000003ffULL) << 22);
        out[c + 2] |= ((in[w + 16] & 0x00000000000003ffULL) << 32);
        out[c + 2] |= ((in[w + 17] & 0x00000000000003ffULL) << 42);
        out[c + 2] |= ((in[w + 18] & 0x00000000000003ffULL) << 52);
        out[c + 2] |= ((in[w + 19] & 0x00000000000003ffULL) << 62);
        out[c + 3]  = ((in[w + 20] & 0x00000000000003ffULL) <<  8) | ((in[w + 19] & 0x00000000000003ffULL) >> 2);
        out[c + 3] |= ((in[w + 21] & 0x00000000000003ffULL) << 18);
        out[c + 3] |= ((in[w + 22] & 0x00000000000003ffULL) << 28);
        out[c + 3] |= ((in[w + 23] & 0x00000000000003ffULL) << 38);
        out[c + 3] |= ((in[w + 24] & 0x00000000000003ffULL) << 48);
        out[c + 3] |= ((in[w + 25] & 0x00000000000003ffULL) << 58);
        out[c + 4]  = ((in[w + 26] & 0x00000000000003ffULL) <<  4) | ((in[w + 25] & 0x00000000000003ffULL) >> 6);
        out[c + 4] |= ((in[w + 27] & 0x00000000000003ffULL) << 14);
        out[c + 4] |= ((in[w + 28] & 0x00000000000003ffULL) << 24);
        out[c + 4] |= ((in[w + 29] & 0x00000000000003ffULL) << 34);
        out[c + 4] |= ((in[w + 30] & 0x00000000000003ffULL) << 44);
        out[c + 4] |= ((in[w + 31] & 0x00000000000003ffULL) << 54);
    }
}

void
pack_64_into_11(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 11, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x00000000000007ffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x00000000000007ffULL) << 11);
        out[c +  0] |= ((in[w +  2] & 0x00000000000007ffULL) << 22);
        out[c +  0] |= ((in[w +  3] & 0x00000000000007ffULL) << 33);
        out[c +  0] |= ((in[w +  4] & 0x00000000000007ffULL) << 44);
        out[c +  0] |= ((in[w +  5] & 0x00000000000007ffULL) << 55);
        out[c +  1]  = ((in[w +  6] & 0x00000000000007ffULL) <<  2) | ((in[w +  5] & 0x00000000000007ffULL) >> 9);
        out[c +  1] |= ((in[w +  7] & 0x00000000000007ffULL) << 13);
        out[c +  1] |= ((in[w +  8] & 0x00000000000007ffULL) << 24);
        out[c +  1] |= ((in[w +  9] & 0x00000000000007ffULL) << 35);
        out[c +  1] |= ((in[w + 10] & 0x00000000000007ffULL) << 46);
        out[c +  1] |= ((in[w + 11] & 0x00000000000007ffULL) << 57);
        out[c +  2]  = ((in[w + 12] & 0x00000000000007ffULL) <<  4) | ((in[w + 11] & 0x00000000000007ffULL) >> 7);
        out[c +  2] |= ((in[w + 13] & 0x00000000000007ffULL) << 15);
        out[c +  2] |= ((in[w + 14] & 0x00000000000007ffULL) << 26);
        out[c +  2] |= ((in[w + 15] & 0x00000000000007ffULL) << 37);
        out[c +  2] |= ((in[w + 16] & 0x00000000000007ffULL) << 48);
        out[c +  2] |= ((in[w + 17] & 0x00000000000007ffULL) << 59);
        out[c +  3]  = ((in[w + 18] & 0x00000000000007ffULL) <<  6) | ((in[w + 17] & 0x00000000000007ffULL) >> 5);
        out[c +  3] |= ((in[w + 19] & 0x00000000000007ffULL) << 17);
        out[c +  3] |= ((in[w + 20] & 0x00000000000007ffULL) << 28);
        out[c +  3] |= ((in[w + 21] & 0x00000000000007ffULL) << 39);
        out[c +  3] |= ((in[w + 22] & 0x00000000000007ffULL) << 50);
        out[c +  3] |= ((in[w + 23] & 0x00000000000007ffULL) << 61);
        out[c +  4]  = ((in[w + 24] & 0x00000000000007ffULL) <<  8) | ((in[w + 23] & 0x00000000000007ffULL) >> 3);
        out[c +  4] |= ((in[w + 25] & 0x00000000000007ffULL) << 19);
        out[c +  4] |= ((in[w + 26] & 0x00000000000007ffULL) << 30);
        out[c +  4] |= ((in[w + 27] & 0x00000000000007ffULL) << 41);
        out[c +  4] |= ((in[w + 28] & 0x00000000000007ffULL) << 52);
        out[c +  4] |= ((in[w + 29] & 0x00000000000007ffULL) << 63);
        out[c +  5]  = ((in[w + 30] & 0x00000000000007ffULL) << 10) | ((in[w + 29] & 0x00000000000007ffULL) >> 1);
        out[c +  5] |= ((in[w + 31] & 0x00000000000007ffULL) << 21);
        out[c +  5] |= ((in[w + 32] & 0x00000000000007ffULL) << 32);
        out[c +  5] |= ((in[w + 33] & 0x00000000000007ffULL) << 43);
        out[c +  5] |= ((in[w + 34] & 0x00000000000007ffULL) << 54);
        out[c +  6]  = ((in[w + 35] & 0x00000000000007ffULL) <<  1) | ((in[w + 34] & 0x00000000000007ffULL) >> 10);
        out[c +  6] |= ((in[w + 36] & 0x00000000000007ffULL) << 12);
        out[c +  6] |= ((in[w + 37] & 0x00000000000007ffULL) << 23);
        out[c +  6] |= ((in[w + 38] & 0x00000000000007ffULL) << 34);
        out[c +  6] |= ((in[w + 39] & 0x00000000000007ffULL) << 45);
        out[c +  6] |= ((in[w + 40] & 0x00000000000007ffULL) << 56);
        out[c +  7]  = ((in[w + 41] & 0x00000000000007ffULL) <<  3) | ((in[w + 40] & 0x00000000000007ffULL) >> 8);
        out[c +  7] |= ((in[w + 42] & 0x00000000000007ffULL) << 14);
        out[c +  7] |= ((in[w + 43] & 0x00000000000007ffULL) << 25);
        out[c +  7] |= ((in[w + 44] & 0x00000000000007ffULL) << 36);
        out[c +  7] |= ((in[w + 45] & 0x00000000000007ffULL) << 47);
        out[c +  7] |= ((in[w + 46] & 0x00000000000007ffULL) << 58);
        out[c +  8]  = ((in[w + 47] & 0x00000000000007ffULL) <<  5) | ((in[w + 46] & 0x00000000000007ffULL) >> 6);
        out[c +  8] |= ((in[w + 48] & 0x00000000000007ffULL) << 16);
        out[c +  8] |= ((in[w + 49] & 0x00000000000007ffULL) << 27);
        out[c +  8] |= ((in[w + 50] & 0x00000000000007ffULL) << 38);
        out[c +  8] |= ((in[w + 51] & 0x00000000000007ffULL) << 49);
        out[c +  8] |= ((in[w + 52] & 0x00000000000007ffULL) << 60);
        out[c +  9]  = ((in[w + 53] & 0x00000000000007ffULL) <<  7) | ((in[w + 52] & 0x00000000000007ffULL) >> 4);
        out[c +  9] |= ((in[w + 54] & 0x00000000000007ffULL) << 18);
        out[c +  9] |= ((in[w + 55] & 0x00000000000007ffULL) << 29);
        out[c +  9] |= ((in[w + 56] & 0x00000000000007ffULL) << 40);
        out[c +  9] |= ((in[w + 57] & 0x00000000000007ffULL) << 51);
        out[c +  9] |= ((in[w + 58] & 0x00000000000007ffULL) << 62);
        out[c + 10]  = ((in[w + 59] & 0x00000000000007ffULL) <<  9) | ((in[w + 58] & 0x00000000000007ffULL) >> 2);
        out[c + 10] |= ((in[w + 60] & 0x00000000000007ffULL) << 20);
        out[c + 10] |= ((in[w + 61] & 0x00000000000007ffULL) << 31);
        out[c + 10] |= ((in[w + 62] & 0x00000000000007ffULL) << 42);
        out[c + 10] |= ((in[w + 63] & 0x00000000000007ffULL) << 53);
    }
}

void
pack_64_into_12(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 3, w += 16) {
        out[c + 0]  = ((in[w +  0] & 0x0000000000000fffULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x0000000000000fffULL) << 12);
        out[c + 0] |= ((in[w +  2] & 0x0000000000000fffULL) << 24);
        out[c + 0] |= ((in[w +  3] & 0x0000000000000fffULL) << 36);
        out[c + 0] |= ((in[w +  4] & 0x0000000000000fffULL) << 48);
        out[c + 0] |= ((in[w +  5] & 0x0000000000000fffULL) << 60);
        out[c + 1]  = ((in[w +  6] & 0x0000000000000fffULL) <<  8) | ((in[w +  5] & 0x0000000000000fffULL) >> 4);
        out[c + 1] |= ((in[w +  7] & 0x0000000000000fffULL) << 20);
        out[c + 1] |= ((in[w +  8] & 0x0000000000000fffULL) << 32);
        out[c + 1] |= ((in[w +  9] & 0x0000000000000fffULL) << 44);
        out[c + 1] |= ((in[w + 10] & 0x0000000000000fffULL) << 56);
        out[c + 2]  = ((in[w + 11] & 0x0000000000000fffULL) <<  4) | ((in[w + 10] & 0x0000000000000fffULL) >> 8);
        out[c + 2] |= ((in[w + 12] & 0x0000000000000fffULL) << 16);
        out[c + 2] |= ((in[w + 13] & 0x0000000000000fffULL) << 28);
        out[c + 2] |= ((in[w + 14] & 0x0000000000000fffULL) << 40);
        out[c + 2] |= ((in[w + 15] & 0x0000000000000fffULL) << 52);
    }
}

void
pack_64_into_13(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 13, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x0000000000001fffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x0000000000001fffULL) << 13);
        out[c +  0] |= ((in[w +  2] & 0x0000000000001fffULL) << 26);
        out[c +  0] |= ((in[w +  3] & 0x0000000000001fffULL) << 39);
        out[c +  0] |= ((in[w +  4] & 0x0000000000001fffULL) << 52);
        out[c +  1]  = ((in[w +  5] & 0x0000000000001fffULL) <<  1) | ((in[w +  4] & 0x0000000000001fffULL) >> 12);
        out[c +  1] |= ((in[w +  6] & 0x0000000000001fffULL) << 14);
        out[c +  1] |= ((in[w +  7] & 0x0000000000001fffULL) << 27);
        out[c +  1] |= ((in[w +  8] & 0x0000000000001fffULL) << 40);
        out[c +  1] |= ((in[w +  9] & 0x0000000000001fffULL) << 53);
        out[c +  2]  = ((in[w + 10] & 0x0000000000001fffULL) <<  2) | ((in[w +  9] & 0x0000000000001fffULL) >> 11);
        out[c +  2] |= ((in[w + 11] & 0x0000000000001fffULL) << 15);
        out[c +  2] |= ((in[w + 12] & 0x0000000000001fffULL) << 28);
        out[c +  2] |= ((in[w + 13] & 0x0000000000001fffULL) << 41);
        out[c +  2] |= ((in[w + 14] & 0x0000000000001fffULL) << 54);
        out[c +  3]  = ((in[w + 15] & 0x0000000000001fffULL) <<  3) | ((in[w + 14] & 0x0000000000001fffULL) >> 10);
        out[c +  3] |= ((in[w + 16] & 0x0000000000001fffULL) << 16);
        out[c +  3] |= ((in[w + 17] & 0x0000000000001fffULL) << 29);
        out[c +  3] |= ((in[w + 18] & 0x0000000000001fffULL) << 42);
        out[c +  3] |= ((in[w + 19] & 0x0000000000001fffULL) << 55);
        out[c +  4]  = ((in[w + 20] & 0x0000000000001fffULL) <<  4) | ((in[w + 19] & 0x0000000000001fffULL) >> 9);
        out[c +  4] |= ((in[w + 21] & 0x0000000000001fffULL) << 17);
        out[c +  4] |= ((in[w + 22] & 0x0000000000001fffULL) << 30);
        out[c +  4] |= ((in[w + 23] & 0x0000000000001fffULL) << 43);
        out[c +  4] |= ((in[w + 24] & 0x0000000000001fffULL) << 56);
        out[c +  5]  = ((in[w + 25] & 0x0000000000001fffULL) <<  5) | ((in[w + 24] & 0x0000000000001fffULL) >> 8);
        out[c +  5] |= ((in[w + 26] & 0x0000000000001fffULL) << 18);
        out[c +  5] |= ((in[w + 27] & 0x0000000000001fffULL) << 31);
        out[c +  5] |= ((in[w + 28] & 0x0000000000001fffULL) << 44);
        out[c +  5] |= ((in[w + 29] & 0x0000000000001fffULL) << 57);
        out[c +  6]  = ((in[w + 30] & 0x0000000000001fffULL) <<  6) | ((in[w + 29] & 0x0000000000001fffULL) >> 7);
        out[c +  6] |= ((in[w + 31] & 0x0000000000001fffULL) << 19);
        out[c +  6] |= ((in[w + 32] & 0x0000000000001fffULL) << 32);
        out[c +  6] |= ((in[w + 33] & 0x0000000000001fffULL) << 45);
        out[c +  6] |= ((in[w + 34] & 0x0000000000001fffULL) << 58);
        out[c +  7]  = ((in[w + 35] & 0x0000000000001fffULL) <<  7) | ((in[w + 34] & 0x0000000000001fffULL) >> 6);
        out[c +  7] |= ((in[w + 36] & 0x0000000000001fffULL) << 20);
        out[c +  7] |= ((in[w + 37] & 0x0000000000001fffULL) << 33);
        out[c +  7] |= ((in[w + 38] & 0x0000000000001fffULL) << 46);
        out[c +  7] |= ((in[w + 39] & 0x0000000000001fffULL) << 59);
        out[c +  8]  = ((in[w + 40] & 0x0000000000001fffULL) <<  8) | ((in[w + 39] & 0x0000000000001fffULL) >> 5);
        out[c +  8] |= ((in[w + 41] & 0x0000000000001fffULL) << 21);
        out[c +  8] |= ((in[w + 42] & 0x0000000000001fffULL) << 34);
        out[c +  8] |= ((in[w + 43] & 0x0000000000001fffULL) << 47);
        out[c +  8] |= ((in[w + 44] & 0x0000000000001fffULL) << 60);
        out[c +  9]  = ((in[w + 45] & 0x0000000000001fffULL) <<  9) | ((in[w + 44] & 0x0000000000001fffULL) >> 4);
        out[c +  9] |= ((in[w + 46] & 0x0000000000001fffULL) << 22);
        out[c +  9] |= ((in[w + 47] & 0x0000000000001fffULL) << 35);
        out[c +  9] |= ((in[w + 48] & 0x0000000000001fffULL) << 48);
        out[c +  9] |= ((in[w + 49] & 0x0000000000001fffULL) << 61);
        out[c + 10]  = ((in[w + 50] & 0x0000000000001fffULL) << 10) | ((in[w + 49] & 0x0000000000001fffULL) >> 3);
        out[c + 10] |= ((in[w + 51] & 0x0000000000001fffULL) << 23);
        out[c + 10] |= ((in[w + 52] & 0x0000000000001fffULL) << 36);
        out[c + 10] |= ((in[w + 53] & 0x0000000000001fffULL) << 49);
        out[c + 10] |= ((in[w + 54] & 0x0000000000001fffULL) << 62);
        out[c + 11]  = ((in[w + 55] & 0x0000000000001fffULL) << 11) | ((in[w + 54] & 0x0000000000001fffULL) >> 2);
        out[c + 11] |= ((in[w + 56] & 0x0000000000001fffULL) << 24);
        out[c + 11] |= ((in[w + 57] & 0x0000000000001fffULL) << 37);
        out[c + 11] |= ((in[w + 58] & 0x0000000000001fffULL) << 50);
        out[c + 11] |= ((in[w + 59] & 0x0000000000001fffULL) << 63);
        out[c + 12]  = ((in[w + 60] & 0x0000000000001fffULL) << 12) | ((in[w + 59] & 0x0000000000001fffULL) >> 1);
        out[c + 12] |= ((in[w + 61] & 0x0000000000001fffULL) << 25);
        out[c + 12] |= ((in[w + 62] & 0x0000000000001fffULL) << 38);
        out[c + 12] |= ((in[w + 63] & 0x0000000000001fffULL) << 51);
    }
}

void
pack_64_into_14(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 7, w += 32) {
        out[c + 0]  = ((in[w +  0] & 0x0000000000003fffULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x0000000000003fffULL) << 14);
        out[c + 0] |= ((in[w +  2] & 0x0000000000003fffULL) << 28);
        out[c + 0] |= ((in[w +  3] & 0x0000000000003fffULL) << 42);
        out[c + 0] |= ((in[w +  4] & 0x0000000000003fffULL) << 56);
        out[c + 1]  = ((in[w +  5] & 0x0000000000003fffULL) <<  6) | ((in[w +  4] & 0x0000000000003fffULL) >> 8);
        out[c + 1] |= ((in[w +  6] & 0x0000000000003fffULL) << 20);
        out[c + 1] |= ((in[w +  7] & 0x0000000000003fffULL) << 34);
        out[c + 1] |= ((in[w +  8] & 0x0000000000003fffULL) << 48);
        out[c + 1] |= ((in[w +  9] & 0x0000000000003fffULL) << 62);
        out[c + 2]  = ((in[w + 10] & 0x0000000000003fffULL) << 12) | ((in[w +  9] & 0x0000000000003fffULL) >> 2);
        out[c + 2] |= ((in[w + 11] & 0x0000000000003fffULL) << 26);
        out[c + 2] |= ((in[w + 12] & 0x0000000000003fffULL) << 40);
        out[c + 2] |= ((in[w + 13] & 0x0000000000003fffULL) << 54);
        out[c + 3]  = ((in[w + 14] & 0x0000000000003fffULL) <<  4) | ((in[w + 13] & 0x0000000000003fffULL) >> 10);
        out[c + 3] |= ((in[w + 15] & 0x0000000000003fffULL) << 18);
        out[c + 3] |= ((in[w + 16] & 0x0000000000003fffULL) << 32);
        out[c + 3] |= ((in[w + 17] & 0x0000000000003fffULL) << 46);
        out[c + 3] |= ((in[w + 18] & 0x0000000000003fffULL) << 60);
        out[c + 4]  = ((in[w + 19] & 0x0000000000003fffULL) << 10) | ((in[w + 18] & 0x0000000000003fffULL) >> 4);
        out[c + 4] |= ((in[w + 20] & 0x0000000000003fffULL) << 24);
        out[c + 4] |= ((in[w + 21] & 0x0000000000003fffULL) << 38);
        out[c + 4] |= ((in[w + 22] & 0x0000000000003fffULL) << 52);
        out[c + 5]  = ((in[w + 23] & 0x0000000000003fffULL) <<  2) | ((in[w + 22] & 0x0000000000003fffULL) >> 12);
        out[c + 5] |= ((in[w + 24] & 0x0000000000003fffULL) << 16);
        out[c + 5] |= ((in[w + 25] & 0x0000000000003fffULL) << 30);
        out[c + 5] |= ((in[w + 26] & 0x0000000000003fffULL) << 44);
        out[c + 5] |= ((in[w + 27] & 0x0000000000003fffULL) << 58);
        out[c + 6]  = ((in[w + 28] & 0x0000000000003fffULL) <<  8) | ((in[w + 27] & 0x0000000000003fffULL) >> 6);
        out[c + 6] |= ((in[w + 29] & 0x0000000000003fffULL) << 22);
        out[c + 6] |= ((in[w + 30] & 0x0000000000003fffULL) << 36);
        out[c + 6] |= ((in[w + 31] & 0x0000000000003fffULL) << 50);
    }
}

void
pack_64_into_15(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 15, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x0000000000007fffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x0000000000007fffULL) << 15);
        out[c +  0] |= ((in[w +  2] & 0x0000000000007fffULL) << 30);
        out[c +  0] |= ((in[w +  3] & 0x0000000000007fffULL) << 45);
        out[c +  0] |= ((in[w +  4] & 0x0000000000007fffULL) << 60);
        out[c +  1]  = ((in[w +  5] & 0x0000000000007fffULL) << 11) | ((in[w +  4] & 0x0000000000007fffULL) >> 4);
        out[c +  1] |= ((in[w +  6] & 0x0000000000007fffULL) << 26);
        out[c +  1] |= ((in[w +  7] & 0x0000000000007fffULL) << 41);
        out[c +  1] |= ((in[w +  8] & 0x0000000000007fffULL) << 56);
        out[c +  2]  = ((in[w +  9] & 0x0000000000007fffULL) <<  7) | ((in[w +  8] & 0x0000000000007fffULL) >> 8);
        out[c +  2] |= ((in[w + 10] & 0x0000000000007fffULL) << 22);
        out[c +  2] |= ((in[w + 11] & 0x0000000000007fffULL) << 37);
        out[c +  2] |= ((in[w + 12] & 0x0000000000007fffULL) << 52);
        out[c +  3]  = ((in[w + 13] & 0x0000000000007fffULL) <<  3) | ((in[w + 12] & 0x0000000000007fffULL) >> 12);
        out[c +  3] |= ((in[w + 14] & 0x0000000000007fffULL) << 18);
        out[c +  3] |= ((in[w + 15] & 0x0000000000007fffULL) << 33);
        out[c +  3] |= ((in[w + 16] & 0x0000000000007fffULL) << 48);
        out[c +  3] |= ((in[w + 17] & 0x0000000000007fffULL) << 63);
        out[c +  4]  = ((in[w + 18] & 0x0000000000007fffULL) << 14) | ((in[w + 17] & 0x0000000000007fffULL) >> 1);
        out[c +  4] |= ((in[w + 19] & 0x0000000000007fffULL) << 29);
        out[c +  4] |= ((in[w + 20] & 0x0000000000007fffULL) << 44);
        out[c +  4] |= ((in[w + 21] & 0x0000000000007fffULL) << 59);
        out[c +  5]  = ((in[w + 22] & 0x0000000000007fffULL) << 10) | ((in[w + 21] & 0x0000000000007fffULL) >> 5);
        out[c +  5] |= ((in[w + 23] & 0x0000000000007fffULL) << 25);
        out[c +  5] |= ((in[w + 24] & 0x0000000000007fffULL) << 40);
        out[c +  5] |= ((in[w + 25] & 0x0000000000007fffULL) << 55);
        out[c +  6]  = ((in[w + 26] & 0x0000000000007fffULL) <<  6) | ((in[w + 25] & 0x0000000000007fffULL) >> 9);
        out[c +  6] |= ((in[w + 27] & 0x0000000000007fffULL) << 21);
        out[c +  6] |= ((in[w + 28] & 0x0000000000007fffULL) << 36);
        out[c +  6] |= ((in[w + 29] & 0x0000000000007fffULL) << 51);
        out[c +  7]  = ((in[w + 30] & 0x0000000000007fffULL) <<  2) | ((in[w + 29] & 0x0000000000007fffULL) >> 13);
        out[c +  7] |= ((in[w + 31] & 0x0000000000007fffULL) << 17);
        out[c +  7] |= ((in[w + 32] & 0x0000000000007fffULL) << 32);
        out[c +  7] |= ((in[w + 33] & 0x0000000000007fffULL) << 47);
        out[c +  7] |= ((in[w + 34] & 0x0000000000007fffULL) << 62);
        out[c +  8]  = ((in[w + 35] & 0x0000000000007fffULL) << 13) | ((in[w + 34] & 0x0000000000007fffULL) >> 2);
        out[c +  8] |= ((in[w + 36] & 0x0000000000007fffULL) << 28);
        out[c +  8] |= ((in[w + 37] & 0x0000000000007fffULL) << 43);
        out[c +  8] |= ((in[w + 38] & 0x0000000000007fffULL) << 58);
        out[c +  9]  = ((in[w + 39] & 0x0000000000007fffULL) <<  9) | ((in[w + 38] & 0x0000000000007fffULL) >> 6);
        out[c +  9] |= ((in[w + 40] & 0x0000000000007fffULL) << 24);
        out[c +  9] |= ((in[w + 41] & 0x0000000000007fffULL) << 39);
        out[c +  9] |= ((in[w + 42] & 0x0000000000007fffULL) << 54);
        out[c + 10]  = ((in[w + 43] & 0x0000000000007fffULL) <<  5) | ((in[w + 42] & 0x0000000000007fffULL) >> 10);
        out[c + 10] |= ((in[w + 44] & 0x0000000000007fffULL) << 20);
        out[c + 10] |= ((in[w + 45] & 0x0000000000007fffULL) << 35);
        out[c + 10] |= ((in[w + 46] & 0x0000000000007fffULL) << 50);
        out[c + 11]  = ((in[w + 47] & 0x0000000000007fffULL) <<  1) | ((in[w + 46] & 0x0000000000007fffULL) >> 14);
        out[c + 11] |= ((in[w + 48] & 0x0000000000007fffULL) << 16);
        out[c + 11] |= ((in[w + 49] & 0x0000000000007fffULL) << 31);
        out[c + 11] |= ((in[w + 50] & 0x0000000000007fffULL) << 46);
        out[c + 11] |= ((in[w + 51] & 0x0000000000007fffULL) << 61);
        out[c + 12]  = ((in[w + 52] & 0x0000000000007fffULL) << 12) | ((in[w + 51] & 0x0000000000007fffULL) >> 3);
        out[c + 12] |= ((in[w + 53] & 0x0000000000007fffULL) << 27);
        out[c + 12] |= ((in[w + 54] & 0x0000000000007fffULL) << 42);
        out[c + 12] |= ((in[w + 55] & 0x0000000000007fffULL) << 57);
        out[c + 13]  = ((in[w + 56] & 0x0000000000007fffULL) <<  8) | ((in[w + 55] & 0x0000000000007fffULL) >> 7);
        out[c + 13] |= ((in[w + 57] & 0x0000000000007fffULL) << 23);
        out[c + 13] |= ((in[w + 58] & 0x0000000000007fffULL) << 38);
        out[c + 13] |= ((in[w + 59] & 0x0000000000007fffULL) << 53);
        out[c + 14]  = ((in[w + 60] & 0x0000000000007fffULL) <<  4) | ((in[w + 59] & 0x0000000000007fffULL) >> 11);
        out[c + 14] |= ((in[w + 61] & 0x0000000000007fffULL) << 19);
        out[c + 14] |= ((in[w + 62] & 0x0000000000007fffULL) << 34);
        out[c + 14] |= ((in[w + 63] & 0x0000000000007fffULL) << 49);
    }
}

void
pack_64_into_16(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 1, w += 4) {
        out[c + 0]  = ((in[w + 0] & 0x000000000000ffffULL) <<  0);
        out[c + 0] |= ((in[w + 1] & 0x000000000000ffffULL) << 16);
        out[c + 0] |= ((in[w + 2] & 0x000000000000ffffULL) << 32);
        out[c + 0] |= ((in[w + 3] & 0x000000000000ffffULL) << 48);
    }
}

void
pack_64_into_17(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 17, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x000000000001ffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x000000000001ffffULL) << 17);
        out[c +  0] |= ((in[w +  2] & 0x000000000001ffffULL) << 34);
        out[c +  0] |= ((in[w +  3] & 0x000000000001ffffULL) << 51);
        out[c +  1]  = ((in[w +  4] & 0x000000000001ffffULL) <<  4) | ((in[w +  3] & 0x000000000001ffffULL) >> 13);
        out[c +  1] |= ((in[w +  5] & 0x000000000001ffffULL) << 21);
        out[c +  1] |= ((in[w +  6] & 0x000000000001ffffULL) << 38);
        out[c +  1] |= ((in[w +  7] & 0x000000000001ffffULL) << 55);
        out[c +  2]  = ((in[w +  8] & 0x000000000001ffffULL) <<  8) | ((in[w +  7] & 0x000000000001ffffULL) >> 9);
        out[c +  2] |= ((in[w +  9] & 0x000000000001ffffULL) << 25);
        out[c +  2] |= ((in[w + 10] & 0x000000000001ffffULL) << 42);
        out[c +  2] |= ((in[w + 11] & 0x000000000001ffffULL) << 59);
        out[c +  3]  = ((in[w + 12] & 0x000000000001ffffULL) << 12) | ((in[w + 11] & 0x000000000001ffffULL) >> 5);
        out[c +  3] |= ((in[w + 13] & 0x000000000001ffffULL) << 29);
        out[c +  3] |= ((in[w + 14] & 0x000000000001ffffULL) << 46);
        out[c +  3] |= ((in[w + 15] & 0x000000000001ffffULL) << 63);
        out[c +  4]  = ((in[w + 16] & 0x000000000001ffffULL) << 16) | ((in[w + 15] & 0x000000000001ffffULL) >> 1);
        out[c +  4] |= ((in[w + 17] & 0x000000000001ffffULL) << 33);
        out[c +  4] |= ((in[w + 18] & 0x000000000001ffffULL) << 50);
        out[c +  5]  = ((in[w + 19] & 0x000000000001ffffULL) <<  3) | ((in[w + 18] & 0x000000000001ffffULL) >> 14);
        out[c +  5] |= ((in[w + 20] & 0x000000000001ffffULL) << 20);
        out[c +  5] |= ((in[w + 21] & 0x000000000001ffffULL) << 37);
        out[c +  5] |= ((in[w + 22] & 0x000000000001ffffULL) << 54);
        out[c +  6]  = ((in[w + 23] & 0x000000000001ffffULL) <<  7) | ((in[w + 22] & 0x000000000001ffffULL) >> 10);
        out[c +  6] |= ((in[w + 24] & 0x000000000001ffffULL) << 24);
        out[c +  6] |= ((in[w + 25] & 0x000000000001ffffULL) << 41);
        out[c +  6] |= ((in[w + 26] & 0x000000000001ffffULL) << 58);
        out[c +  7]  = ((in[w + 27] & 0x000000000001ffffULL) << 11) | ((in[w + 26] & 0x000000000001ffffULL) >> 6);
        out[c +  7] |= ((in[w + 28] & 0x000000000001ffffULL) << 28);
        out[c +  7] |= ((in[w + 29] & 0x000000000001ffffULL) << 45);
        out[c +  7] |= ((in[w + 30] & 0x000000000001ffffULL) << 62);
        out[c +  8]  = ((in[w + 31] & 0x000000000001ffffULL) << 15) | ((in[w + 30] & 0x000000000001ffffULL) >> 2);
        out[c +  8] |= ((in[w + 32] & 0x000000000001ffffULL) << 32);
        out[c +  8] |= ((in[w + 33] & 0x000000000001ffffULL) << 49);
        out[c +  9]  = ((in[w + 34] & 0x000000000001ffffULL) <<  2) | ((in[w + 33] & 0x000000000001ffffULL) >> 15);
        out[c +  9] |= ((in[w + 35] & 0x000000000001ffffULL) << 19);
        out[c +  9] |= ((in[w + 36] & 0x000000000001ffffULL) << 36);
        out[c +  9] |= ((in[w + 37] & 0x000000000001ffffULL) << 53);
        out[c + 10]  = ((in[w + 38] & 0x000000000001ffffULL) <<  6) | ((in[w + 37] & 0x000000000001ffffULL) >> 11);
        out[c + 10] |= ((in[w + 39] & 0x000000000001ffffULL) << 23);
        out[c + 10] |= ((in[w + 40] & 0x000000000001ffffULL) << 40);
        out[c + 10] |= ((in[w + 41] & 0x000000000001ffffULL) << 57);
        out[c + 11]  = ((in[w + 42] & 0x000000000001ffffULL) << 10) | ((in[w + 41] & 0x000000000001ffffULL) >> 7);
        out[c + 11] |= ((in[w + 43] & 0x000000000001ffffULL) << 27);
        out[c + 11] |= ((in[w + 44] & 0x000000000001ffffULL) << 44);
        out[c + 11] |= ((in[w + 45] & 0x000000000001ffffULL) << 61);
        out[c + 12]  = ((in[w + 46] & 0x000000000001ffffULL) << 14) | ((in[w + 45] & 0x000000000001ffffULL) >> 3);
        out[c + 12] |= ((in[w + 47] & 0x000000000001ffffULL) << 31);
        out[c + 12] |= ((in[w + 48] & 0x000000000001ffffULL) << 48);
        out[c + 13]  = ((in[w + 49] & 0x000000000001ffffULL) <<  1) | ((in[w + 48] & 0x000000000001ffffULL) >> 16);
        out[c + 13] |= ((in[w + 50] & 0x000000000001ffffULL) << 18);
        out[c + 13] |= ((in[w + 51] & 0x000000000001ffffULL) << 35);
        out[c + 13] |= ((in[w + 52] & 0x000000000001ffffULL) << 52);
        out[c + 14]  = ((in[w + 53] & 0x000000000001ffffULL) <<  5) | ((in[w + 52] & 0x000000000001ffffULL) >> 12);
        out[c + 14] |= ((in[w + 54] & 0x000000000001ffffULL) << 22);
        out[c + 14] |= ((in[w + 55] & 0x000000000001ffffULL) << 39);
        out[c + 14] |= ((in[w + 56] & 0x000000000001ffffULL) << 56);
        out[c + 15]  = ((in[w + 57] & 0x000000000001ffffULL) <<  9) | ((in[w + 56] & 0x000000000001ffffULL) >> 8);
        out[c + 15] |= ((in[w + 58] & 0x000000000001ffffULL) << 26);
        out[c + 15] |= ((in[w + 59] & 0x000000000001ffffULL) << 43);
        out[c + 15] |= ((in[w + 60] & 0x000000000001ffffULL) << 60);
        out[c + 16]  = ((in[w + 61] & 0x000000000001ffffULL) << 13) | ((in[w + 60] & 0x000000000001ffffULL) >> 4);
        out[c + 16] |= ((in[w + 62] & 0x000000000001ffffULL) << 30);
        out[c + 16] |= ((in[w + 63] & 0x000000000001ffffULL) << 47);
    }
}

void
pack_64_into_18(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 9, w += 32) {
        out[c + 0]  = ((in[w +  0] & 0x000000000003ffffULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x000000000003ffffULL) << 18);
        out[c + 0] |= ((in[w +  2] & 0x000000000003ffffULL) << 36);
        out[c + 0] |= ((in[w +  3] & 0x000000000003ffffULL) << 54);
        out[c + 1]  = ((in[w +  4] & 0x000000000003ffffULL) <<  8) | ((in[w +  3] & 0x000000000003ffffULL) >> 10);
        out[c + 1] |= ((in[w +  5] & 0x000000000003ffffULL) << 26);
        out[c + 1] |= ((in[w +  6] & 0x000000000003ffffULL) << 44);
        out[c + 1] |= ((in[w +  7] & 0x000000000003ffffULL) << 62);
        out[c + 2]  = ((in[w +  8] & 0x000000000003ffffULL) << 16) | ((in[w +  7] & 0x000000000003ffffULL) >> 2);
        out[c + 2] |= ((in[w +  9] & 0x000000000003ffffULL) << 34);
        out[c + 2] |= ((in[w + 10] & 0x000000000003ffffULL) << 52);
        out[c + 3]  = ((in[w + 11] & 0x000000000003ffffULL) <<  6) | ((in[w + 10] & 0x000000000003ffffULL) >> 12);
        out[c + 3] |= ((in[w + 12] & 0x000000000003ffffULL) << 24);
        out[c + 3] |= ((in[w + 13] & 0x000000000003ffffULL) << 42);
        out[c + 3] |= ((in[w + 14] & 0x000000000003ffffULL) << 60);
        out[c + 4]  = ((in[w + 15] & 0x000000000003ffffULL) << 14) | ((in[w + 14] & 0x000000000003ffffULL) >> 4);
        out[c + 4] |= ((in[w + 16] & 0x000000000003ffffULL) << 32);
        out[c + 4] |= ((in[w + 17] & 0x000000000003ffffULL) << 50);
        out[c + 5]  = ((in[w + 18] & 0x000000000003ffffULL) <<  4) | ((in[w + 17] & 0x000000000003ffffULL) >> 14);
        out[c + 5] |= ((in[w + 19] & 0x000000000003ffffULL) << 22);
        out[c + 5] |= ((in[w + 20] & 0x000000000003ffffULL) << 40);
        out[c + 5] |= ((in[w + 21] & 0x000000000003ffffULL) << 58);
        out[c + 6]  = ((in[w + 22] & 0x000000000003ffffULL) << 12) | ((in[w + 21] & 0x000000000003ffffULL) >> 6);
        out[c + 6] |= ((in[w + 23] & 0x000000000003ffffULL) << 30);
        out[c + 6] |= ((in[w + 24] & 0x000000000003ffffULL) << 48);
        out[c + 7]  = ((in[w + 25] & 0x000000000003ffffULL) <<  2) | ((in[w + 24] & 0x000000000003ffffULL) >> 16);
        out[c + 7] |= ((in[w + 26] & 0x000000000003ffffULL) << 20);
        out[c + 7] |= ((in[w + 27] & 0x000000000003ffffULL) << 38);
        out[c + 7] |= ((in[w + 28] & 0x000000000003ffffULL) << 56);
        out[c + 8]  = ((in[w + 29] & 0x000000000003ffffULL) << 10) | ((in[w + 28] & 0x000000000003ffffULL) >> 8);
        out[c + 8] |= ((in[w + 30] & 0x000000000003ffffULL) << 28);
        out[c + 8] |= ((in[w + 31] & 0x000000000003ffffULL) << 46);
    }
}

void
pack_64_into_19(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 19, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x000000000007ffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x000000000007ffffULL) << 19);
        out[c +  0] |= ((in[w +  2] & 0x000000000007ffffULL) << 38);
        out[c +  0] |= ((in[w +  3] & 0x000000000007ffffULL) << 57);
        out[c +  1]  = ((in[w +  4] & 0x000000000007ffffULL) << 12) | ((in[w +  3] & 0x000000000007ffffULL) >> 7);
        out[c +  1] |= ((in[w +  5] & 0x000000000007ffffULL) << 31);
        out[c +  1] |= ((in[w +  6] & 0x000000000007ffffULL) << 50);
        out[c +  2]  = ((in[w +  7] & 0x000000000007ffffULL) <<  5) | ((in[w +  6] & 0x000000000007ffffULL) >> 14);
        out[c +  2] |= ((in[w +  8] & 0x000000000007ffffULL) << 24);
        out[c +  2] |= ((in[w +  9] & 0x000000000007ffffULL) << 43);
        out[c +  2] |= ((in[w + 10] & 0x000000000007ffffULL) << 62);
        out[c +  3]  = ((in[w + 11] & 0x000000000007ffffULL) << 17) | ((in[w + 10] & 0x000000000007ffffULL) >> 2);
        out[c +  3] |= ((in[w + 12] & 0x000000000007ffffULL) << 36);
        out[c +  3] |= ((in[w + 13] & 0x000000000007ffffULL) << 55);
        out[c +  4]  = ((in[w + 14] & 0x000000000007ffffULL) << 10) | ((in[w + 13] & 0x000000000007ffffULL) >> 9);
        out[c +  4] |= ((in[w + 15] & 0x000000000007ffffULL) << 29);
        out[c +  4] |= ((in[w + 16] & 0x000000000007ffffULL) << 48);
        out[c +  5]  = ((in[w + 17] & 0x000000000007ffffULL) <<  3) | ((in[w + 16] & 0x000000000007ffffULL) >> 16);
        out[c +  5] |= ((in[w + 18] & 0x000000000007ffffULL) << 22);
        out[c +  5] |= ((in[w + 19] & 0x000000000007ffffULL) << 41);
        out[c +  5] |= ((in[w + 20] & 0x000000000007ffffULL) << 60);
        out[c +  6]  = ((in[w + 21] & 0x000000000007ffffULL) << 15) | ((in[w + 20] & 0x000000000007ffffULL) >> 4);
        out[c +  6] |= ((in[w + 22] & 0x000000000007ffffULL) << 34);
        out[c +  6] |= ((in[w + 23] & 0x000000000007ffffULL) << 53);
        out[c +  7]  = ((in[w + 24] & 0x000000000007ffffULL) <<  8) | ((in[w + 23] & 0x000000000007ffffULL) >> 11);
        out[c +  7] |= ((in[w + 25] & 0x000000000007ffffULL) << 27);
        out[c +  7] |= ((in[w + 26] & 0x000000000007ffffULL) << 46);
        out[c +  8]  = ((in[w + 27] & 0x000000000007ffffULL) <<  1) | ((in[w + 26] & 0x000000000007ffffULL) >> 18);
        out[c +  8] |= ((in[w + 28] & 0x000000000007ffffULL) << 20);
        out[c +  8] |= ((in[w + 29] & 0x000000000007ffffULL) << 39);
        out[c +  8] |= ((in[w + 30] & 0x000000000007ffffULL) << 58);
        out[c +  9]  = ((in[w + 31] & 0x000000000007ffffULL) << 13) | ((in[w + 30] & 0x000000000007ffffULL) >> 6);
        out[c +  9] |= ((in[w + 32] & 0x000000000007ffffULL) << 32);
        out[c +  9] |= ((in[w + 33] & 0x000000000007ffffULL) << 51);
        out[c + 10]  = ((in[w + 34] & 0x000000000007ffffULL) <<  6) | ((in[w + 33] & 0x000000000007ffffULL) >> 13);
        out[c + 10] |= ((in[w + 35] & 0x000000000007ffffULL) << 25);
        out[c + 10] |= ((in[w + 36] & 0x000000000007ffffULL) << 44);
        out[c + 10] |= ((in[w + 37] & 0x000000000007ffffULL) << 63);
        out[c + 11]  = ((in[w + 38] & 0x000000000007ffffULL) << 18) | ((in[w + 37] & 0x000000000007ffffULL) >> 1);
        out[c + 11] |= ((in[w + 39] & 0x000000000007ffffULL) << 37);
        out[c + 11] |= ((in[w + 40] & 0x000000000007ffffULL) << 56);
        out[c + 12]  = ((in[w + 41] & 0x000000000007ffffULL) << 11) | ((in[w + 40] & 0x000000000007ffffULL) >> 8);
        out[c + 12] |= ((in[w + 42] & 0x000000000007ffffULL) << 30);
        out[c + 12] |= ((in[w + 43] & 0x000000000007ffffULL) << 49);
        out[c + 13]  = ((in[w + 44] & 0x000000000007ffffULL) <<  4) | ((in[w + 43] & 0x000000000007ffffULL) >> 15);
        out[c + 13] |= ((in[w + 45] & 0x000000000007ffffULL) << 23);
        out[c + 13] |= ((in[w + 46] & 0x000000000007ffffULL) << 42);
        out[c + 13] |= ((in[w + 47] & 0x000000000007ffffULL) << 61);
        out[c + 14]  = ((in[w + 48] & 0x000000000007ffffULL) << 16) | ((in[w + 47] & 0x000000000007ffffULL) >> 3);
        out[c + 14] |= ((in[w + 49] & 0x000000000007ffffULL) << 35);
        out[c + 14] |= ((in[w + 50] & 0x000000000007ffffULL) << 54);
        out[c + 15]  = ((in[w + 51] & 0x000000000007ffffULL) <<  9) | ((in[w + 50] & 0x000000000007ffffULL) >> 10);
        out[c + 15] |= ((in[w + 52] & 0x000000000007ffffULL) << 28);
        out[c + 15] |= ((in[w + 53] & 0x000000000007ffffULL) << 47);
        out[c + 16]  = ((in[w + 54] & 0x000000000007ffffULL) <<  2) | ((in[w + 53] & 0x000000000007ffffULL) >> 17);
        out[c + 16] |= ((in[w + 55] & 0x000000000007ffffULL) << 21);
        out[c + 16] |= ((in[w + 56] & 0x000000000007ffffULL) << 40);
        out[c + 16] |= ((in[w + 57] & 0x000000000007ffffULL) << 59);
        out[c + 17]  = ((in[w + 58] & 0x000000000007ffffULL) << 14) | ((in[w + 57] & 0x000000000007ffffULL) >> 5);
        out[c + 17] |= ((in[w + 59] & 0x000000000007ffffULL) << 33);
        out[c + 17] |= ((in[w + 60] & 0x000000000007ffffULL) << 52);
        out[c + 18]  = ((in[w + 61] & 0x000000000007ffffULL) <<  7) | ((in[w + 60] & 0x000000000007ffffULL) >> 12);
        out[c + 18] |= ((in[w + 62] & 0x000000000007ffffULL) << 26);
        out[c + 18] |= ((in[w + 63] & 0x000000000007ffffULL) << 45);
    }
}

void
pack_64_into_20(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 5, w += 16) {
        out[c + 0]  = ((in[w +  0] & 0x00000000000fffffULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x00000000000fffffULL) << 20);
        out[c + 0] |= ((in[w +  2] & 0x00000000000fffffULL) << 40);
        out[c + 0] |= ((in[w +  3] & 0x00000000000fffffULL) << 60);
        out[c + 1]  = ((in[w +  4] & 0x00000000000fffffULL) << 16) | ((in[w +  3] & 0x00000000000fffffULL) >> 4);
        out[c + 1] |= ((in[w +  5] & 0x00000000000fffffULL) << 36);
        out[c + 1] |= ((in[w +  6] & 0x00000000000fffffULL) << 56);
        out[c + 2]  = ((in[w +  7] & 0x00000000000fffffULL) << 12) | ((in[w +  6] & 0x00000000000fffffULL) >> 8);
        out[c + 2] |= ((in[w +  8] & 0x00000000000fffffULL) << 32);
        out[c + 2] |= ((in[w +  9] & 0x00000000000fffffULL) << 52);
        out[c + 3]  = ((in[w + 10] & 0x00000000000fffffULL) <<  8) | ((in[w +  9] & 0x00000000000fffffULL) >> 12);
        out[c + 3] |= ((in[w + 11] & 0x00000000000fffffULL) << 28);
        out[c + 3] |= ((in[w + 12] & 0x00000000000fffffULL) << 48);
        out[c + 4]  = ((in[w + 13] & 0x00000000000fffffULL) <<  4) | ((in[w + 12] & 0x00000000000fffffULL) >> 16);
        out[c + 4] |= ((in[w + 14] & 0x00000000000fffffULL) << 24);
        out[c + 4] |= ((in[w + 15] & 0x00000000000fffffULL) << 44);
    }
}

void
pack_64_into_21(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 21, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x00000000001fffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x00000000001fffffULL) << 21);
        out[c +  0] |= ((in[w +  2] & 0x00000000001fffffULL) << 42);
        out[c +  0] |= ((in[w +  3] & 0x00000000001fffffULL) << 63);
        out[c +  1]  = ((in[w +  4] & 0x00000000001fffffULL) << 20) | ((in[w +  3] & 0x00000000001fffffULL) >> 1);
        out[c +  1] |= ((in[w +  5] & 0x00000000001fffffULL) << 41);
        out[c +  1] |= ((in[w +  6] & 0x00000000001fffffULL) << 62);
        out[c +  2]  = ((in[w +  7] & 0x00000000001fffffULL) << 19) | ((in[w +  6] & 0x00000000001fffffULL) >> 2);
        out[c +  2] |= ((in[w +  8] & 0x00000000001fffffULL) << 40);
        out[c +  2] |= ((in[w +  9] & 0x00000000001fffffULL) << 61);
        out[c +  3]  = ((in[w + 10] & 0x00000000001fffffULL) << 18) | ((in[w +  9] & 0x00000000001fffffULL) >> 3);
        out[c +  3] |= ((in[w + 11] & 0x00000000001fffffULL) << 39);
        out[c +  3] |= ((in[w + 12] & 0x00000000001fffffULL) << 60);
        out[c +  4]  = ((in[w + 13] & 0x00000000001fffffULL) << 17) | ((in[w + 12] & 0x00000000001fffffULL) >> 4);
        out[c +  4] |= ((in[w + 14] & 0x00000000001fffffULL) << 38);
        out[c +  4] |= ((in[w + 15] & 0x00000000001fffffULL) << 59);
        out[c +  5]  = ((in[w + 16] & 0x00000000001fffffULL) << 16) | ((in[w + 15] & 0x00000000001fffffULL) >> 5);
        out[c +  5] |= ((in[w + 17] & 0x00000000001fffffULL) << 37);
        out[c +  5] |= ((in[w + 18] & 0x00000000001fffffULL) << 58);
        out[c +  6]  = ((in[w + 19] & 0x00000000001fffffULL) << 15) | ((in[w + 18] & 0x00000000001fffffULL) >> 6);
        out[c +  6] |= ((in[w + 20] & 0x00000000001fffffULL) << 36);
        out[c +  6] |= ((in[w + 21] & 0x00000000001fffffULL) << 57);
        out[c +  7]  = ((in[w + 22] & 0x00000000001fffffULL) << 14) | ((in[w + 21] & 0x00000000001fffffULL) >> 7);
        out[c +  7] |= ((in[w + 23] & 0x00000000001fffffULL) << 35);
        out[c +  7] |= ((in[w + 24] & 0x00000000001fffffULL) << 56);
        out[c +  8]  = ((in[w + 25] & 0x00000000001fffffULL) << 13) | ((in[w + 24] & 0x00000000001fffffULL) >> 8);
        out[c +  8] |= ((in[w + 26] & 0x00000000001fffffULL) << 34);
        out[c +  8] |= ((in[w + 27] & 0x00000000001fffffULL) << 55);
        out[c +  9]  = ((in[w + 28] & 0x00000000001fffffULL) << 12) | ((in[w + 27] & 0x00000000001fffffULL) >> 9);
        out[c +  9] |= ((in[w + 29] & 0x00000000001fffffULL) << 33);
        out[c +  9] |= ((in[w + 30] & 0x00000000001fffffULL) << 54);
        out[c + 10]  = ((in[w + 31] & 0x00000000001fffffULL) << 11) | ((in[w + 30] & 0x00000000001fffffULL) >> 10);
        out[c + 10] |= ((in[w + 32] & 0x00000000001fffffULL) << 32);
        out[c + 10] |= ((in[w + 33] & 0x00000000001fffffULL) << 53);
        out[c + 11]  = ((in[w + 34] & 0x00000000001fffffULL) << 10) | ((in[w + 33] & 0x00000000001fffffULL) >> 11);
        out[c + 11] |= ((in[w + 35] & 0x00000000001fffffULL) << 31);
        out[c + 11] |= ((in[w + 36] & 0x00000000001fffffULL) << 52);
        out[c + 12]  = ((in[w + 37] & 0x00000000001fffffULL) <<  9) | ((in[w + 36] & 0x00000000001fffffULL) >> 12);
        out[c + 12] |= ((in[w + 38] & 0x00000000001fffffULL) << 30);
        out[c + 12] |= ((in[w + 39] & 0x00000000001fffffULL) << 51);
        out[c + 13]  = ((in[w + 40] & 0x00000000001fffffULL) <<  8) | ((in[w + 39] & 0x00000000001fffffULL) >> 13);
        out[c + 13] |= ((in[w + 41] & 0x00000000001fffffULL) << 29);
        out[c + 13] |= ((in[w + 42] & 0x00000000001fffffULL) << 50);
        out[c + 14]  = ((in[w + 43] & 0x00000000001fffffULL) <<  7) | ((in[w + 42] & 0x00000000001fffffULL) >> 14);
        out[c + 14] |= ((in[w + 44] & 0x00000000001fffffULL) << 28);
        out[c + 14] |= ((in[w + 45] & 0x00000000001fffffULL) << 49);
        out[c + 15]  = ((in[w + 46] & 0x00000000001fffffULL) <<  6) | ((in[w + 45] & 0x00000000001fffffULL) >> 15);
        out[c + 15] |= ((in[w + 47] & 0x00000000001fffffULL) << 27);
        out[c + 15] |= ((in[w + 48] & 0x00000000001fffffULL) << 48);
        out[c + 16]  = ((in[w + 49] & 0x00000000001fffffULL) <<  5) | ((in[w + 48] & 0x00000000001fffffULL) >> 16);
        out[c + 16] |= ((in[w + 50] & 0x00000000001fffffULL) << 26);
        out[c + 16] |= ((in[w + 51] & 0x00000000001fffffULL) << 47);
        out[c + 17]  = ((in[w + 52] & 0x00000000001fffffULL) <<  4) | ((in[w + 51] & 0x00000000001fffffULL) >> 17);
        out[c + 17] |= ((in[w + 53] & 0x00000000001fffffULL) << 25);
        out[c + 17] |= ((in[w + 54] & 0x00000000001fffffULL) << 46);
        out[c + 18]  = ((in[w + 55] & 0x00000000001fffffULL) <<  3) | ((in[w + 54] & 0x00000000001fffffULL) >> 18);
        out[c + 18] |= ((in[w + 56] & 0x00000000001fffffULL) << 24);
        out[c + 18] |= ((in[w + 57] & 0x00000000001fffffULL) << 45);
        out[c + 19]  = ((in[w + 58] & 0x00000000001fffffULL) <<  2) | ((in[w + 57] & 0x00000000001fffffULL) >> 19);
        out[c + 19] |= ((in[w + 59] & 0x00000000001fffffULL) << 23);
        out[c + 19] |= ((in[w + 60] & 0x00000000001fffffULL) << 44);
        out[c + 20]  = ((in[w + 61] & 0x00000000001fffffULL) <<  1) | ((in[w + 60] & 0x00000000001fffffULL) >> 20);
        out[c + 20] |= ((in[w + 62] & 0x00000000001fffffULL) << 22);
        out[c + 20] |= ((in[w + 63] & 0x00000000001fffffULL) << 43);
    }
}

void
pack_64_into_22(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 11, w += 32) {
        out[c +  0]  = ((in[w +  0] & 0x00000000003fffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x00000000003fffffULL) << 22);
        out[c +  0] |= ((in[w +  2] & 0x00000000003fffffULL) << 44);
        out[c +  1]  = ((in[w +  3] & 0x00000000003fffffULL) <<  2) | ((in[w +  2] & 0x00000000003fffffULL) >> 20);
        out[c +  1] |= ((in[w +  4] & 0x00000000003fffffULL) << 24);
        out[c +  1] |= ((in[w +  5] & 0x00000000003fffffULL) << 46);
        out[c +  2]  = ((in[w +  6] & 0x00000000003fffffULL) <<  4) | ((in[w +  5] & 0x00000000003fffffULL) >> 18);
        out[c +  2] |= ((in[w +  7] & 0x00000000003fffffULL) << 26);
        out[c +  2] |= ((in[w +  8] & 0x00000000003fffffULL) << 48);
        out[c +  3]  = ((in[w +  9] & 0x00000000003fffffULL) <<  6) | ((in[w +  8] & 0x00000000003fffffULL) >> 16);
        out[c +  3] |= ((in[w + 10] & 0x00000000003fffffULL) << 28);
        out[c +  3] |= ((in[w + 11] & 0x00000000003fffffULL) << 50);
        out[c +  4]  = ((in[w + 12] & 0x00000000003fffffULL) <<  8) | ((in[w + 11] & 0x00000000003fffffULL) >> 14);
        out[c +  4] |= ((in[w + 13] & 0x00000000003fffffULL) << 30);
        out[c +  4] |= ((in[w + 14] & 0x00000000003fffffULL) << 52);
        out[c +  5]  = ((in[w + 15] & 0x00000000003fffffULL) << 10) | ((in[w + 14] & 0x00000000003fffffULL) >> 12);
        out[c +  5] |= ((in[w + 16] & 0x00000000003fffffULL) << 32);
        out[c +  5] |= ((in[w + 17] & 0x00000000003fffffULL) << 54);
        out[c +  6]  = ((in[w + 18] & 0x00000000003fffffULL) << 12) | ((in[w + 17] & 0x00000000003fffffULL) >> 10);
        out[c +  6] |= ((in[w + 19] & 0x00000000003fffffULL) << 34);
        out[c +  6] |= ((in[w + 20] & 0x00000000003fffffULL) << 56);
        out[c +  7]  = ((in[w + 21] & 0x00000000003fffffULL) << 14) | ((in[w + 20] & 0x00000000003fffffULL) >> 8);
        out[c +  7] |= ((in[w + 22] & 0x00000000003fffffULL) << 36);
        out[c +  7] |= ((in[w + 23] & 0x00000000003fffffULL) << 58);
        out[c +  8]  = ((in[w + 24] & 0x00000000003fffffULL) << 16) | ((in[w + 23] & 0x00000000003fffffULL) >> 6);
        out[c +  8] |= ((in[w + 25] & 0x00000000003fffffULL) << 38);
        out[c +  8] |= ((in[w + 26] & 0x00000000003fffffULL) << 60);
        out[c +  9]  = ((in[w + 27] & 0x00000000003fffffULL) << 18) | ((in[w + 26] & 0x00000000003fffffULL) >> 4);
        out[c +  9] |= ((in[w + 28] & 0x00000000003fffffULL) << 40);
        out[c +  9] |= ((in[w + 29] & 0x00000000003fffffULL) << 62);
        out[c + 10]  = ((in[w + 30] & 0x00000000003fffffULL) << 20) | ((in[w + 29] & 0x00000000003fffffULL) >> 2);
        out[c + 10] |= ((in[w + 31] & 0x00000000003fffffULL) << 42);
    }
}

void
pack_64_into_23(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 23, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x00000000007fffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x00000000007fffffULL) << 23);
        out[c +  0] |= ((in[w +  2] & 0x00000000007fffffULL) << 46);
        out[c +  1]  = ((in[w +  3] & 0x00000000007fffffULL) <<  5) | ((in[w +  2] & 0x00000000007fffffULL) >> 18);
        out[c +  1] |= ((in[w +  4] & 0x00000000007fffffULL) << 28);
        out[c +  1] |= ((in[w +  5] & 0x00000000007fffffULL) << 51);
        out[c +  2]  = ((in[w +  6] & 0x00000000007fffffULL) << 10) | ((in[w +  5] & 0x00000000007fffffULL) >> 13);
        out[c +  2] |= ((in[w +  7] & 0x00000000007fffffULL) << 33);
        out[c +  2] |= ((in[w +  8] & 0x00000000007fffffULL) << 56);
        out[c +  3]  = ((in[w +  9] & 0x00000000007fffffULL) << 15) | ((in[w +  8] & 0x00000000007fffffULL) >> 8);
        out[c +  3] |= ((in[w + 10] & 0x00000000007fffffULL) << 38);
        out[c +  3] |= ((in[w + 11] & 0x00000000007fffffULL) << 61);
        out[c +  4]  = ((in[w + 12] & 0x00000000007fffffULL) << 20) | ((in[w + 11] & 0x00000000007fffffULL) >> 3);
        out[c +  4] |= ((in[w + 13] & 0x00000000007fffffULL) << 43);
        out[c +  5]  = ((in[w + 14] & 0x00000000007fffffULL) <<  2) | ((in[w + 13] & 0x00000000007fffffULL) >> 21);
        out[c +  5] |= ((in[w + 15] & 0x00000000007fffffULL) << 25);
        out[c +  5] |= ((in[w + 16] & 0x00000000007fffffULL) << 48);
        out[c +  6]  = ((in[w + 17] & 0x00000000007fffffULL) <<  7) | ((in[w + 16] & 0x00000000007fffffULL) >> 16);
        out[c +  6] |= ((in[w + 18] & 0x00000000007fffffULL) << 30);
        out[c +  6] |= ((in[w + 19] & 0x00000000007fffffULL) << 53);
        out[c +  7]  = ((in[w + 20] & 0x00000000007fffffULL) << 12) | ((in[w + 19] & 0x00000000007fffffULL) >> 11);
        out[c +  7] |= ((in[w + 21] & 0x00000000007fffffULL) << 35);
        out[c +  7] |= ((in[w + 22] & 0x00000000007fffffULL) << 58);
        out[c +  8]  = ((in[w + 23] & 0x00000000007fffffULL) << 17) | ((in[w + 22] & 0x00000000007fffffULL) >> 6);
        out[c +  8] |= ((in[w + 24] & 0x00000000007fffffULL) << 40);
        out[c +  8] |= ((in[w + 25] & 0x00000000007fffffULL) << 63);
        out[c +  9]  = ((in[w + 26] & 0x00000000007fffffULL) << 22) | ((in[w + 25] & 0x00000000007fffffULL) >> 1);
        out[c +  9] |= ((in[w + 27] & 0x00000000007fffffULL) << 45);
        out[c + 10]  = ((in[w + 28] & 0x00000000007fffffULL) <<  4) | ((in[w + 27] & 0x00000000007fffffULL) >> 19);
        out[c + 10] |= ((in[w + 29] & 0x00000000007fffffULL) << 27);
        out[c + 10] |= ((in[w + 30] & 0x00000000007fffffULL) << 50);
        out[c + 11]  = ((in[w + 31] & 0x00000000007fffffULL) <<  9) | ((in[w + 30] & 0x00000000007fffffULL) >> 14);
        out[c + 11] |= ((in[w + 32] & 0x00000000007fffffULL) << 32);
        out[c + 11] |= ((in[w + 33] & 0x00000000007fffffULL) << 55);
        out[c + 12]  = ((in[w + 34] & 0x00000000007fffffULL) << 14) | ((in[w + 33] & 0x00000000007fffffULL) >> 9);
        out[c + 12] |= ((in[w + 35] & 0x00000000007fffffULL) << 37);
        out[c + 12] |= ((in[w + 36] & 0x00000000007fffffULL) << 60);
        out[c + 13]  = ((in[w + 37] & 0x00000000007fffffULL) << 19) | ((in[w + 36] & 0x00000000007fffffULL) >> 4);
        out[c + 13] |= ((in[w + 38] & 0x00000000007fffffULL) << 42);
        out[c + 14]  = ((in[w + 39] & 0x00000000007fffffULL) <<  1) | ((in[w + 38] & 0x00000000007fffffULL) >> 22);
        out[c + 14] |= ((in[w + 40] & 0x00000000007fffffULL) << 24);
        out[c + 14] |= ((in[w + 41] & 0x00000000007fffffULL) << 47);
        out[c + 15]  = ((in[w + 42] & 0x00000000007fffffULL) <<  6) | ((in[w + 41] & 0x00000000007fffffULL) >> 17);
        out[c + 15] |= ((in[w + 43] & 0x00000000007fffffULL) << 29);
        out[c + 15] |= ((in[w + 44] & 0x00000000007fffffULL) << 52);
        out[c + 16]  = ((in[w + 45] & 0x00000000007fffffULL) << 11) | ((in[w + 44] & 0x00000000007fffffULL) >> 12);
        out[c + 16] |= ((in[w + 46] & 0x00000000007fffffULL) << 34);
        out[c + 16] |= ((in[w + 47] & 0x00000000007fffffULL) << 57);
        out[c + 17]  = ((in[w + 48] & 0x00000000007fffffULL) << 16) | ((in[w + 47] & 0x00000000007fffffULL) >> 7);
        out[c + 17] |= ((in[w + 49] & 0x00000000007fffffULL) << 39);
        out[c + 17] |= ((in[w + 50] & 0x00000000007fffffULL) << 62);
        out[c + 18]  = ((in[w + 51] & 0x00000000007fffffULL) << 21) | ((in[w + 50] & 0x00000000007fffffULL) >> 2);
        out[c + 18] |= ((in[w + 52] & 0x00000000007fffffULL) << 44);
        out[c + 19]  = ((in[w + 53] & 0x00000000007fffffULL) <<  3) | ((in[w + 52] & 0x00000000007fffffULL) >> 20);
        out[c + 19] |= ((in[w + 54] & 0x00000000007fffffULL) << 26);
        out[c + 19] |= ((in[w + 55] & 0x00000000007fffffULL) << 49);
        out[c + 20]  = ((in[w + 56] & 0x00000000007fffffULL) <<  8) | ((in[w + 55] & 0x00000000007fffffULL) >> 15);
        out[c + 20] |= ((in[w + 57] & 0x00000000007fffffULL) << 31);
        out[c + 20] |= ((in[w + 58] & 0x00000000007fffffULL) << 54);
        out[c + 21]  = ((in[w + 59] & 0x00000000007fffffULL) << 13) | ((in[w + 58] & 0x00000000007fffffULL) >> 10);
        out[c + 21] |= ((in[w + 60] & 0x00000000007fffffULL) << 36);
        out[c + 21] |= ((in[w + 61] & 0x00000000007fffffULL) << 59);
        out[c + 22]  = ((in[w + 62] & 0x00000000007fffffULL) << 18) | ((in[w + 61] & 0x00000000007fffffULL) >> 5);
        out[c + 22] |= ((in[w + 63] & 0x00000000007fffffULL) << 41);
    }
}

void
pack_64_into_24(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 3, w += 8) {
        out[c + 0]  = ((in[w + 0] & 0x0000000000ffffffULL) <<  0);
        out[c + 0] |= ((in[w + 1] & 0x0000000000ffffffULL) << 24);
        out[c + 0] |= ((in[w + 2] & 0x0000000000ffffffULL) << 48);
        out[c + 1]  = ((in[w + 3] & 0x0000000000ffffffULL) <<  8) | ((in[w + 2] & 0x0000000000ffffffULL) >> 16);
        out[c + 1] |= ((in[w + 4] & 0x0000000000ffffffULL) << 32);
        out[c + 1] |= ((in[w + 5] & 0x0000000000ffffffULL) << 56);
        out[c + 2]  = ((in[w + 6] & 0x0000000000ffffffULL) << 16) | ((in[w + 5] & 0x0000000000ffffffULL) >> 8);
        out[c + 2] |= ((in[w + 7] & 0x0000000000ffffffULL) << 40);
    }
}

void
pack_64_into_25(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 25, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x0000000001ffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x0000000001ffffffULL) << 25);
        out[c +  0] |= ((in[w +  2] & 0x0000000001ffffffULL) << 50);
        out[c +  1]  = ((in[w +  3] & 0x0000000001ffffffULL) << 11) | ((in[w +  2] & 0x0000000001ffffffULL) >> 14);
        out[c +  1] |= ((in[w +  4] & 0x0000000001ffffffULL) << 36);
        out[c +  1] |= ((in[w +  5] & 0x0000000001ffffffULL) << 61);
        out[c +  2]  = ((in[w +  6] & 0x0000000001ffffffULL) << 22) | ((in[w +  5] & 0x0000000001ffffffULL) >> 3);
        out[c +  2] |= ((in[w +  7] & 0x0000000001ffffffULL) << 47);
        out[c +  3]  = ((in[w +  8] & 0x0000000001ffffffULL) <<  8) | ((in[w +  7] & 0x0000000001ffffffULL) >> 17);
        out[c +  3] |= ((in[w +  9] & 0x0000000001ffffffULL) << 33);
        out[c +  3] |= ((in[w + 10] & 0x0000000001ffffffULL) << 58);
        out[c +  4]  = ((in[w + 11] & 0x0000000001ffffffULL) << 19) | ((in[w + 10] & 0x0000000001ffffffULL) >> 6);
        out[c +  4] |= ((in[w + 12] & 0x0000000001ffffffULL) << 44);
        out[c +  5]  = ((in[w + 13] & 0x0000000001ffffffULL) <<  5) | ((in[w + 12] & 0x0000000001ffffffULL) >> 20);
        out[c +  5] |= ((in[w + 14] & 0x0000000001ffffffULL) << 30);
        out[c +  5] |= ((in[w + 15] & 0x0000000001ffffffULL) << 55);
        out[c +  6]  = ((in[w + 16] & 0x0000000001ffffffULL) << 16) | ((in[w + 15] & 0x0000000001ffffffULL) >> 9);
        out[c +  6] |= ((in[w + 17] & 0x0000000001ffffffULL) << 41);
        out[c +  7]  = ((in[w + 18] & 0x0000000001ffffffULL) <<  2) | ((in[w + 17] & 0x0000000001ffffffULL) >> 23);
        out[c +  7] |= ((in[w + 19] & 0x0000000001ffffffULL) << 27);
        out[c +  7] |= ((in[w + 20] & 0x0000000001ffffffULL) << 52);
        out[c +  8]  = ((in[w + 21] & 0x0000000001ffffffULL) << 13) | ((in[w + 20] & 0x0000000001ffffffULL) >> 12);
        out[c +  8] |= ((in[w + 22] & 0x0000000001ffffffULL) << 38);
        out[c +  8] |= ((in[w + 23] & 0x0000000001ffffffULL) << 63);
        out[c +  9]  = ((in[w + 24] & 0x0000000001ffffffULL) << 24) | ((in[w + 23] & 0x0000000001ffffffULL) >> 1);
        out[c +  9] |= ((in[w + 25] & 0x0000000001ffffffULL) << 49);
        out[c + 10]  = ((in[w + 26] & 0x0000000001ffffffULL) << 10) | ((in[w + 25] & 0x0000000001ffffffULL) >> 15);
        out[c + 10] |= ((in[w + 27] & 0x0000000001ffffffULL) << 35);
        out[c + 10] |= ((in[w + 28] & 0x0000000001ffffffULL) << 60);
        out[c + 11]  = ((in[w + 29] & 0x0000000001ffffffULL) << 21) | ((in[w + 28] & 0x0000000001ffffffULL) >> 4);
        out[c + 11] |= ((in[w + 30] & 0x0000000001ffffffULL) << 46);
        out[c + 12]  = ((in[w + 31] & 0x0000000001ffffffULL) <<  7) | ((in[w + 30] & 0x0000000001ffffffULL) >> 18);
        out[c + 12] |= ((in[w + 32] & 0x0000000001ffffffULL) << 32);
        out[c + 12] |= ((in[w + 33] & 0x0000000001ffffffULL) << 57);
        out[c + 13]  = ((in[w + 34] & 0x0000000001ffffffULL) << 18) | ((in[w + 33] & 0x0000000001ffffffULL) >> 7);
        out[c + 13] |= ((in[w + 35] & 0x0000000001ffffffULL) << 43);
        out[c + 14]  = ((in[w + 36] & 0x0000000001ffffffULL) <<  4) | ((in[w + 35] & 0x0000000001ffffffULL) >> 21);
        out[c + 14] |= ((in[w + 37] & 0x0000000001ffffffULL) << 29);
        out[c + 14] |= ((in[w + 38] & 0x0000000001ffffffULL) << 54);
        out[c + 15]  = ((in[w + 39] & 0x0000000001ffffffULL) << 15) | ((in[w + 38] & 0x0000000001ffffffULL) >> 10);
        out[c + 15] |= ((in[w + 40] & 0x0000000001ffffffULL) << 40);
        out[c + 16]  = ((in[w + 41] & 0x0000000001ffffffULL) <<  1) | ((in[w + 40] & 0x0000000001ffffffULL) >> 24);
        out[c + 16] |= ((in[w + 42] & 0x0000000001ffffffULL) << 26);
        out[c + 16] |= ((in[w + 43] & 0x0000000001ffffffULL) << 51);
        out[c + 17]  = ((in[w + 44] & 0x0000000001ffffffULL) << 12) | ((in[w + 43] & 0x0000000001ffffffULL) >> 13);
        out[c + 17] |= ((in[w + 45] & 0x0000000001ffffffULL) << 37);
        out[c + 17] |= ((in[w + 46] & 0x0000000001ffffffULL) << 62);
        out[c + 18]  = ((in[w + 47] & 0x0000000001ffffffULL) << 23) | ((in[w + 46] & 0x0000000001ffffffULL) >> 2);
        out[c + 18] |= ((in[w + 48] & 0x0000000001ffffffULL) << 48);
        out[c + 19]  = ((in[w + 49] & 0x0000000001ffffffULL) <<  9) | ((in[w + 48] & 0x0000000001ffffffULL) >> 16);
        out[c + 19] |= ((in[w + 50] & 0x0000000001ffffffULL) << 34);
        out[c + 19] |= ((in[w + 51] & 0x0000000001ffffffULL) << 59);
        out[c + 20]  = ((in[w + 52] & 0x0000000001ffffffULL) << 20) | ((in[w + 51] & 0x0000000001ffffffULL) >> 5);
        out[c + 20] |= ((in[w + 53] & 0x0000000001ffffffULL) << 45);
        out[c + 21]  = ((in[w + 54] & 0x0000000001ffffffULL) <<  6) | ((in[w + 53] & 0x0000000001ffffffULL) >> 19);
        out[c + 21] |= ((in[w + 55] & 0x0000000001ffffffULL) << 31);
        out[c + 21] |= ((in[w + 56] & 0x0000000001ffffffULL) << 56);
        out[c + 22]  = ((in[w + 57] & 0x0000000001ffffffULL) << 17) | ((in[w + 56] & 0x0000000001ffffffULL) >> 8);
        out[c + 22] |= ((in[w + 58] & 0x0000000001ffffffULL) << 42);
        out[c + 23]  = ((in[w + 59] & 0x0000000001ffffffULL) <<  3) | ((in[w + 58] & 0x0000000001ffffffULL) >> 22);
        out[c + 23] |= ((in[w + 60] & 0x0000000001ffffffULL) << 28);
        out[c + 23] |= ((in[w + 61] & 0x0000000001ffffffULL) << 53);
        out[c + 24]  = ((in[w + 62] & 0x0000000001ffffffULL) << 14) | ((in[w + 61] & 0x0000000001ffffffULL) >> 11);
        out[c + 24] |= ((in[w + 63] & 0x0000000001ffffffULL) << 39);
    }
}

void
pack_64_into_26(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 13, w += 32) {
        out[c +  0]  = ((in[w +  0] & 0x0000000003ffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x0000000003ffffffULL) << 26);
        out[c +  0] |= ((in[w +  2] & 0x0000000003ffffffULL) << 52);
        out[c +  1]  = ((in[w +  3] & 0x0000000003ffffffULL) << 14) | ((in[w +  2] & 0x0000000003ffffffULL) >> 12);
        out[c +  1] |= ((in[w +  4] & 0x0000000003ffffffULL) << 40);
        out[c +  2]  = ((in[w +  5] & 0x0000000003ffffffULL) <<  2) | ((in[w +  4] & 0x0000000003ffffffULL) >> 24);
        out[c +  2] |= ((in[w +  6] & 0x0000000003ffffffULL) << 28);
        out[c +  2] |= ((in[w +  7] & 0x0000000003ffffffULL) << 54);
        out[c +  3]  = ((in[w +  8] & 0x0000000003ffffffULL) << 16) | ((in[w +  7] & 0x0000000003ffffffULL) >> 10);
        out[c +  3] |= ((in[w +  9] & 0x0000000003ffffffULL) << 42);
        out[c +  4]  = ((in[w + 10] & 0x0000000003ffffffULL) <<  4) | ((in[w +  9] & 0x0000000003ffffffULL) >> 22);
        out[c +  4] |= ((in[w + 11] & 0x0000000003ffffffULL) << 30);
        out[c +  4] |= ((in[w + 12] & 0x0000000003ffffffULL) << 56);
        out[c +  5]  = ((in[w + 13] & 0x0000000003ffffffULL) << 18) | ((in[w + 12] & 0x0000000003ffffffULL) >> 8);
        out[c +  5] |= ((in[w + 14] & 0x0000000003ffffffULL) << 44);
        out[c +  6]  = ((in[w + 15] & 0x0000000003ffffffULL) <<  6) | ((in[w + 14] & 0x0000000003ffffffULL) >> 20);
        out[c +  6] |= ((in[w + 16] & 0x0000000003ffffffULL) << 32);
        out[c +  6] |= ((in[w + 17] & 0x0000000003ffffffULL) << 58);
        out[c +  7]  = ((in[w + 18] & 0x0000000003ffffffULL) << 20) | ((in[w + 17] & 0x0000000003ffffffULL) >> 6);
        out[c +  7] |= ((in[w + 19] & 0x0000000003ffffffULL) << 46);
        out[c +  8]  = ((in[w + 20] & 0x0000000003ffffffULL) <<  8) | ((in[w + 19] & 0x0000000003ffffffULL) >> 18);
        out[c +  8] |= ((in[w + 21] & 0x0000000003ffffffULL) << 34);
        out[c +  8] |= ((in[w + 22] & 0x0000000003ffffffULL) << 60);
        out[c +  9]  = ((in[w + 23] & 0x0000000003ffffffULL) << 22) | ((in[w + 22] & 0x0000000003ffffffULL) >> 4);
        out[c +  9] |= ((in[w + 24] & 0x0000000003ffffffULL) << 48);
        out[c + 10]  = ((in[w + 25] & 0x0000000003ffffffULL) << 10) | ((in[w + 24] & 0x0000000003ffffffULL) >> 16);
        out[c + 10] |= ((in[w + 26] & 0x0000000003ffffffULL) << 36);
        out[c + 10] |= ((in[w + 27] & 0x0000000003ffffffULL) << 62);
        out[c + 11]  = ((in[w + 28] & 0x0000000003ffffffULL) << 24) | ((in[w + 27] & 0x0000000003ffffffULL) >> 2);
        out[c + 11] |= ((in[w + 29] & 0x0000000003ffffffULL) << 50);
        out[c + 12]  = ((in[w + 30] & 0x0000000003ffffffULL) << 12) | ((in[w + 29] & 0x0000000003ffffffULL) >> 14);
        out[c + 12] |= ((in[w + 31] & 0x0000000003ffffffULL) << 38);
    }
}

void
pack_64_into_27(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 27, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x0000000007ffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x0000000007ffffffULL) << 27);
        out[c +  0] |= ((in[w +  2] & 0x0000000007ffffffULL) << 54);
        out[c +  1]  = ((in[w +  3] & 0x0000000007ffffffULL) << 17) | ((in[w +  2] & 0x0000000007ffffffULL) >> 10);
        out[c +  1] |= ((in[w +  4] & 0x0000000007ffffffULL) << 44);
        out[c +  2]  = ((in[w +  5] & 0x0000000007ffffffULL) <<  7) | ((in[w +  4] & 0x0000000007ffffffULL) >> 20);
        out[c +  2] |= ((in[w +  6] & 0x0000000007ffffffULL) << 34);
        out[c +  2] |= ((in[w +  7] & 0x0000000007ffffffULL) << 61);
        out[c +  3]  = ((in[w +  8] & 0x0000000007ffffffULL) << 24) | ((in[w +  7] & 0x0000000007ffffffULL) >> 3);
        out[c +  3] |= ((in[w +  9] & 0x0000000007ffffffULL) << 51);
        out[c +  4]  = ((in[w + 10] & 0x0000000007ffffffULL) << 14) | ((in[w +  9] & 0x0000000007ffffffULL) >> 13);
        out[c +  4] |= ((in[w + 11] & 0x0000000007ffffffULL) << 41);
        out[c +  5]  = ((in[w + 12] & 0x0000000007ffffffULL) <<  4) | ((in[w + 11] & 0x0000000007ffffffULL) >> 23);
        out[c +  5] |= ((in[w + 13] & 0x0000000007ffffffULL) << 31);
        out[c +  5] |= ((in[w + 14] & 0x0000000007ffffffULL) << 58);
        out[c +  6]  = ((in[w + 15] & 0x0000000007ffffffULL) << 21) | ((in[w + 14] & 0x0000000007ffffffULL) >> 6);
        out[c +  6] |= ((in[w + 16] & 0x0000000007ffffffULL) << 48);
        out[c +  7]  = ((in[w + 17] & 0x0000000007ffffffULL) << 11) | ((in[w + 16] & 0x0000000007ffffffULL) >> 16);
        out[c +  7] |= ((in[w + 18] & 0x0000000007ffffffULL) << 38);
        out[c +  8]  = ((in[w + 19] & 0x0000000007ffffffULL) <<  1) | ((in[w + 18] & 0x0000000007ffffffULL) >> 26);
        out[c +  8] |= ((in[w + 20] & 0x0000000007ffffffULL) << 28);
        out[c +  8] |= ((in[w + 21] & 0x0000000007ffffffULL) << 55);
        out[c +  9]  = ((in[w + 22] & 0x0000000007ffffffULL) << 18) | ((in[w + 21] & 0x0000000007ffffffULL) >> 9);
        out[c +  9] |= ((in[w + 23] & 0x0000000007ffffffULL) << 45);
        out[c + 10]  = ((in[w + 24] & 0x0000000007ffffffULL) <<  8) | ((in[w + 23] & 0x0000000007ffffffULL) >> 19);
        out[c + 10] |= ((in[w + 25] & 0x0000000007ffffffULL) << 35);
        out[c + 10] |= ((in[w + 26] & 0x0000000007ffffffULL) << 62);
        out[c + 11]  = ((in[w + 27] & 0x0000000007ffffffULL) << 25) | ((in[w + 26] & 0x0000000007ffffffULL) >> 2);
        out[c + 11] |= ((in[w + 28] & 0x0000000007ffffffULL) << 52);
        out[c + 12]  = ((in[w + 29] & 0x0000000007ffffffULL) << 15) | ((in[w + 28] & 0x0000000007ffffffULL) >> 12);
        out[c + 12] |= ((in[w + 30] & 0x0000000007ffffffULL) << 42);
        out[c + 13]  = ((in[w + 31] & 0x0000000007ffffffULL) <<  5) | ((in[w + 30] & 0x0000000007ffffffULL) >> 22);
        out[c + 13] |= ((in[w + 32] & 0x0000000007ffffffULL) << 32);
        out[c + 13] |= ((in[w + 33] & 0x0000000007ffffffULL) << 59);
        out[c + 14]  = ((in[w + 34] & 0x0000000007ffffffULL) << 22) | ((in[w + 33] & 0x0000000007ffffffULL) >> 5);
        out[c + 14] |= ((in[w + 35] & 0x0000000007ffffffULL) << 49);
        out[c + 15]  = ((in[w + 36] & 0x0000000007ffffffULL) << 12) | ((in[w + 35] & 0x0000000007ffffffULL) >> 15);
        out[c + 15] |= ((in[w + 37] & 0x0000000007ffffffULL) << 39);
        out[c + 16]  = ((in[w + 38] & 0x0000000007ffffffULL) <<  2) | ((in[w + 37] & 0x0000000007ffffffULL) >> 25);
        out[c + 16] |= ((in[w + 39] & 0x0000000007ffffffULL) << 29);
        out[c + 16] |= ((in[w + 40] & 0x0000000007ffffffULL) << 56);
        out[c + 17]  = ((in[w + 41] & 0x0000000007ffffffULL) << 19) | ((in[w + 40] & 0x0000000007ffffffULL) >> 8);
        out[c + 17] |= ((in[w + 42] & 0x0000000007ffffffULL) << 46);
        out[c + 18]  = ((in[w + 43] & 0x0000000007ffffffULL) <<  9) | ((in[w + 42] & 0x0000000007ffffffULL) >> 18);
        out[c + 18] |= ((in[w + 44] & 0x0000000007ffffffULL) << 36);
        out[c + 18] |= ((in[w + 45] & 0x0000000007ffffffULL) << 63);
        out[c + 19]  = ((in[w + 46] & 0x0000000007ffffffULL) << 26) | ((in[w + 45] & 0x0000000007ffffffULL) >> 1);
        out[c + 19] |= ((in[w + 47] & 0x0000000007ffffffULL) << 53);
        out[c + 20]  = ((in[w + 48] & 0x0000000007ffffffULL) << 16) | ((in[w + 47] & 0x0000000007ffffffULL) >> 11);
        out[c + 20] |= ((in[w + 49] & 0x0000000007ffffffULL) << 43);
        out[c + 21]  = ((in[w + 50] & 0x0000000007ffffffULL) <<  6) | ((in[w + 49] & 0x0000000007ffffffULL) >> 21);
        out[c + 21] |= ((in[w + 51] & 0x0000000007ffffffULL) << 33);
        out[c + 21] |= ((in[w + 52] & 0x0000000007ffffffULL) << 60);
        out[c + 22]  = ((in[w + 53] & 0x0000000007ffffffULL) << 23) | ((in[w + 52] & 0x0000000007ffffffULL) >> 4);
        out[c + 22] |= ((in[w + 54] & 0x0000000007ffffffULL) << 50);
        out[c + 23]  = ((in[w + 55] & 0x0000000007ffffffULL) << 13) | ((in[w + 54] & 0x0000000007ffffffULL) >> 14);
        out[c + 23] |= ((in[w + 56] & 0x0000000007ffffffULL) << 40);
        out[c + 24]  = ((in[w + 57] & 0x0000000007ffffffULL) <<  3) | ((in[w + 56] & 0x0000000007ffffffULL) >> 24);
        out[c + 24] |= ((in[w + 58] & 0x0000000007ffffffULL) << 30);
        out[c + 24] |= ((in[w + 59] & 0x0000000007ffffffULL) << 57);
        out[c + 25]  = ((in[w + 60] & 0x0000000007ffffffULL) << 20) | ((in[w + 59] & 0x0000000007ffffffULL) >> 7);
        out[c + 25] |= ((in[w + 61] & 0x0000000007ffffffULL) << 47);
        out[c + 26]  = ((in[w + 62] & 0x0000000007ffffffULL) << 10) | ((in[w + 61] & 0x0000000007ffffffULL) >> 17);
        out[c + 26] |= ((in[w + 63] & 0x0000000007ffffffULL) << 37);
    }
}

void
pack_64_into_28(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 7, w += 16) {
        out[c + 0]  = ((in[w +  0] & 0x000000000fffffffULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x000000000fffffffULL) << 28);
        out[c + 0] |= ((in[w +  2] & 0x000000000fffffffULL) << 56);
        out[c + 1]  = ((in[w +  3] & 0x000000000fffffffULL) << 20) | ((in[w +  2] & 0x000000000fffffffULL) >> 8);
        out[c + 1] |= ((in[w +  4] & 0x000000000fffffffULL) << 48);
        out[c + 2]  = ((in[w +  5] & 0x000000000fffffffULL) << 12) | ((in[w +  4] & 0x000000000fffffffULL) >> 16);
        out[c + 2] |= ((in[w +  6] & 0x000000000fffffffULL) << 40);
        out[c + 3]  = ((in[w +  7] & 0x000000000fffffffULL) <<  4) | ((in[w +  6] & 0x000000000fffffffULL) >> 24);
        out[c + 3] |= ((in[w +  8] & 0x000000000fffffffULL) << 32);
        out[c + 3] |= ((in[w +  9] & 0x000000000fffffffULL) << 60);
        out[c + 4]  = ((in[w + 10] & 0x000000000fffffffULL) << 24) | ((in[w +  9] & 0x000000000fffffffULL) >> 4);
        out[c + 4] |= ((in[w + 11] & 0x000000000fffffffULL) << 52);
        out[c + 5]  = ((in[w + 12] & 0x000000000fffffffULL) << 16) | ((in[w + 11] & 0x000000000fffffffULL) >> 12);
        out[c + 5] |= ((in[w + 13] & 0x000000000fffffffULL) << 44);
        out[c + 6]  = ((in[w + 14] & 0x000000000fffffffULL) <<  8) | ((in[w + 13] & 0x000000000fffffffULL) >> 20);
        out[c + 6] |= ((in[w + 15] & 0x000000000fffffffULL) << 36);
    }
}

void
pack_64_into_29(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 29, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x000000001fffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x000000001fffffffULL) << 29);
        out[c +  0] |= ((in[w +  2] & 0x000000001fffffffULL) << 58);
        out[c +  1]  = ((in[w +  3] & 0x000000001fffffffULL) << 23) | ((in[w +  2] & 0x000000001fffffffULL) >> 6);
        out[c +  1] |= ((in[w +  4] & 0x000000001fffffffULL) << 52);
        out[c +  2]  = ((in[w +  5] & 0x000000001fffffffULL) << 17) | ((in[w +  4] & 0x000000001fffffffULL) >> 12);
        out[c +  2] |= ((in[w +  6] & 0x000000001fffffffULL) << 46);
        out[c +  3]  = ((in[w +  7] & 0x000000001fffffffULL) << 11) | ((in[w +  6] & 0x000000001fffffffULL) >> 18);
        out[c +  3] |= ((in[w +  8] & 0x000000001fffffffULL) << 40);
        out[c +  4]  = ((in[w +  9] & 0x000000001fffffffULL) <<  5) | ((in[w +  8] & 0x000000001fffffffULL) >> 24);
        out[c +  4] |= ((in[w + 10] & 0x000000001fffffffULL) << 34);
        out[c +  4] |= ((in[w + 11] & 0x000000001fffffffULL) << 63);
        out[c +  5]  = ((in[w + 12] & 0x000000001fffffffULL) << 28) | ((in[w + 11] & 0x000000001fffffffULL) >> 1);
        out[c +  5] |= ((in[w + 13] & 0x000000001fffffffULL) << 57);
        out[c +  6]  = ((in[w + 14] & 0x000000001fffffffULL) << 22) | ((in[w + 13] & 0x000000001fffffffULL) >> 7);
        out[c +  6] |= ((in[w + 15] & 0x000000001fffffffULL) << 51);
        out[c +  7]  = ((in[w + 16] & 0x000000001fffffffULL) << 16) | ((in[w + 15] & 0x000000001fffffffULL) >> 13);
        out[c +  7] |= ((in[w + 17] & 0x000000001fffffffULL) << 45);
        out[c +  8]  = ((in[w + 18] & 0x000000001fffffffULL) << 10) | ((in[w + 17] & 0x000000001fffffffULL) >> 19);
        out[c +  8] |= ((in[w + 19] & 0x000000001fffffffULL) << 39);
        out[c +  9]  = ((in[w + 20] & 0x000000001fffffffULL) <<  4) | ((in[w + 19] & 0x000000001fffffffULL) >> 25);
        out[c +  9] |= ((in[w + 21] & 0x000000001fffffffULL) << 33);
        out[c +  9] |= ((in[w + 22] & 0x000000001fffffffULL) << 62);
        out[c + 10]  = ((in[w + 23] & 0x000000001fffffffULL) << 27) | ((in[w + 22] & 0x000000001fffffffULL) >> 2);
        out[c + 10] |= ((in[w + 24] & 0x000000001fffffffULL) << 56);
        out[c + 11]  = ((in[w + 25] & 0x000000001fffffffULL) << 21) | ((in[w + 24] & 0x000000001fffffffULL) >> 8);
        out[c + 11] |= ((in[w + 26] & 0x000000001fffffffULL) << 50);
        out[c + 12]  = ((in[w + 27] & 0x000000001fffffffULL) << 15) | ((in[w + 26] & 0x000000001fffffffULL) >> 14);
        out[c + 12] |= ((in[w + 28] & 0x000000001fffffffULL) << 44);
        out[c + 13]  = ((in[w + 29] & 0x000000001fffffffULL) <<  9) | ((in[w + 28] & 0x000000001fffffffULL) >> 20);
        out[c + 13] |= ((in[w + 30] & 0x000000001fffffffULL) << 38);
        out[c + 14]  = ((in[w + 31] & 0x000000001fffffffULL) <<  3) | ((in[w + 30] & 0x000000001fffffffULL) >> 26);
        out[c + 14] |= ((in[w + 32] & 0x000000001fffffffULL) << 32);
        out[c + 14] |= ((in[w + 33] & 0x000000001fffffffULL) << 61);
        out[c + 15]  = ((in[w + 34] & 0x000000001fffffffULL) << 26) | ((in[w + 33] & 0x000000001fffffffULL) >> 3);
        out[c + 15] |= ((in[w + 35] & 0x000000001fffffffULL) << 55);
        out[c + 16]  = ((in[w + 36] & 0x000000001fffffffULL) << 20) | ((in[w + 35] & 0x000000001fffffffULL) >> 9);
        out[c + 16] |= ((in[w + 37] & 0x000000001fffffffULL) << 49);
        out[c + 17]  = ((in[w + 38] & 0x000000001fffffffULL) << 14) | ((in[w + 37] & 0x000000001fffffffULL) >> 15);
        out[c + 17] |= ((in[w + 39] & 0x000000001fffffffULL) << 43);
        out[c + 18]  = ((in[w + 40] & 0x000000001fffffffULL) <<  8) | ((in[w + 39] & 0x000000001fffffffULL) >> 21);
        out[c + 18] |= ((in[w + 41] & 0x000000001fffffffULL) << 37);
        out[c + 19]  = ((in[w + 42] & 0x000000001fffffffULL) <<  2) | ((in[w + 41] & 0x000000001fffffffULL) >> 27);
        out[c + 19] |= ((in[w + 43] & 0x000000001fffffffULL) << 31);
        out[c + 19] |= ((in[w + 44] & 0x000000001fffffffULL) << 60);
        out[c + 20]  = ((in[w + 45] & 0x000000001fffffffULL) << 25) | ((in[w + 44] & 0x000000001fffffffULL) >> 4);
        out[c + 20] |= ((in[w + 46] & 0x000000001fffffffULL) << 54);
        out[c + 21]  = ((in[w + 47] & 0x000000001fffffffULL) << 19) | ((in[w + 46] & 0x000000001fffffffULL) >> 10);
        out[c + 21] |= ((in[w + 48] & 0x000000001fffffffULL) << 48);
        out[c + 22]  = ((in[w + 49] & 0x000000001fffffffULL) << 13) | ((in[w + 48] & 0x000000001fffffffULL) >> 16);
        out[c + 22] |= ((in[w + 50] & 0x000000001fffffffULL) << 42);
        out[c + 23]  = ((in[w + 51] & 0x000000001fffffffULL) <<  7) | ((in[w + 50] & 0x000000001fffffffULL) >> 22);
        out[c + 23] |= ((in[w + 52] & 0x000000001fffffffULL) << 36);
        out[c + 24]  = ((in[w + 53] & 0x000000001fffffffULL) <<  1) | ((in[w + 52] & 0x000000001fffffffULL) >> 28);
        out[c + 24] |= ((in[w + 54] & 0x000000001fffffffULL) << 30);
        out[c + 24] |= ((in[w + 55] & 0x000000001fffffffULL) << 59);
        out[c + 25]  = ((in[w + 56] & 0x000000001fffffffULL) << 24) | ((in[w + 55] & 0x000000001fffffffULL) >> 5);
        out[c + 25] |= ((in[w + 57] & 0x000000001fffffffULL) << 53);
        out[c + 26]  = ((in[w + 58] & 0x000000001fffffffULL) << 18) | ((in[w + 57] & 0x000000001fffffffULL) >> 11);
        out[c + 26] |= ((in[w + 59] & 0x000000001fffffffULL) << 47);
        out[c + 27]  = ((in[w + 60] & 0x000000001fffffffULL) << 12) | ((in[w + 59] & 0x000000001fffffffULL) >> 17);
        out[c + 27] |= ((in[w + 61] & 0x000000001fffffffULL) << 41);
        out[c + 28]  = ((in[w + 62] & 0x000000001fffffffULL) <<  6) | ((in[w + 61] & 0x000000001fffffffULL) >> 23);
        out[c + 28] |= ((in[w + 63] & 0x000000001fffffffULL) << 35);
    }
}

void
pack_64_into_30(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 15, w += 32) {
        out[c +  0]  = ((in[w +  0] & 0x000000003fffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x000000003fffffffULL) << 30);
        out[c +  0] |= ((in[w +  2] & 0x000000003fffffffULL) << 60);
        out[c +  1]  = ((in[w +  3] & 0x000000003fffffffULL) << 26) | ((in[w +  2] & 0x000000003fffffffULL) >> 4);
        out[c +  1] |= ((in[w +  4] & 0x000000003fffffffULL) << 56);
        out[c +  2]  = ((in[w +  5] & 0x000000003fffffffULL) << 22) | ((in[w +  4] & 0x000000003fffffffULL) >> 8);
        out[c +  2] |= ((in[w +  6] & 0x000000003fffffffULL) << 52);
        out[c +  3]  = ((in[w +  7] & 0x000000003fffffffULL) << 18) | ((in[w +  6] & 0x000000003fffffffULL) >> 12);
        out[c +  3] |= ((in[w +  8] & 0x000000003fffffffULL) << 48);
        out[c +  4]  = ((in[w +  9] & 0x000000003fffffffULL) << 14) | ((in[w +  8] & 0x000000003fffffffULL) >> 16);
        out[c +  4] |= ((in[w + 10] & 0x000000003fffffffULL) << 44);
        out[c +  5]  = ((in[w + 11] & 0x000000003fffffffULL) << 10) | ((in[w + 10] & 0x000000003fffffffULL) >> 20);
        out[c +  5] |= ((in[w + 12] & 0x000000003fffffffULL) << 40);
        out[c +  6]  = ((in[w + 13] & 0x000000003fffffffULL) <<  6) | ((in[w + 12] & 0x000000003fffffffULL) >> 24);
        out[c +  6] |= ((in[w + 14] & 0x000000003fffffffULL) << 36);
        out[c +  7]  = ((in[w + 15] & 0x000000003fffffffULL) <<  2) | ((in[w + 14] & 0x000000003fffffffULL) >> 28);
        out[c +  7] |= ((in[w + 16] & 0x000000003fffffffULL) << 32);
        out[c +  7] |= ((in[w + 17] & 0x000000003fffffffULL) << 62);
        out[c +  8]  = ((in[w + 18] & 0x000000003fffffffULL) << 28) | ((in[w + 17] & 0x000000003fffffffULL) >> 2);
        out[c +  8] |= ((in[w + 19] & 0x000000003fffffffULL) << 58);
        out[c +  9]  = ((in[w + 20] & 0x000000003fffffffULL) << 24) | ((in[w + 19] & 0x000000003fffffffULL) >> 6);
        out[c +  9] |= ((in[w + 21] & 0x000000003fffffffULL) << 54);
        out[c + 10]  = ((in[w + 22] & 0x000000003fffffffULL) << 20) | ((in[w + 21] & 0x000000003fffffffULL) >> 10);
        out[c + 10] |= ((in[w + 23] & 0x000000003fffffffULL) << 50);
        out[c + 11]  = ((in[w + 24] & 0x000000003fffffffULL) << 16) | ((in[w + 23] & 0x000000003fffffffULL) >> 14);
        out[c + 11] |= ((in[w + 25] & 0x000000003fffffffULL) << 46);
        out[c + 12]  = ((in[w + 26] & 0x000000003fffffffULL) << 12) | ((in[w + 25] & 0x000000003fffffffULL) >> 18);
        out[c + 12] |= ((in[w + 27] & 0x000000003fffffffULL) << 42);
        out[c + 13]  = ((in[w + 28] & 0x000000003fffffffULL) <<  8) | ((in[w + 27] & 0x000000003fffffffULL) >> 22);
        out[c + 13] |= ((in[w + 29] & 0x000000003fffffffULL) << 38);
        out[c + 14]  = ((in[w + 30] & 0x000000003fffffffULL) <<  4) | ((in[w + 29] & 0x000000003fffffffULL) >> 26);
        out[c + 14] |= ((in[w + 31] & 0x000000003fffffffULL) << 34);
    }
}

void
pack_64_into_31(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 31, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x000000007fffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x000000007fffffffULL) << 31);
        out[c +  0] |= ((in[w +  2] & 0x000000007fffffffULL) << 62);
        out[c +  1]  = ((in[w +  3] & 0x000000007fffffffULL) << 29) | ((in[w +  2] & 0x000000007fffffffULL) >> 2);
        out[c +  1] |= ((in[w +  4] & 0x000000007fffffffULL) << 60);
        out[c +  2]  = ((in[w +  5] & 0x000000007fffffffULL) << 27) | ((in[w +  4] & 0x000000007fffffffULL) >> 4);
        out[c +  2] |= ((in[w +  6] & 0x000000007fffffffULL) << 58);
        out[c +  3]  = ((in[w +  7] & 0x000000007fffffffULL) << 25) | ((in[w +  6] & 0x000000007fffffffULL) >> 6);
        out[c +  3] |= ((in[w +  8] & 0x000000007fffffffULL) << 56);
        out[c +  4]  = ((in[w +  9] & 0x000000007fffffffULL) << 23) | ((in[w +  8] & 0x000000007fffffffULL) >> 8);
        out[c +  4] |= ((in[w + 10] & 0x000000007fffffffULL) << 54);
        out[c +  5]  = ((in[w + 11] & 0x000000007fffffffULL) << 21) | ((in[w + 10] & 0x000000007fffffffULL) >> 10);
        out[c +  5] |= ((in[w + 12] & 0x000000007fffffffULL) << 52);
        out[c +  6]  = ((in[w + 13] & 0x000000007fffffffULL) << 19) | ((in[w + 12] & 0x000000007fffffffULL) >> 12);
        out[c +  6] |= ((in[w + 14] & 0x000000007fffffffULL) << 50);
        out[c +  7]  = ((in[w + 15] & 0x000000007fffffffULL) << 17) | ((in[w + 14] & 0x000000007fffffffULL) >> 14);
        out[c +  7] |= ((in[w + 16] & 0x000000007fffffffULL) << 48);
        out[c +  8]  = ((in[w + 17] & 0x000000007fffffffULL) << 15) | ((in[w + 16] & 0x000000007fffffffULL) >> 16);
        out[c +  8] |= ((in[w + 18] & 0x000000007fffffffULL) << 46);
        out[c +  9]  = ((in[w + 19] & 0x000000007fffffffULL) << 13) | ((in[w + 18] & 0x000000007fffffffULL) >> 18);
        out[c +  9] |= ((in[w + 20] & 0x000000007fffffffULL) << 44);
        out[c + 10]  = ((in[w + 21] & 0x000000007fffffffULL) << 11) | ((in[w + 20] & 0x000000007fffffffULL) >> 20);
        out[c + 10] |= ((in[w + 22] & 0x000000007fffffffULL) << 42);
        out[c + 11]  = ((in[w + 23] & 0x000000007fffffffULL) <<  9) | ((in[w + 22] & 0x000000007fffffffULL) >> 22);
        out[c + 11] |= ((in[w + 24] & 0x000000007fffffffULL) << 40);
        out[c + 12]  = ((in[w + 25] & 0x000000007fffffffULL) <<  7) | ((in[w + 24] & 0x000000007fffffffULL) >> 24);
        out[c + 12] |= ((in[w + 26] & 0x000000007fffffffULL) << 38);
        out[c + 13]  = ((in[w + 27] & 0x000000007fffffffULL) <<  5) | ((in[w + 26] & 0x000000007fffffffULL) >> 26);
        out[c + 13] |= ((in[w + 28] & 0x000000007fffffffULL) << 36);
        out[c + 14]  = ((in[w + 29] & 0x000000007fffffffULL) <<  3) | ((in[w + 28] & 0x000000007fffffffULL) >> 28);
        out[c + 14] |= ((in[w + 30] & 0x000000007fffffffULL) << 34);
        out[c + 15]  = ((in[w + 31] & 0x000000007fffffffULL) <<  1) | ((in[w + 30] & 0x000000007fffffffULL) >> 30);
        out[c + 15] |= ((in[w + 32] & 0x000000007fffffffULL) << 32);
        out[c + 15] |= ((in[w + 33] & 0x000000007fffffffULL) << 63);
        out[c + 16]  = ((in[w + 34] & 0x000000007fffffffULL) << 30) | ((in[w + 33] & 0x000000007fffffffULL) >> 1);
        out[c + 16] |= ((in[w + 35] & 0x000000007fffffffULL) << 61);
        out[c + 17]  = ((in[w + 36] & 0x000000007fffffffULL) << 28) | ((in[w + 35] & 0x000000007fffffffULL) >> 3);
        out[c + 17] |= ((in[w + 37] & 0x000000007fffffffULL) << 59);
        out[c + 18]  = ((in[w + 38] & 0x000000007fffffffULL) << 26) | ((in[w + 37] & 0x000000007fffffffULL) >> 5);
        out[c + 18] |= ((in[w + 39] & 0x000000007fffffffULL) << 57);
        out[c + 19]  = ((in[w + 40] & 0x000000007fffffffULL) << 24) | ((in[w + 39] & 0x000000007fffffffULL) >> 7);
        out[c + 19] |= ((in[w + 41] & 0x000000007fffffffULL) << 55);
        out[c + 20]  = ((in[w + 42] & 0x000000007fffffffULL) << 22) | ((in[w + 41] & 0x000000007fffffffULL) >> 9);
        out[c + 20] |= ((in[w + 43] & 0x000000007fffffffULL) << 53);
        out[c + 21]  = ((in[w + 44] & 0x000000007fffffffULL) << 20) | ((in[w + 43] & 0x000000007fffffffULL) >> 11);
        out[c + 21] |= ((in[w + 45] & 0x000000007fffffffULL) << 51);
        out[c + 22]  = ((in[w + 46] & 0x000000007fffffffULL) << 18) | ((in[w + 45] & 0x000000007fffffffULL) >> 13);
        out[c + 22] |= ((in[w + 47] & 0x000000007fffffffULL) << 49);
        out[c + 23]  = ((in[w + 48] & 0x000000007fffffffULL) << 16) | ((in[w + 47] & 0x000000007fffffffULL) >> 15);
        out[c + 23] |= ((in[w + 49] & 0x000000007fffffffULL) << 47);
        out[c + 24]  = ((in[w + 50] & 0x000000007fffffffULL) << 14) | ((in[w + 49] & 0x000000007fffffffULL) >> 17);
        out[c + 24] |= ((in[w + 51] & 0x000000007fffffffULL) << 45);
        out[c + 25]  = ((in[w + 52] & 0x000000007fffffffULL) << 12) | ((in[w + 51] & 0x000000007fffffffULL) >> 19);
        out[c + 25] |= ((in[w + 53] & 0x000000007fffffffULL) << 43);
        out[c + 26]  = ((in[w + 54] & 0x000000007fffffffULL) << 10) | ((in[w + 53] & 0x000000007fffffffULL) >> 21);
        out[c + 26] |= ((in[w + 55] & 0x000000007fffffffULL) << 41);
        out[c + 27]  = ((in[w + 56] & 0x000000007fffffffULL) <<  8) | ((in[w + 55] & 0x000000007fffffffULL) >> 23);
        out[c + 27] |= ((in[w + 57] & 0x000000007fffffffULL) << 39);
        out[c + 28]  = ((in[w + 58] & 0x000000007fffffffULL) <<  6) | ((in[w + 57] & 0x000000007fffffffULL) >> 25);
        out[c + 28] |= ((in[w + 59] & 0x000000007fffffffULL) << 37);
        out[c + 29]  = ((in[w + 60] & 0x000000007fffffffULL) <<  4) | ((in[w + 59] & 0x000000007fffffffULL) >> 27);
        out[c + 29] |= ((in[w + 61] & 0x000000007fffffffULL) << 35);
        out[c + 30]  = ((in[w + 62] & 0x000000007fffffffULL) <<  2) | ((in[w + 61] & 0x000000007fffffffULL) >> 29);
        out[c + 30] |= ((in[w + 63] & 0x000000007fffffffULL) << 33);
    }
}

void
pack_64_into_32(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 1, w += 2) {
        out[c + 0]  = ((in[w + 0] & 0x00000000ffffffffULL) <<  0);
        out[c + 0] |= ((in[w + 1] & 0x00000000ffffffffULL) << 32);
    }
}

void
pack_64_into_33(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 33, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x00000001ffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x00000001ffffffffULL) << 33);
        out[c +  1]  = ((in[w +  2] & 0x00000001ffffffffULL) <<  2) | ((in[w +  1] & 0x00000001ffffffffULL) >> 31);
        out[c +  1] |= ((in[w +  3] & 0x00000001ffffffffULL) << 35);
        out[c +  2]  = ((in[w +  4] & 0x00000001ffffffffULL) <<  4) | ((in[w +  3] & 0x00000001ffffffffULL) >> 29);
        out[c +  2] |= ((in[w +  5] & 0x00000001ffffffffULL) << 37);
        out[c +  3]  = ((in[w +  6] & 0x00000001ffffffffULL) <<  6) | ((in[w +  5] & 0x00000001ffffffffULL) >> 27);
        out[c +  3] |= ((in[w +  7] & 0x00000001ffffffffULL) << 39);
        out[c +  4]  = ((in[w +  8] & 0x00000001ffffffffULL) <<  8) | ((in[w +  7] & 0x00000001ffffffffULL) >> 25);
        out[c +  4] |= ((in[w +  9] & 0x00000001ffffffffULL) << 41);
        out[c +  5]  = ((in[w + 10] & 0x00000001ffffffffULL) << 10) | ((in[w +  9] & 0x00000001ffffffffULL) >> 23);
        out[c +  5] |= ((in[w + 11] & 0x00000001ffffffffULL) << 43);
        out[c +  6]  = ((in[w + 12] & 0x00000001ffffffffULL) << 12) | ((in[w + 11] & 0x00000001ffffffffULL) >> 21);
        out[c +  6] |= ((in[w + 13] & 0x00000001ffffffffULL) << 45);
        out[c +  7]  = ((in[w + 14] & 0x00000001ffffffffULL) << 14) | ((in[w + 13] & 0x00000001ffffffffULL) >> 19);
        out[c +  7] |= ((in[w + 15] & 0x00000001ffffffffULL) << 47);
        out[c +  8]  = ((in[w + 16] & 0x00000001ffffffffULL) << 16) | ((in[w + 15] & 0x00000001ffffffffULL) >> 17);
        out[c +  8] |= ((in[w + 17] & 0x00000001ffffffffULL) << 49);
        out[c +  9]  = ((in[w + 18] & 0x00000001ffffffffULL) << 18) | ((in[w + 17] & 0x00000001ffffffffULL) >> 15);
        out[c +  9] |= ((in[w + 19] & 0x00000001ffffffffULL) << 51);
        out[c + 10]  = ((in[w + 20] & 0x00000001ffffffffULL) << 20) | ((in[w + 19] & 0x00000001ffffffffULL) >> 13);
        out[c + 10] |= ((in[w + 21] & 0x00000001ffffffffULL) << 53);
        out[c + 11]  = ((in[w + 22] & 0x00000001ffffffffULL) << 22) | ((in[w + 21] & 0x00000001ffffffffULL) >> 11);
        out[c + 11] |= ((in[w + 23] & 0x00000001ffffffffULL) << 55);
        out[c + 12]  = ((in[w + 24] & 0x00000001ffffffffULL) << 24) | ((in[w + 23] & 0x00000001ffffffffULL) >> 9);
        out[c + 12] |= ((in[w + 25] & 0x00000001ffffffffULL) << 57);
        out[c + 13]  = ((in[w + 26] & 0x00000001ffffffffULL) << 26) | ((in[w + 25] & 0x00000001ffffffffULL) >> 7);
        out[c + 13] |= ((in[w + 27] & 0x00000001ffffffffULL) << 59);
        out[c + 14]  = ((in[w + 28] & 0x00000001ffffffffULL) << 28) | ((in[w + 27] & 0x00000001ffffffffULL) >> 5);
        out[c + 14] |= ((in[w + 29] & 0x00000001ffffffffULL) << 61);
        out[c + 15]  = ((in[w + 30] & 0x00000001ffffffffULL) << 30) | ((in[w + 29] & 0x00000001ffffffffULL) >> 3);
        out[c + 15] |= ((in[w + 31] & 0x00000001ffffffffULL) << 63);
        out[c + 16]  = ((in[w + 32] & 0x00000001ffffffffULL) << 32) | ((in[w + 31] & 0x00000001ffffffffULL) >> 1);
        out[c + 17]  = ((in[w + 33] & 0x00000001ffffffffULL) <<  1) | ((in[w + 32] & 0x00000001ffffffffULL) >> 32);
        out[c + 17] |= ((in[w + 34] & 0x00000001ffffffffULL) << 34);
        out[c + 18]  = ((in[w + 35] & 0x00000001ffffffffULL) <<  3) | ((in[w + 34] & 0x00000001ffffffffULL) >> 30);
        out[c + 18] |= ((in[w + 36] & 0x00000001ffffffffULL) << 36);
        out[c + 19]  = ((in[w + 37] & 0x00000001ffffffffULL) <<  5) | ((in[w + 36] & 0x00000001ffffffffULL) >> 28);
        out[c + 19] |= ((in[w + 38] & 0x00000001ffffffffULL) << 38);
        out[c + 20]  = ((in[w + 39] & 0x00000001ffffffffULL) <<  7) | ((in[w + 38] & 0x00000001ffffffffULL) >> 26);
        out[c + 20] |= ((in[w + 40] & 0x00000001ffffffffULL) << 40);
        out[c + 21]  = ((in[w + 41] & 0x00000001ffffffffULL) <<  9) | ((in[w + 40] & 0x00000001ffffffffULL) >> 24);
        out[c + 21] |= ((in[w + 42] & 0x00000001ffffffffULL) << 42);
        out[c + 22]  = ((in[w + 43] & 0x00000001ffffffffULL) << 11) | ((in[w + 42] & 0x00000001ffffffffULL) >> 22);
        out[c + 22] |= ((in[w + 44] & 0x00000001ffffffffULL) << 44);
        out[c + 23]  = ((in[w + 45] & 0x00000001ffffffffULL) << 13) | ((in[w + 44] & 0x00000001ffffffffULL) >> 20);
        out[c + 23] |= ((in[w + 46] & 0x00000001ffffffffULL) << 46);
        out[c + 24]  = ((in[w + 47] & 0x00000001ffffffffULL) << 15) | ((in[w + 46] & 0x00000001ffffffffULL) >> 18);
        out[c + 24] |= ((in[w + 48] & 0x00000001ffffffffULL) << 48);
        out[c + 25]  = ((in[w + 49] & 0x00000001ffffffffULL) << 17) | ((in[w + 48] & 0x00000001ffffffffULL) >> 16);
        out[c + 25] |= ((in[w + 50] & 0x00000001ffffffffULL) << 50);
        out[c + 26]  = ((in[w + 51] & 0x00000001ffffffffULL) << 19) | ((in[w + 50] & 0x00000001ffffffffULL) >> 14);
        out[c + 26] |= ((in[w + 52] & 0x00000001ffffffffULL) << 52);
        out[c + 27]  = ((in[w + 53] & 0x00000001ffffffffULL) << 21) | ((in[w + 52] & 0x00000001ffffffffULL) >> 12);
        out[c + 27] |= ((in[w + 54] & 0x00000001ffffffffULL) << 54);
        out[c + 28]  = ((in[w + 55] & 0x00000001ffffffffULL) << 23) | ((in[w + 54] & 0x00000001ffffffffULL) >> 10);
        out[c + 28] |= ((in[w + 56] & 0x00000001ffffffffULL) << 56);
        out[c + 29]  = ((in[w + 57] & 0x00000001ffffffffULL) << 25) | ((in[w + 56] & 0x00000001ffffffffULL) >> 8);
        out[c + 29] |= ((in[w + 58] & 0x00000001ffffffffULL) << 58);
        out[c + 30]  = ((in[w + 59] & 0x00000001ffffffffULL) << 27) | ((in[w + 58] & 0x00000001ffffffffULL) >> 6);
        out[c + 30] |= ((in[w + 60] & 0x00000001ffffffffULL) << 60);
        out[c + 31]  = ((in[w + 61] & 0x00000001ffffffffULL) << 29) | ((in[w + 60] & 0x00000001ffffffffULL) >> 4);
        out[c + 31] |= ((in[w + 62] & 0x00000001ffffffffULL) << 62);
        out[c + 32]  = ((in[w + 63] & 0x00000001ffffffffULL) << 31) | ((in[w + 62] & 0x00000001ffffffffULL) >> 2);
    }
}

void
pack_64_into_34(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 17, w += 32) {
        out[c +  0]  = ((in[w +  0] & 0x00000003ffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x00000003ffffffffULL) << 34);
        out[c +  1]  = ((in[w +  2] & 0x00000003ffffffffULL) <<  4) | ((in[w +  1] & 0x00000003ffffffffULL) >> 30);
        out[c +  1] |= ((in[w +  3] & 0x00000003ffffffffULL) << 38);
        out[c +  2]  = ((in[w +  4] & 0x00000003ffffffffULL) <<  8) | ((in[w +  3] & 0x00000003ffffffffULL) >> 26);
        out[c +  2] |= ((in[w +  5] & 0x00000003ffffffffULL) << 42);
        out[c +  3]  = ((in[w +  6] & 0x00000003ffffffffULL) << 12) | ((in[w +  5] & 0x00000003ffffffffULL) >> 22);
        out[c +  3] |= ((in[w +  7] & 0x00000003ffffffffULL) << 46);
        out[c +  4]  = ((in[w +  8] & 0x00000003ffffffffULL) << 16) | ((in[w +  7] & 0x00000003ffffffffULL) >> 18);
        out[c +  4] |= ((in[w +  9] & 0x00000003ffffffffULL) << 50);
        out[c +  5]  = ((in[w + 10] & 0x00000003ffffffffULL) << 20) | ((in[w +  9] & 0x00000003ffffffffULL) >> 14);
        out[c +  5] |= ((in[w + 11] & 0x00000003ffffffffULL) << 54);
        out[c +  6]  = ((in[w + 12] & 0x00000003ffffffffULL) << 24) | ((in[w + 11] & 0x00000003ffffffffULL) >> 10);
        out[c +  6] |= ((in[w + 13] & 0x00000003ffffffffULL) << 58);
        out[c +  7]  = ((in[w + 14] & 0x00000003ffffffffULL) << 28) | ((in[w + 13] & 0x00000003ffffffffULL) >> 6);
        out[c +  7] |= ((in[w + 15] & 0x00000003ffffffffULL) << 62);
        out[c +  8]  = ((in[w + 16] & 0x00000003ffffffffULL) << 32) | ((in[w + 15] & 0x00000003ffffffffULL) >> 2);
        out[c +  9]  = ((in[w + 17] & 0x00000003ffffffffULL) <<  2) | ((in[w + 16] & 0x00000003ffffffffULL) >> 32);
        out[c +  9] |= ((in[w + 18] & 0x00000003ffffffffULL) << 36);
        out[c + 10]  = ((in[w + 19] & 0x00000003ffffffffULL) <<  6) | ((in[w + 18] & 0x00000003ffffffffULL) >> 28);
        out[c + 10] |= ((in[w + 20] & 0x00000003ffffffffULL) << 40);
        out[c + 11]  = ((in[w + 21] & 0x00000003ffffffffULL) << 10) | ((in[w + 20] & 0x00000003ffffffffULL) >> 24);
        out[c + 11] |= ((in[w + 22] & 0x00000003ffffffffULL) << 44);
        out[c + 12]  = ((in[w + 23] & 0x00000003ffffffffULL) << 14) | ((in[w + 22] & 0x00000003ffffffffULL) >> 20);
        out[c + 12] |= ((in[w + 24] & 0x00000003ffffffffULL) << 48);
        out[c + 13]  = ((in[w + 25] & 0x00000003ffffffffULL) << 18) | ((in[w + 24] & 0x00000003ffffffffULL) >> 16);
        out[c + 13] |= ((in[w + 26] & 0x00000003ffffffffULL) << 52);
        out[c + 14]  = ((in[w + 27] & 0x00000003ffffffffULL) << 22) | ((in[w + 26] & 0x00000003ffffffffULL) >> 12);
        out[c + 14] |= ((in[w + 28] & 0x00000003ffffffffULL) << 56);
        out[c + 15]  = ((in[w + 29] & 0x00000003ffffffffULL) << 26) | ((in[w + 28] & 0x00000003ffffffffULL) >> 8);
        out[c + 15] |= ((in[w + 30] & 0x00000003ffffffffULL) << 60);
        out[c + 16]  = ((in[w + 31] & 0x00000003ffffffffULL) << 30) | ((in[w + 30] & 0x00000003ffffffffULL) >> 4);
    }
}

void
pack_64_into_35(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 35, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x00000007ffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x00000007ffffffffULL) << 35);
        out[c +  1]  = ((in[w +  2] & 0x00000007ffffffffULL) <<  6) | ((in[w +  1] & 0x00000007ffffffffULL) >> 29);
        out[c +  1] |= ((in[w +  3] & 0x00000007ffffffffULL) << 41);
        out[c +  2]  = ((in[w +  4] & 0x00000007ffffffffULL) << 12) | ((in[w +  3] & 0x00000007ffffffffULL) >> 23);
        out[c +  2] |= ((in[w +  5] & 0x00000007ffffffffULL) << 47);
        out[c +  3]  = ((in[w +  6] & 0x00000007ffffffffULL) << 18) | ((in[w +  5] & 0x00000007ffffffffULL) >> 17);
        out[c +  3] |= ((in[w +  7] & 0x00000007ffffffffULL) << 53);
        out[c +  4]  = ((in[w +  8] & 0x00000007ffffffffULL) << 24) | ((in[w +  7] & 0x00000007ffffffffULL) >> 11);
        out[c +  4] |= ((in[w +  9] & 0x00000007ffffffffULL) << 59);
        out[c +  5]  = ((in[w + 10] & 0x00000007ffffffffULL) << 30) | ((in[w +  9] & 0x00000007ffffffffULL) >> 5);
        out[c +  6]  = ((in[w + 11] & 0x00000007ffffffffULL) <<  1) | ((in[w + 10] & 0x00000007ffffffffULL) >> 34);
        out[c +  6] |= ((in[w + 12] & 0x00000007ffffffffULL) << 36);
        out[c +  7]  = ((in[w + 13] & 0x00000007ffffffffULL) <<  7) | ((in[w + 12] & 0x00000007ffffffffULL) >> 28);
        out[c +  7] |= ((in[w + 14] & 0x00000007ffffffffULL) << 42);
        out[c +  8]  = ((in[w + 15] & 0x00000007ffffffffULL) << 13) | ((in[w + 14] & 0x00000007ffffffffULL) >> 22);
        out[c +  8] |= ((in[w + 16] & 0x00000007ffffffffULL) << 48);
        out[c +  9]  = ((in[w + 17] & 0x00000007ffffffffULL) << 19) | ((in[w + 16] & 0x00000007ffffffffULL) >> 16);
        out[c +  9] |= ((in[w + 18] & 0x00000007ffffffffULL) << 54);
        out[c + 10]  = ((in[w + 19] & 0x00000007ffffffffULL) << 25) | ((in[w + 18] & 0x00000007ffffffffULL) >> 10);
        out[c + 10] |= ((in[w + 20] & 0x00000007ffffffffULL) << 60);
        out[c + 11]  = ((in[w + 21] & 0x00000007ffffffffULL) << 31) | ((in[w + 20] & 0x00000007ffffffffULL) >> 4);
        out[c + 12]  = ((in[w + 22] & 0x00000007ffffffffULL) <<  2) | ((in[w + 21] & 0x00000007ffffffffULL) >> 33);
        out[c + 12] |= ((in[w + 23] & 0x00000007ffffffffULL) << 37);
        out[c + 13]  = ((in[w + 24] & 0x00000007ffffffffULL) <<  8) | ((in[w + 23] & 0x00000007ffffffffULL) >> 27);
        out[c + 13] |= ((in[w + 25] & 0x00000007ffffffffULL) << 43);
        out[c + 14]  = ((in[w + 26] & 0x00000007ffffffffULL) << 14) | ((in[w + 25] & 0x00000007ffffffffULL) >> 21);
        out[c + 14] |= ((in[w + 27] & 0x00000007ffffffffULL) << 49);
        out[c + 15]  = ((in[w + 28] & 0x00000007ffffffffULL) << 20) | ((in[w + 27] & 0x00000007ffffffffULL) >> 15);
        out[c + 15] |= ((in[w + 29] & 0x00000007ffffffffULL) << 55);
        out[c + 16]  = ((in[w + 30] & 0x00000007ffffffffULL) << 26) | ((in[w + 29] & 0x00000007ffffffffULL) >> 9);
        out[c + 16] |= ((in[w + 31] & 0x00000007ffffffffULL) << 61);
        out[c + 17]  = ((in[w + 32] & 0x00000007ffffffffULL) << 32) | ((in[w + 31] & 0x00000007ffffffffULL) >> 3);
        out[c + 18]  = ((in[w + 33] & 0x00000007ffffffffULL) <<  3) | ((in[w + 32] & 0x00000007ffffffffULL) >> 32);
        out[c + 18] |= ((in[w + 34] & 0x00000007ffffffffULL) << 38);
        out[c + 19]  = ((in[w + 35] & 0x00000007ffffffffULL) <<  9) | ((in[w + 34] & 0x00000007ffffffffULL) >> 26);
        out[c + 19] |= ((in[w + 36] & 0x00000007ffffffffULL) << 44);
        out[c + 20]  = ((in[w + 37] & 0x00000007ffffffffULL) << 15) | ((in[w + 36] & 0x00000007ffffffffULL) >> 20);
        out[c + 20] |= ((in[w + 38] & 0x00000007ffffffffULL) << 50);
        out[c + 21]  = ((in[w + 39] & 0x00000007ffffffffULL) << 21) | ((in[w + 38] & 0x00000007ffffffffULL) >> 14);
        out[c + 21] |= ((in[w + 40] & 0x00000007ffffffffULL) << 56);
        out[c + 22]  = ((in[w + 41] & 0x00000007ffffffffULL) << 27) | ((in[w + 40] & 0x00000007ffffffffULL) >> 8);
        out[c + 22] |= ((in[w + 42] & 0x00000007ffffffffULL) << 62);
        out[c + 23]  = ((in[w + 43] & 0x00000007ffffffffULL) << 33) | ((in[w + 42] & 0x00000007ffffffffULL) >> 2);
        out[c + 24]  = ((in[w + 44] & 0x00000007ffffffffULL) <<  4) | ((in[w + 43] & 0x00000007ffffffffULL) >> 31);
        out[c + 24] |= ((in[w + 45] & 0x00000007ffffffffULL) << 39);
        out[c + 25]  = ((in[w + 46] & 0x00000007ffffffffULL) << 10) | ((in[w + 45] & 0x00000007ffffffffULL) >> 25);
        out[c + 25] |= ((in[w + 47] & 0x00000007ffffffffULL) << 45);
        out[c + 26]  = ((in[w + 48] & 0x00000007ffffffffULL) << 16) | ((in[w + 47] & 0x00000007ffffffffULL) >> 19);
        out[c + 26] |= ((in[w + 49] & 0x00000007ffffffffULL) << 51);
        out[c + 27]  = ((in[w + 50] & 0x00000007ffffffffULL) << 22) | ((in[w + 49] & 0x00000007ffffffffULL) >> 13);
        out[c + 27] |= ((in[w + 51] & 0x00000007ffffffffULL) << 57);
        out[c + 28]  = ((in[w + 52] & 0x00000007ffffffffULL) << 28) | ((in[w + 51] & 0x00000007ffffffffULL) >> 7);
        out[c + 28] |= ((in[w + 53] & 0x00000007ffffffffULL) << 63);
        out[c + 29]  = ((in[w + 54] & 0x00000007ffffffffULL) << 34) | ((in[w + 53] & 0x00000007ffffffffULL) >> 1);
        out[c + 30]  = ((in[w + 55] & 0x00000007ffffffffULL) <<  5) | ((in[w + 54] & 0x00000007ffffffffULL) >> 30);
        out[c + 30] |= ((in[w + 56] & 0x00000007ffffffffULL) << 40);
        out[c + 31]  = ((in[w + 57] & 0x00000007ffffffffULL) << 11) | ((in[w + 56] & 0x00000007ffffffffULL) >> 24);
        out[c + 31] |= ((in[w + 58] & 0x00000007ffffffffULL) << 46);
        out[c + 32]  = ((in[w + 59] & 0x00000007ffffffffULL) << 17) | ((in[w + 58] & 0x00000007ffffffffULL) >> 18);
        out[c + 32] |= ((in[w + 60] & 0x00000007ffffffffULL) << 52);
        out[c + 33]  = ((in[w + 61] & 0x00000007ffffffffULL) << 23) | ((in[w + 60] & 0x00000007ffffffffULL) >> 12);
        out[c + 33] |= ((in[w + 62] & 0x00000007ffffffffULL) << 58);
        out[c + 34]  = ((in[w + 63] & 0x00000007ffffffffULL) << 29) | ((in[w + 62] & 0x00000007ffffffffULL) >> 6);
    }
}

void
pack_64_into_36(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 9, w += 16) {
        out[c + 0]  = ((in[w +  0] & 0x0000000fffffffffULL) <<  0);
        out[c + 0] |= ((in[w +  1] & 0x0000000fffffffffULL) << 36);
        out[c + 1]  = ((in[w +  2] & 0x0000000fffffffffULL) <<  8) | ((in[w +  1] & 0x0000000fffffffffULL) >> 28);
        out[c + 1] |= ((in[w +  3] & 0x0000000fffffffffULL) << 44);
        out[c + 2]  = ((in[w +  4] & 0x0000000fffffffffULL) << 16) | ((in[w +  3] & 0x0000000fffffffffULL) >> 20);
        out[c + 2] |= ((in[w +  5] & 0x0000000fffffffffULL) << 52);
        out[c + 3]  = ((in[w +  6] & 0x0000000fffffffffULL) << 24) | ((in[w +  5] & 0x0000000fffffffffULL) >> 12);
        out[c + 3] |= ((in[w +  7] & 0x0000000fffffffffULL) << 60);
        out[c + 4]  = ((in[w +  8] & 0x0000000fffffffffULL) << 32) | ((in[w +  7] & 0x0000000fffffffffULL) >> 4);
        out[c + 5]  = ((in[w +  9] & 0x0000000fffffffffULL) <<  4) | ((in[w +  8] & 0x0000000fffffffffULL) >> 32);
        out[c + 5] |= ((in[w + 10] & 0x0000000fffffffffULL) << 40);
        out[c + 6]  = ((in[w + 11] & 0x0000000fffffffffULL) << 12) | ((in[w + 10] & 0x0000000fffffffffULL) >> 24);
        out[c + 6] |= ((in[w + 12] & 0x0000000fffffffffULL) << 48);
        out[c + 7]  = ((in[w + 13] & 0x0000000fffffffffULL) << 20) | ((in[w + 12] & 0x0000000fffffffffULL) >> 16);
        out[c + 7] |= ((in[w + 14] & 0x0000000fffffffffULL) << 56);
        out[c + 8]  = ((in[w + 15] & 0x0000000fffffffffULL) << 28) | ((in[w + 14] & 0x0000000fffffffffULL) >> 8);
    }
}

void
pack_64_into_37(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 37, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x0000001fffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x0000001fffffffffULL) << 37);
        out[c +  1]  = ((in[w +  2] & 0x0000001fffffffffULL) << 10) | ((in[w +  1] & 0x0000001fffffffffULL) >> 27);
        out[c +  1] |= ((in[w +  3] & 0x0000001fffffffffULL) << 47);
        out[c +  2]  = ((in[w +  4] & 0x0000001fffffffffULL) << 20) | ((in[w +  3] & 0x0000001fffffffffULL) >> 17);
        out[c +  2] |= ((in[w +  5] & 0x0000001fffffffffULL) << 57);
        out[c +  3]  = ((in[w +  6] & 0x0000001fffffffffULL) << 30) | ((in[w +  5] & 0x0000001fffffffffULL) >> 7);
        out[c +  4]  = ((in[w +  7] & 0x0000001fffffffffULL) <<  3) | ((in[w +  6] & 0x0000001fffffffffULL) >> 34);
        out[c +  4] |= ((in[w +  8] & 0x0000001fffffffffULL) << 40);
        out[c +  5]  = ((in[w +  9] & 0x0000001fffffffffULL) << 13) | ((in[w +  8] & 0x0000001fffffffffULL) >> 24);
        out[c +  5] |= ((in[w + 10] & 0x0000001fffffffffULL) << 50);
        out[c +  6]  = ((in[w + 11] & 0x0000001fffffffffULL) << 23) | ((in[w + 10] & 0x0000001fffffffffULL) >> 14);
        out[c +  6] |= ((in[w + 12] & 0x0000001fffffffffULL) << 60);
        out[c +  7]  = ((in[w + 13] & 0x0000001fffffffffULL) << 33) | ((in[w + 12] & 0x0000001fffffffffULL) >> 4);
        out[c +  8]  = ((in[w + 14] & 0x0000001fffffffffULL) <<  6) | ((in[w + 13] & 0x0000001fffffffffULL) >> 31);
        out[c +  8] |= ((in[w + 15] & 0x0000001fffffffffULL) << 43);
        out[c +  9]  = ((in[w + 16] & 0x0000001fffffffffULL) << 16) | ((in[w + 15] & 0x0000001fffffffffULL) >> 21);
        out[c +  9] |= ((in[w + 17] & 0x0000001fffffffffULL) << 53);
        out[c + 10]  = ((in[w + 18] & 0x0000001fffffffffULL) << 26) | ((in[w + 17] & 0x0000001fffffffffULL) >> 11);
        out[c + 10] |= ((in[w + 19] & 0x0000001fffffffffULL) << 63);
        out[c + 11]  = ((in[w + 20] & 0x0000001fffffffffULL) << 36) | ((in[w + 19] & 0x0000001fffffffffULL) >> 1);
        out[c + 12]  = ((in[w + 21] & 0x0000001fffffffffULL) <<  9) | ((in[w + 20] & 0x0000001fffffffffULL) >> 28);
        out[c + 12] |= ((in[w + 22] & 0x0000001fffffffffULL) << 46);
        out[c + 13]  = ((in[w + 23] & 0x0000001fffffffffULL) << 19) | ((in[w + 22] & 0x0000001fffffffffULL) >> 18);
        out[c + 13] |= ((in[w + 24] & 0x0000001fffffffffULL) << 56);
        out[c + 14]  = ((in[w + 25] & 0x0000001fffffffffULL) << 29) | ((in[w + 24] & 0x0000001fffffffffULL) >> 8);
        out[c + 15]  = ((in[w + 26] & 0x0000001fffffffffULL) <<  2) | ((in[w + 25] & 0x0000001fffffffffULL) >> 35);
        out[c + 15] |= ((in[w + 27] & 0x0000001fffffffffULL) << 39);
        out[c + 16]  = ((in[w + 28] & 0x0000001fffffffffULL) << 12) | ((in[w + 27] & 0x0000001fffffffffULL) >> 25);
        out[c + 16] |= ((in[w + 29] & 0x0000001fffffffffULL) << 49);
        out[c + 17]  = ((in[w + 30] & 0x0000001fffffffffULL) << 22) | ((in[w + 29] & 0x0000001fffffffffULL) >> 15);
        out[c + 17] |= ((in[w + 31] & 0x0000001fffffffffULL) << 59);
        out[c + 18]  = ((in[w + 32] & 0x0000001fffffffffULL) << 32) | ((in[w + 31] & 0x0000001fffffffffULL) >> 5);
        out[c + 19]  = ((in[w + 33] & 0x0000001fffffffffULL) <<  5) | ((in[w + 32] & 0x0000001fffffffffULL) >> 32);
        out[c + 19] |= ((in[w + 34] & 0x0000001fffffffffULL) << 42);
        out[c + 20]  = ((in[w + 35] & 0x0000001fffffffffULL) << 15) | ((in[w + 34] & 0x0000001fffffffffULL) >> 22);
        out[c + 20] |= ((in[w + 36] & 0x0000001fffffffffULL) << 52);
        out[c + 21]  = ((in[w + 37] & 0x0000001fffffffffULL) << 25) | ((in[w + 36] & 0x0000001fffffffffULL) >> 12);
        out[c + 21] |= ((in[w + 38] & 0x0000001fffffffffULL) << 62);
        out[c + 22]  = ((in[w + 39] & 0x0000001fffffffffULL) << 35) | ((in[w + 38] & 0x0000001fffffffffULL) >> 2);
        out[c + 23]  = ((in[w + 40] & 0x0000001fffffffffULL) <<  8) | ((in[w + 39] & 0x0000001fffffffffULL) >> 29);
        out[c + 23] |= ((in[w + 41] & 0x0000001fffffffffULL) << 45);
        out[c + 24]  = ((in[w + 42] & 0x0000001fffffffffULL) << 18) | ((in[w + 41] & 0x0000001fffffffffULL) >> 19);
        out[c + 24] |= ((in[w + 43] & 0x0000001fffffffffULL) << 55);
        out[c + 25]  = ((in[w + 44] & 0x0000001fffffffffULL) << 28) | ((in[w + 43] & 0x0000001fffffffffULL) >> 9);
        out[c + 26]  = ((in[w + 45] & 0x0000001fffffffffULL) <<  1) | ((in[w + 44] & 0x0000001fffffffffULL) >> 36);
        out[c + 26] |= ((in[w + 46] & 0x0000001fffffffffULL) << 38);
        out[c + 27]  = ((in[w + 47] & 0x0000001fffffffffULL) << 11) | ((in[w + 46] & 0x0000001fffffffffULL) >> 26);
        out[c + 27] |= ((in[w + 48] & 0x0000001fffffffffULL) << 48);
        out[c + 28]  = ((in[w + 49] & 0x0000001fffffffffULL) << 21) | ((in[w + 48] & 0x0000001fffffffffULL) >> 16);
        out[c + 28] |= ((in[w + 50] & 0x0000001fffffffffULL) << 58);
        out[c + 29]  = ((in[w + 51] & 0x0000001fffffffffULL) << 31) | ((in[w + 50] & 0x0000001fffffffffULL) >> 6);
        out[c + 30]  = ((in[w + 52] & 0x0000001fffffffffULL) <<  4) | ((in[w + 51] & 0x0000001fffffffffULL) >> 33);
        out[c + 30] |= ((in[w + 53] & 0x0000001fffffffffULL) << 41);
        out[c + 31]  = ((in[w + 54] & 0x0000001fffffffffULL) << 14) | ((in[w + 53] & 0x0000001fffffffffULL) >> 23);
        out[c + 31] |= ((in[w + 55] & 0x0000001fffffffffULL) << 51);
        out[c + 32]  = ((in[w + 56] & 0x0000001fffffffffULL) << 24) | ((in[w + 55] & 0x0000001fffffffffULL) >> 13);
        out[c + 32] |= ((in[w + 57] & 0x0000001fffffffffULL) << 61);
        out[c + 33]  = ((in[w + 58] & 0x0000001fffffffffULL) << 34) | ((in[w + 57] & 0x0000001fffffffffULL) >> 3);
        out[c + 34]  = ((in[w + 59] & 0x0000001fffffffffULL) <<  7) | ((in[w + 58] & 0x0000001fffffffffULL) >> 30);
        out[c + 34] |= ((in[w + 60] & 0x0000001fffffffffULL) << 44);
        out[c + 35]  = ((in[w + 61] & 0x0000001fffffffffULL) << 17) | ((in[w + 60] & 0x0000001fffffffffULL) >> 20);
        out[c + 35] |= ((in[w + 62] & 0x0000001fffffffffULL) << 54);
        out[c + 36]  = ((in[w + 63] & 0x0000001fffffffffULL) << 27) | ((in[w + 62] & 0x0000001fffffffffULL) >> 10);
    }
}

void
pack_64_into_38(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 19, w += 32) {
        out[c +  0]  = ((in[w +  0] & 0x0000003fffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x0000003fffffffffULL) << 38);
        out[c +  1]  = ((in[w +  2] & 0x0000003fffffffffULL) << 12) | ((in[w +  1] & 0x0000003fffffffffULL) >> 26);
        out[c +  1] |= ((in[w +  3] & 0x0000003fffffffffULL) << 50);
        out[c +  2]  = ((in[w +  4] & 0x0000003fffffffffULL) << 24) | ((in[w +  3] & 0x0000003fffffffffULL) >> 14);
        out[c +  2] |= ((in[w +  5] & 0x0000003fffffffffULL) << 62);
        out[c +  3]  = ((in[w +  6] & 0x0000003fffffffffULL) << 36) | ((in[w +  5] & 0x0000003fffffffffULL) >> 2);
        out[c +  4]  = ((in[w +  7] & 0x0000003fffffffffULL) << 10) | ((in[w +  6] & 0x0000003fffffffffULL) >> 28);
        out[c +  4] |= ((in[w +  8] & 0x0000003fffffffffULL) << 48);
        out[c +  5]  = ((in[w +  9] & 0x0000003fffffffffULL) << 22) | ((in[w +  8] & 0x0000003fffffffffULL) >> 16);
        out[c +  5] |= ((in[w + 10] & 0x0000003fffffffffULL) << 60);
        out[c +  6]  = ((in[w + 11] & 0x0000003fffffffffULL) << 34) | ((in[w + 10] & 0x0000003fffffffffULL) >> 4);
        out[c +  7]  = ((in[w + 12] & 0x0000003fffffffffULL) <<  8) | ((in[w + 11] & 0x0000003fffffffffULL) >> 30);
        out[c +  7] |= ((in[w + 13] & 0x0000003fffffffffULL) << 46);
        out[c +  8]  = ((in[w + 14] & 0x0000003fffffffffULL) << 20) | ((in[w + 13] & 0x0000003fffffffffULL) >> 18);
        out[c +  8] |= ((in[w + 15] & 0x0000003fffffffffULL) << 58);
        out[c +  9]  = ((in[w + 16] & 0x0000003fffffffffULL) << 32) | ((in[w + 15] & 0x0000003fffffffffULL) >> 6);
        out[c + 10]  = ((in[w + 17] & 0x0000003fffffffffULL) <<  6) | ((in[w + 16] & 0x0000003fffffffffULL) >> 32);
        out[c + 10] |= ((in[w + 18] & 0x0000003fffffffffULL) << 44);
        out[c + 11]  = ((in[w + 19] & 0x0000003fffffffffULL) << 18) | ((in[w + 18] & 0x0000003fffffffffULL) >> 20);
        out[c + 11] |= ((in[w + 20] & 0x0000003fffffffffULL) << 56);
        out[c + 12]  = ((in[w + 21] & 0x0000003fffffffffULL) << 30) | ((in[w + 20] & 0x0000003fffffffffULL) >> 8);
        out[c + 13]  = ((in[w + 22] & 0x0000003fffffffffULL) <<  4) | ((in[w + 21] & 0x0000003fffffffffULL) >> 34);
        out[c + 13] |= ((in[w + 23] & 0x0000003fffffffffULL) << 42);
        out[c + 14]  = ((in[w + 24] & 0x0000003fffffffffULL) << 16) | ((in[w + 23] & 0x0000003fffffffffULL) >> 22);
        out[c + 14] |= ((in[w + 25] & 0x0000003fffffffffULL) << 54);
        out[c + 15]  = ((in[w + 26] & 0x0000003fffffffffULL) << 28) | ((in[w + 25] & 0x0000003fffffffffULL) >> 10);
        out[c + 16]  = ((in[w + 27] & 0x0000003fffffffffULL) <<  2) | ((in[w + 26] & 0x0000003fffffffffULL) >> 36);
        out[c + 16] |= ((in[w + 28] & 0x0000003fffffffffULL) << 40);
        out[c + 17]  = ((in[w + 29] & 0x0000003fffffffffULL) << 14) | ((in[w + 28] & 0x0000003fffffffffULL) >> 24);
        out[c + 17] |= ((in[w + 30] & 0x0000003fffffffffULL) << 52);
        out[c + 18]  = ((in[w + 31] & 0x0000003fffffffffULL) << 26) | ((in[w + 30] & 0x0000003fffffffffULL) >> 12);
    }
}

void
pack_64_into_39(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 39, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x0000007fffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x0000007fffffffffULL) << 39);
        out[c +  1]  = ((in[w +  2] & 0x0000007fffffffffULL) << 14) | ((in[w +  1] & 0x0000007fffffffffULL) >> 25);
        out[c +  1] |= ((in[w +  3] & 0x0000007fffffffffULL) << 53);
        out[c +  2]  = ((in[w +  4] & 0x0000007fffffffffULL) << 28) | ((in[w +  3] & 0x0000007fffffffffULL) >> 11);
        out[c +  3]  = ((in[w +  5] & 0x0000007fffffffffULL) <<  3) | ((in[w +  4] & 0x0000007fffffffffULL) >> 36);
        out[c +  3] |= ((in[w +  6] & 0x0000007fffffffffULL) << 42);
        out[c +  4]  = ((in[w +  7] & 0x0000007fffffffffULL) << 17) | ((in[w +  6] & 0x0000007fffffffffULL) >> 22);
        out[c +  4] |= ((in[w +  8] & 0x0000007fffffffffULL) << 56);
        out[c +  5]  = ((in[w +  9] & 0x0000007fffffffffULL) << 31) | ((in[w +  8] & 0x0000007fffffffffULL) >> 8);
        out[c +  6]  = ((in[w + 10] & 0x0000007fffffffffULL) <<  6) | ((in[w +  9] & 0x0000007fffffffffULL) >> 33);
        out[c +  6] |= ((in[w + 11] & 0x0000007fffffffffULL) << 45);
        out[c +  7]  = ((in[w + 12] & 0x0000007fffffffffULL) << 20) | ((in[w + 11] & 0x0000007fffffffffULL) >> 19);
        out[c +  7] |= ((in[w + 13] & 0x0000007fffffffffULL) << 59);
        out[c +  8]  = ((in[w + 14] & 0x0000007fffffffffULL) << 34) | ((in[w + 13] & 0x0000007fffffffffULL) >> 5);
        out[c +  9]  = ((in[w + 15] & 0x0000007fffffffffULL) <<  9) | ((in[w + 14] & 0x0000007fffffffffULL) >> 30);
        out[c +  9] |= ((in[w + 16] & 0x0000007fffffffffULL) << 48);
        out[c + 10]  = ((in[w + 17] & 0x0000007fffffffffULL) << 23) | ((in[w + 16] & 0x0000007fffffffffULL) >> 16);
        out[c + 10] |= ((in[w + 18] & 0x0000007fffffffffULL) << 62);
        out[c + 11]  = ((in[w + 19] & 0x0000007fffffffffULL) << 37) | ((in[w + 18] & 0x0000007fffffffffULL) >> 2);
        out[c + 12]  = ((in[w + 20] & 0x0000007fffffffffULL) << 12) | ((in[w + 19] & 0x0000007fffffffffULL) >> 27);
        out[c + 12] |= ((in[w + 21] & 0x0000007fffffffffULL) << 51);
        out[c + 13]  = ((in[w + 22] & 0x0000007fffffffffULL) << 26) | ((in[w + 21] & 0x0000007fffffffffULL) >> 13);
        out[c + 14]  = ((in[w + 23] & 0x0000007fffffffffULL) <<  1) | ((in[w + 22] & 0x0000007fffffffffULL) >> 38);
        out[c + 14] |= ((in[w + 24] & 0x0000007fffffffffULL) << 40);
        out[c + 15]  = ((in[w + 25] & 0x0000007fffffffffULL) << 15) | ((in[w + 24] & 0x0000007fffffffffULL) >> 24);
        out[c + 15] |= ((in[w + 26] & 0x0000007fffffffffULL) << 54);
        out[c + 16]  = ((in[w + 27] & 0x0000007fffffffffULL) << 29) | ((in[w + 26] & 0x0000007fffffffffULL) >> 10);
        out[c + 17]  = ((in[w + 28] & 0x0000007fffffffffULL) <<  4) | ((in[w + 27] & 0x0000007fffffffffULL) >> 35);
        out[c + 17] |= ((in[w + 29] & 0x0000007fffffffffULL) << 43);
        out[c + 18]  = ((in[w + 30] & 0x0000007fffffffffULL) << 18) | ((in[w + 29] & 0x0000007fffffffffULL) >> 21);
        out[c + 18] |= ((in[w + 31] & 0x0000007fffffffffULL) << 57);
        out[c + 19]  = ((in[w + 32] & 0x0000007fffffffffULL) << 32) | ((in[w + 31] & 0x0000007fffffffffULL) >> 7);
        out[c + 20]  = ((in[w + 33] & 0x0000007fffffffffULL) <<  7) | ((in[w + 32] & 0x0000007fffffffffULL) >> 32);
        out[c + 20] |= ((in[w + 34] & 0x0000007fffffffffULL) << 46);
        out[c + 21]  = ((in[w + 35] & 0x0000007fffffffffULL) << 21) | ((in[w + 34] & 0x0000007fffffffffULL) >> 18);
        out[c + 21] |= ((in[w + 36] & 0x0000007fffffffffULL) << 60);
        out[c + 22]  = ((in[w + 37] & 0x0000007fffffffffULL) << 35) | ((in[w + 36] & 0x0000007fffffffffULL) >> 4);
        out[c + 23]  = ((in[w + 38] & 0x0000007fffffffffULL) << 10) | ((in[w + 37] & 0x0000007fffffffffULL) >> 29);
        out[c + 23] |= ((in[w + 39] & 0x0000007fffffffffULL) << 49);
        out[c + 24]  = ((in[w + 40] & 0x0000007fffffffffULL) << 24) | ((in[w + 39] & 0x0000007fffffffffULL) >> 15);
        out[c + 24] |= ((in[w + 41] & 0x0000007fffffffffULL) << 63);
        out[c + 25]  = ((in[w + 42] & 0x0000007fffffffffULL) << 38) | ((in[w + 41] & 0x0000007fffffffffULL) >> 1);
        out[c + 26]  = ((in[w + 43] & 0x0000007fffffffffULL) << 13) | ((in[w + 42] & 0x0000007fffffffffULL) >> 26);
        out[c + 26] |= ((in[w + 44] & 0x0000007fffffffffULL) << 52);
        out[c + 27]  = ((in[w + 45] & 0x0000007fffffffffULL) << 27) | ((in[w + 44] & 0x0000007fffffffffULL) >> 12);
        out[c + 28]  = ((in[w + 46] & 0x0000007fffffffffULL) <<  2) | ((in[w + 45] & 0x0000007fffffffffULL) >> 37);
        out[c + 28] |= ((in[w + 47] & 0x0000007fffffffffULL) << 41);
        out[c + 29]  = ((in[w + 48] & 0x0000007fffffffffULL) << 16) | ((in[w + 47] & 0x0000007fffffffffULL) >> 23);
        out[c + 29] |= ((in[w + 49] & 0x0000007fffffffffULL) << 55);
        out[c + 30]  = ((in[w + 50] & 0x0000007fffffffffULL) << 30) | ((in[w + 49] & 0x0000007fffffffffULL) >> 9);
        out[c + 31]  = ((in[w + 51] & 0x0000007fffffffffULL) <<  5) | ((in[w + 50] & 0x0000007fffffffffULL) >> 34);
        out[c + 31] |= ((in[w + 52] & 0x0000007fffffffffULL) << 44);
        out[c + 32]  = ((in[w + 53] & 0x0000007fffffffffULL) << 19) | ((in[w + 52] & 0x0000007fffffffffULL) >> 20);
        out[c + 32] |= ((in[w + 54] & 0x0000007fffffffffULL) << 58);
        out[c + 33]  = ((in[w + 55] & 0x0000007fffffffffULL) << 33) | ((in[w + 54] & 0x0000007fffffffffULL) >> 6);
        out[c + 34]  = ((in[w + 56] & 0x0000007fffffffffULL) <<  8) | ((in[w + 55] & 0x0000007fffffffffULL) >> 31);
        out[c + 34] |= ((in[w + 57] & 0x0000007fffffffffULL) << 47);
        out[c + 35]  = ((in[w + 58] & 0x0000007fffffffffULL) << 22) | ((in[w + 57] & 0x0000007fffffffffULL) >> 17);
        out[c + 35] |= ((in[w + 59] & 0x0000007fffffffffULL) << 61);
        out[c + 36]  = ((in[w + 60] & 0x0000007fffffffffULL) << 36) | ((in[w + 59] & 0x0000007fffffffffULL) >> 3);
        out[c + 37]  = ((in[w + 61] & 0x0000007fffffffffULL) << 11) | ((in[w + 60] & 0x0000007fffffffffULL) >> 28);
        out[c + 37] |= ((in[w + 62] & 0x0000007fffffffffULL) << 50);
        out[c + 38]  = ((in[w + 63] & 0x0000007fffffffffULL) << 25) | ((in[w + 62] & 0x0000007fffffffffULL) >> 14);
    }
}

void
pack_64_into_40(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 5, w += 8) {
        out[c + 0]  = ((in[w + 0] & 0x000000ffffffffffULL) <<  0);
        out[c + 0] |= ((in[w + 1] & 0x000000ffffffffffULL) << 40);
        out[c + 1]  = ((in[w + 2] & 0x000000ffffffffffULL) << 16) | ((in[w + 1] & 0x000000ffffffffffULL) >> 24);
        out[c + 1] |= ((in[w + 3] & 0x000000ffffffffffULL) << 56);
        out[c + 2]  = ((in[w + 4] & 0x000000ffffffffffULL) << 32) | ((in[w + 3] & 0x000000ffffffffffULL) >> 8);
        out[c + 3]  = ((in[w + 5] & 0x000000ffffffffffULL) <<  8) | ((in[w + 4] & 0x000000ffffffffffULL) >> 32);
        out[c + 3] |= ((in[w + 6] & 0x000000ffffffffffULL) << 48);
        out[c + 4]  = ((in[w + 7] & 0x000000ffffffffffULL) << 24) | ((in[w + 6] & 0x000000ffffffffffULL) >> 16);
    }
}

void
pack_64_into_41(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 41, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x000001ffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x000001ffffffffffULL) << 41);
        out[c +  1]  = ((in[w +  2] & 0x000001ffffffffffULL) << 18) | ((in[w +  1] & 0x000001ffffffffffULL) >> 23);
        out[c +  1] |= ((in[w +  3] & 0x000001ffffffffffULL) << 59);
        out[c +  2]  = ((in[w +  4] & 0x000001ffffffffffULL) << 36) | ((in[w +  3] & 0x000001ffffffffffULL) >> 5);
        out[c +  3]  = ((in[w +  5] & 0x000001ffffffffffULL) << 13) | ((in[w +  4] & 0x000001ffffffffffULL) >> 28);
        out[c +  3] |= ((in[w +  6] & 0x000001ffffffffffULL) << 54);
        out[c +  4]  = ((in[w +  7] & 0x000001ffffffffffULL) << 31) | ((in[w +  6] & 0x000001ffffffffffULL) >> 10);
        out[c +  5]  = ((in[w +  8] & 0x000001ffffffffffULL) <<  8) | ((in[w +  7] & 0x000001ffffffffffULL) >> 33);
        out[c +  5] |= ((in[w +  9] & 0x000001ffffffffffULL) << 49);
        out[c +  6]  = ((in[w + 10] & 0x000001ffffffffffULL) << 26) | ((in[w +  9] & 0x000001ffffffffffULL) >> 15);
        out[c +  7]  = ((in[w + 11] & 0x000001ffffffffffULL) <<  3) | ((in[w + 10] & 0x000001ffffffffffULL) >> 38);
        out[c +  7] |= ((in[w + 12] & 0x000001ffffffffffULL) << 44);
        out[c +  8]  = ((in[w + 13] & 0x000001ffffffffffULL) << 21) | ((in[w + 12] & 0x000001ffffffffffULL) >> 20);
        out[c +  8] |= ((in[w + 14] & 0x000001ffffffffffULL) << 62);
        out[c +  9]  = ((in[w + 15] & 0x000001ffffffffffULL) << 39) | ((in[w + 14] & 0x000001ffffffffffULL) >> 2);
        out[c + 10]  = ((in[w + 16] & 0x000001ffffffffffULL) << 16) | ((in[w + 15] & 0x000001ffffffffffULL) >> 25);
        out[c + 10] |= ((in[w + 17] & 0x000001ffffffffffULL) << 57);
        out[c + 11]  = ((in[w + 18] & 0x000001ffffffffffULL) << 34) | ((in[w + 17] & 0x000001ffffffffffULL) >> 7);
        out[c + 12]  = ((in[w + 19] & 0x000001ffffffffffULL) << 11) | ((in[w + 18] & 0x000001ffffffffffULL) >> 30);
        out[c + 12] |= ((in[w + 20] & 0x000001ffffffffffULL) << 52);
        out[c + 13]  = ((in[w + 21] & 0x000001ffffffffffULL) << 29) | ((in[w + 20] & 0x000001ffffffffffULL) >> 12);
        out[c + 14]  = ((in[w + 22] & 0x000001ffffffffffULL) <<  6) | ((in[w + 21] & 0x000001ffffffffffULL) >> 35);
        out[c + 14] |= ((in[w + 23] & 0x000001ffffffffffULL) << 47);
        out[c + 15]  = ((in[w + 24] & 0x000001ffffffffffULL) << 24) | ((in[w + 23] & 0x000001ffffffffffULL) >> 17);
        out[c + 16]  = ((in[w + 25] & 0x000001ffffffffffULL) <<  1) | ((in[w + 24] & 0x000001ffffffffffULL) >> 40);
        out[c + 16] |= ((in[w + 26] & 0x000001ffffffffffULL) << 42);
        out[c + 17]  = ((in[w + 27] & 0x000001ffffffffffULL) << 19) | ((in[w + 26] & 0x000001ffffffffffULL) >> 22);
        out[c + 17] |= ((in[w + 28] & 0x000001ffffffffffULL) << 60);
        out[c + 18]  = ((in[w + 29] & 0x000001ffffffffffULL) << 37) | ((in[w + 28] & 0x000001ffffffffffULL) >> 4);
        out[c + 19]  = ((in[w + 30] & 0x000001ffffffffffULL) << 14) | ((in[w + 29] & 0x000001ffffffffffULL) >> 27);
        out[c + 19] |= ((in[w + 31] & 0x000001ffffffffffULL) << 55);
        out[c + 20]  = ((in[w + 32] & 0x000001ffffffffffULL) << 32) | ((in[w + 31] & 0x000001ffffffffffULL) >> 9);
        out[c + 21]  = ((in[w + 33] & 0x000001ffffffffffULL) <<  9) | ((in[w + 32] & 0x000001ffffffffffULL) >> 32);
        out[c + 21] |= ((in[w + 34] & 0x000001ffffffffffULL) << 50);
        out[c + 22]  = ((in[w + 35] & 0x000001ffffffffffULL) << 27) | ((in[w + 34] & 0x000001ffffffffffULL) >> 14);
        out[c + 23]  = ((in[w + 36] & 0x000001ffffffffffULL) <<  4) | ((in[w + 35] & 0x000001ffffffffffULL) >> 37);
        out[c + 23] |= ((in[w + 37] & 0x000001ffffffffffULL) << 45);
        out[c + 24]  = ((in[w + 38] & 0x000001ffffffffffULL) << 22) | ((in[w + 37] & 0x000001ffffffffffULL) >> 19);
        out[c + 24] |= ((in[w + 39] & 0x000001ffffffffffULL) << 63);
        out[c + 25]  = ((in[w + 40] & 0x000001ffffffffffULL) << 40) | ((in[w + 39] & 0x000001ffffffffffULL) >> 1);
        out[c + 26]  = ((in[w + 41] & 0x000001ffffffffffULL) << 17) | ((in[w + 40] & 0x000001ffffffffffULL) >> 24);
        out[c + 26] |= ((in[w + 42] & 0x000001ffffffffffULL) << 58);
        out[c + 27]  = ((in[w + 43] & 0x000001ffffffffffULL) << 35) | ((in[w + 42] & 0x000001ffffffffffULL) >> 6);
        out[c + 28]  = ((in[w + 44] & 0x000001ffffffffffULL) << 12) | ((in[w + 43] & 0x000001ffffffffffULL) >> 29);
        out[c + 28] |= ((in[w + 45] & 0x000001ffffffffffULL) << 53);
        out[c + 29]  = ((in[w + 46] & 0x000001ffffffffffULL) << 30) | ((in[w + 45] & 0x000001ffffffffffULL) >> 11);
        out[c + 30]  = ((in[w + 47] & 0x000001ffffffffffULL) <<  7) | ((in[w + 46] & 0x000001ffffffffffULL) >> 34);
        out[c + 30] |= ((in[w + 48] & 0x000001ffffffffffULL) << 48);
        out[c + 31]  = ((in[w + 49] & 0x000001ffffffffffULL) << 25) | ((in[w + 48] & 0x000001ffffffffffULL) >> 16);
        out[c + 32]  = ((in[w + 50] & 0x000001ffffffffffULL) <<  2) | ((in[w + 49] & 0x000001ffffffffffULL) >> 39);
        out[c + 32] |= ((in[w + 51] & 0x000001ffffffffffULL) << 43);
        out[c + 33]  = ((in[w + 52] & 0x000001ffffffffffULL) << 20) | ((in[w + 51] & 0x000001ffffffffffULL) >> 21);
        out[c + 33] |= ((in[w + 53] & 0x000001ffffffffffULL) << 61);
        out[c + 34]  = ((in[w + 54] & 0x000001ffffffffffULL) << 38) | ((in[w + 53] & 0x000001ffffffffffULL) >> 3);
        out[c + 35]  = ((in[w + 55] & 0x000001ffffffffffULL) << 15) | ((in[w + 54] & 0x000001ffffffffffULL) >> 26);
        out[c + 35] |= ((in[w + 56] & 0x000001ffffffffffULL) << 56);
        out[c + 36]  = ((in[w + 57] & 0x000001ffffffffffULL) << 33) | ((in[w + 56] & 0x000001ffffffffffULL) >> 8);
        out[c + 37]  = ((in[w + 58] & 0x000001ffffffffffULL) << 10) | ((in[w + 57] & 0x000001ffffffffffULL) >> 31);
        out[c + 37] |= ((in[w + 59] & 0x000001ffffffffffULL) << 51);
        out[c + 38]  = ((in[w + 60] & 0x000001ffffffffffULL) << 28) | ((in[w + 59] & 0x000001ffffffffffULL) >> 13);
        out[c + 39]  = ((in[w + 61] & 0x000001ffffffffffULL) <<  5) | ((in[w + 60] & 0x000001ffffffffffULL) >> 36);
        out[c + 39] |= ((in[w + 62] & 0x000001ffffffffffULL) << 46);
        out[c + 40]  = ((in[w + 63] & 0x000001ffffffffffULL) << 23) | ((in[w + 62] & 0x000001ffffffffffULL) >> 18);
    }
}

void
pack_64_into_42(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 21, w += 32) {
        out[c +  0]  = ((in[w +  0] & 0x000003ffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x000003ffffffffffULL) << 42);
        out[c +  1]  = ((in[w +  2] & 0x000003ffffffffffULL) << 20) | ((in[w +  1] & 0x000003ffffffffffULL) >> 22);
        out[c +  1] |= ((in[w +  3] & 0x000003ffffffffffULL) << 62);
        out[c +  2]  = ((in[w +  4] & 0x000003ffffffffffULL) << 40) | ((in[w +  3] & 0x000003ffffffffffULL) >> 2);
        out[c +  3]  = ((in[w +  5] & 0x000003ffffffffffULL) << 18) | ((in[w +  4] & 0x000003ffffffffffULL) >> 24);
        out[c +  3] |= ((in[w +  6] & 0x000003ffffffffffULL) << 60);
        out[c +  4]  = ((in[w +  7] & 0x000003ffffffffffULL) << 38) | ((in[w +  6] & 0x000003ffffffffffULL) >> 4);
        out[c +  5]  = ((in[w +  8] & 0x000003ffffffffffULL) << 16) | ((in[w +  7] & 0x000003ffffffffffULL) >> 26);
        out[c +  5] |= ((in[w +  9] & 0x000003ffffffffffULL) << 58);
        out[c +  6]  = ((in[w + 10] & 0x000003ffffffffffULL) << 36) | ((in[w +  9] & 0x000003ffffffffffULL) >> 6);
        out[c +  7]  = ((in[w + 11] & 0x000003ffffffffffULL) << 14) | ((in[w + 10] & 0x000003ffffffffffULL) >> 28);
        out[c +  7] |= ((in[w + 12] & 0x000003ffffffffffULL) << 56);
        out[c +  8]  = ((in[w + 13] & 0x000003ffffffffffULL) << 34) | ((in[w + 12] & 0x000003ffffffffffULL) >> 8);
        out[c +  9]  = ((in[w + 14] & 0x000003ffffffffffULL) << 12) | ((in[w + 13] & 0x000003ffffffffffULL) >> 30);
        out[c +  9] |= ((in[w + 15] & 0x000003ffffffffffULL) << 54);
        out[c + 10]  = ((in[w + 16] & 0x000003ffffffffffULL) << 32) | ((in[w + 15] & 0x000003ffffffffffULL) >> 10);
        out[c + 11]  = ((in[w + 17] & 0x000003ffffffffffULL) << 10) | ((in[w + 16] & 0x000003ffffffffffULL) >> 32);
        out[c + 11] |= ((in[w + 18] & 0x000003ffffffffffULL) << 52);
        out[c + 12]  = ((in[w + 19] & 0x000003ffffffffffULL) << 30) | ((in[w + 18] & 0x000003ffffffffffULL) >> 12);
        out[c + 13]  = ((in[w + 20] & 0x000003ffffffffffULL) <<  8) | ((in[w + 19] & 0x000003ffffffffffULL) >> 34);
        out[c + 13] |= ((in[w + 21] & 0x000003ffffffffffULL) << 50);
        out[c + 14]  = ((in[w + 22] & 0x000003ffffffffffULL) << 28) | ((in[w + 21] & 0x000003ffffffffffULL) >> 14);
        out[c + 15]  = ((in[w + 23] & 0x000003ffffffffffULL) <<  6) | ((in[w + 22] & 0x000003ffffffffffULL) >> 36);
        out[c + 15] |= ((in[w + 24] & 0x000003ffffffffffULL) << 48);
        out[c + 16]  = ((in[w + 25] & 0x000003ffffffffffULL) << 26) | ((in[w + 24] & 0x000003ffffffffffULL) >> 16);
        out[c + 17]  = ((in[w + 26] & 0x000003ffffffffffULL) <<  4) | ((in[w + 25] & 0x000003ffffffffffULL) >> 38);
        out[c + 17] |= ((in[w + 27] & 0x000003ffffffffffULL) << 46);
        out[c + 18]  = ((in[w + 28] & 0x000003ffffffffffULL) << 24) | ((in[w + 27] & 0x000003ffffffffffULL) >> 18);
        out[c + 19]  = ((in[w + 29] & 0x000003ffffffffffULL) <<  2) | ((in[w + 28] & 0x000003ffffffffffULL) >> 40);
        out[c + 19] |= ((in[w + 30] & 0x000003ffffffffffULL) << 44);
        out[c + 20]  = ((in[w + 31] & 0x000003ffffffffffULL) << 22) | ((in[w + 30] & 0x000003ffffffffffULL) >> 20);
    }
}

void
pack_64_into_43(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 43, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x000007ffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x000007ffffffffffULL) << 43);
        out[c +  1]  = ((in[w +  2] & 0x000007ffffffffffULL) << 22) | ((in[w +  1] & 0x000007ffffffffffULL) >> 21);
        out[c +  2]  = ((in[w +  3] & 0x000007ffffffffffULL) <<  1) | ((in[w +  2] & 0x000007ffffffffffULL) >> 42);
        out[c +  2] |= ((in[w +  4] & 0x000007ffffffffffULL) << 44);
        out[c +  3]  = ((in[w +  5] & 0x000007ffffffffffULL) << 23) | ((in[w +  4] & 0x000007ffffffffffULL) >> 20);
        out[c +  4]  = ((in[w +  6] & 0x000007ffffffffffULL) <<  2) | ((in[w +  5] & 0x000007ffffffffffULL) >> 41);
        out[c +  4] |= ((in[w +  7] & 0x000007ffffffffffULL) << 45);
        out[c +  5]  = ((in[w +  8] & 0x000007ffffffffffULL) << 24) | ((in[w +  7] & 0x000007ffffffffffULL) >> 19);
        out[c +  6]  = ((in[w +  9] & 0x000007ffffffffffULL) <<  3) | ((in[w +  8] & 0x000007ffffffffffULL) >> 40);
        out[c +  6] |= ((in[w + 10] & 0x000007ffffffffffULL) << 46);
        out[c +  7]  = ((in[w + 11] & 0x000007ffffffffffULL) << 25) | ((in[w + 10] & 0x000007ffffffffffULL) >> 18);
        out[c +  8]  = ((in[w + 12] & 0x000007ffffffffffULL) <<  4) | ((in[w + 11] & 0x000007ffffffffffULL) >> 39);
        out[c +  8] |= ((in[w + 13] & 0x000007ffffffffffULL) << 47);
        out[c +  9]  = ((in[w + 14] & 0x000007ffffffffffULL) << 26) | ((in[w + 13] & 0x000007ffffffffffULL) >> 17);
        out[c + 10]  = ((in[w + 15] & 0x000007ffffffffffULL) <<  5) | ((in[w + 14] & 0x000007ffffffffffULL) >> 38);
        out[c + 10] |= ((in[w + 16] & 0x000007ffffffffffULL) << 48);
        out[c + 11]  = ((in[w + 17] & 0x000007ffffffffffULL) << 27) | ((in[w + 16] & 0x000007ffffffffffULL) >> 16);
        out[c + 12]  = ((in[w + 18] & 0x000007ffffffffffULL) <<  6) | ((in[w + 17] & 0x000007ffffffffffULL) >> 37);
        out[c + 12] |= ((in[w + 19] & 0x000007ffffffffffULL) << 49);
        out[c + 13]  = ((in[w + 20] & 0x000007ffffffffffULL) << 28) | ((in[w + 19] & 0x000007ffffffffffULL) >> 15);
        out[c + 14]  = ((in[w + 21] & 0x000007ffffffffffULL) <<  7) | ((in[w + 20] & 0x000007ffffffffffULL) >> 36);
        out[c + 14] |= ((in[w + 22] & 0x000007ffffffffffULL) << 50);
        out[c + 15]  = ((in[w + 23] & 0x000007ffffffffffULL) << 29) | ((in[w + 22] & 0x000007ffffffffffULL) >> 14);
        out[c + 16]  = ((in[w + 24] & 0x000007ffffffffffULL) <<  8) | ((in[w + 23] & 0x000007ffffffffffULL) >> 35);
        out[c + 16] |= ((in[w + 25] & 0x000007ffffffffffULL) << 51);
        out[c + 17]  = ((in[w + 26] & 0x000007ffffffffffULL) << 30) | ((in[w + 25] & 0x000007ffffffffffULL) >> 13);
        out[c + 18]  = ((in[w + 27] & 0x000007ffffffffffULL) <<  9) | ((in[w + 26] & 0x000007ffffffffffULL) >> 34);
        out[c + 18] |= ((in[w + 28] & 0x000007ffffffffffULL) << 52);
        out[c + 19]  = ((in[w + 29] & 0x000007ffffffffffULL) << 31) | ((in[w + 28] & 0x000007ffffffffffULL) >> 12);
        out[c + 20]  = ((in[w + 30] & 0x000007ffffffffffULL) << 10) | ((in[w + 29] & 0x000007ffffffffffULL) >> 33);
        out[c + 20] |= ((in[w + 31] & 0x000007ffffffffffULL) << 53);
        out[c + 21]  = ((in[w + 32] & 0x000007ffffffffffULL) << 32) | ((in[w + 31] & 0x000007ffffffffffULL) >> 11);
        out[c + 22]  = ((in[w + 33] & 0x000007ffffffffffULL) << 11) | ((in[w + 32] & 0x000007ffffffffffULL) >> 32);
        out[c + 22] |= ((in[w + 34] & 0x000007ffffffffffULL) << 54);
        out[c + 23]  = ((in[w + 35] & 0x000007ffffffffffULL) << 33) | ((in[w + 34] & 0x000007ffffffffffULL) >> 10);
        out[c + 24]  = ((in[w + 36] & 0x000007ffffffffffULL) << 12) | ((in[w + 35] & 0x000007ffffffffffULL) >> 31);
        out[c + 24] |= ((in[w + 37] & 0x000007ffffffffffULL) << 55);
        out[c + 25]  = ((in[w + 38] & 0x000007ffffffffffULL) << 34) | ((in[w + 37] & 0x000007ffffffffffULL) >> 9);
        out[c + 26]  = ((in[w + 39] & 0x000007ffffffffffULL) << 13) | ((in[w + 38] & 0x000007ffffffffffULL) >> 30);
        out[c + 26] |= ((in[w + 40] & 0x000007ffffffffffULL) << 56);
        out[c + 27]  = ((in[w + 41] & 0x000007ffffffffffULL) << 35) | ((in[w + 40] & 0x000007ffffffffffULL) >> 8);
        out[c + 28]  = ((in[w + 42] & 0x000007ffffffffffULL) << 14) | ((in[w + 41] & 0x000007ffffffffffULL) >> 29);
        out[c + 28] |= ((in[w + 43] & 0x000007ffffffffffULL) << 57);
        out[c + 29]  = ((in[w + 44] & 0x000007ffffffffffULL) << 36) | ((in[w + 43] & 0x000007ffffffffffULL) >> 7);
        out[c + 30]  = ((in[w + 45] & 0x000007ffffffffffULL) << 15) | ((in[w + 44] & 0x000007ffffffffffULL) >> 28);
        out[c + 30] |= ((in[w + 46] & 0x000007ffffffffffULL) << 58);
        out[c + 31]  = ((in[w + 47] & 0x000007ffffffffffULL) << 37) | ((in[w + 46] & 0x000007ffffffffffULL) >> 6);
        out[c + 32]  = ((in[w + 48] & 0x000007ffffffffffULL) << 16) | ((in[w + 47] & 0x000007ffffffffffULL) >> 27);
        out[c + 32] |= ((in[w + 49] & 0x000007ffffffffffULL) << 59);
        out[c + 33]  = ((in[w + 50] & 0x000007ffffffffffULL) << 38) | ((in[w + 49] & 0x000007ffffffffffULL) >> 5);
        out[c + 34]  = ((in[w + 51] & 0x000007ffffffffffULL) << 17) | ((in[w + 50] & 0x000007ffffffffffULL) >> 26);
        out[c + 34] |= ((in[w + 52] & 0x000007ffffffffffULL) << 60);
        out[c + 35]  = ((in[w + 53] & 0x000007ffffffffffULL) << 39) | ((in[w + 52] & 0x000007ffffffffffULL) >> 4);
        out[c + 36]  = ((in[w + 54] & 0x000007ffffffffffULL) << 18) | ((in[w + 53] & 0x000007ffffffffffULL) >> 25);
        out[c + 36] |= ((in[w + 55] & 0x000007ffffffffffULL) << 61);
        out[c + 37]  = ((in[w + 56] & 0x000007ffffffffffULL) << 40) | ((in[w + 55] & 0x000007ffffffffffULL) >> 3);
        out[c + 38]  = ((in[w + 57] & 0x000007ffffffffffULL) << 19) | ((in[w + 56] & 0x000007ffffffffffULL) >> 24);
        out[c + 38] |= ((in[w + 58] & 0x000007ffffffffffULL) << 62);
        out[c + 39]  = ((in[w + 59] & 0x000007ffffffffffULL) << 41) | ((in[w + 58] & 0x000007ffffffffffULL) >> 2);
        out[c + 40]  = ((in[w + 60] & 0x000007ffffffffffULL) << 20) | ((in[w + 59] & 0x000007ffffffffffULL) >> 23);
        out[c + 40] |= ((in[w + 61] & 0x000007ffffffffffULL) << 63);
        out[c + 41]  = ((in[w + 62] & 0x000007ffffffffffULL) << 42) | ((in[w + 61] & 0x000007ffffffffffULL) >> 1);
        out[c + 42]  = ((in[w + 63] & 0x000007ffffffffffULL) << 21) | ((in[w + 62] & 0x000007ffffffffffULL) >> 22);
    }
}

void
pack_64_into_44(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 11, w += 16) {
        out[c +  0]  = ((in[w +  0] & 0x00000fffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x00000fffffffffffULL) << 44);
        out[c +  1]  = ((in[w +  2] & 0x00000fffffffffffULL) << 24) | ((in[w +  1] & 0x00000fffffffffffULL) >> 20);
        out[c +  2]  = ((in[w +  3] & 0x00000fffffffffffULL) <<  4) | ((in[w +  2] & 0x00000fffffffffffULL) >> 40);
        out[c +  2] |= ((in[w +  4] & 0x00000fffffffffffULL) << 48);
        out[c +  3]  = ((in[w +  5] & 0x00000fffffffffffULL) << 28) | ((in[w +  4] & 0x00000fffffffffffULL) >> 16);
        out[c +  4]  = ((in[w +  6] & 0x00000fffffffffffULL) <<  8) | ((in[w +  5] & 0x00000fffffffffffULL) >> 36);
        out[c +  4] |= ((in[w +  7] & 0x00000fffffffffffULL) << 52);
        out[c +  5]  = ((in[w +  8] & 0x00000fffffffffffULL) << 32) | ((in[w +  7] & 0x00000fffffffffffULL) >> 12);
        out[c +  6]  = ((in[w +  9] & 0x00000fffffffffffULL) << 12) | ((in[w +  8] & 0x00000fffffffffffULL) >> 32);
        out[c +  6] |= ((in[w + 10] & 0x00000fffffffffffULL) << 56);
        out[c +  7]  = ((in[w + 11] & 0x00000fffffffffffULL) << 36) | ((in[w + 10] & 0x00000fffffffffffULL) >> 8);
        out[c +  8]  = ((in[w + 12] & 0x00000fffffffffffULL) << 16) | ((in[w + 11] & 0x00000fffffffffffULL) >> 28);
        out[c +  8] |= ((in[w + 13] & 0x00000fffffffffffULL) << 60);
        out[c +  9]  = ((in[w + 14] & 0x00000fffffffffffULL) << 40) | ((in[w + 13] & 0x00000fffffffffffULL) >> 4);
        out[c + 10]  = ((in[w + 15] & 0x00000fffffffffffULL) << 20) | ((in[w + 14] & 0x00000fffffffffffULL) >> 24);
    }
}

void
pack_64_into_45(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 45, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x00001fffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x00001fffffffffffULL) << 45);
        out[c +  1]  = ((in[w +  2] & 0x00001fffffffffffULL) << 26) | ((in[w +  1] & 0x00001fffffffffffULL) >> 19);
        out[c +  2]  = ((in[w +  3] & 0x00001fffffffffffULL) <<  7) | ((in[w +  2] & 0x00001fffffffffffULL) >> 38);
        out[c +  2] |= ((in[w +  4] & 0x00001fffffffffffULL) << 52);
        out[c +  3]  = ((in[w +  5] & 0x00001fffffffffffULL) << 33) | ((in[w +  4] & 0x00001fffffffffffULL) >> 12);
        out[c +  4]  = ((in[w +  6] & 0x00001fffffffffffULL) << 14) | ((in[w +  5] & 0x00001fffffffffffULL) >> 31);
        out[c +  4] |= ((in[w +  7] & 0x00001fffffffffffULL) << 59);
        out[c +  5]  = ((in[w +  8] & 0x00001fffffffffffULL) << 40) | ((in[w +  7] & 0x00001fffffffffffULL) >> 5);
        out[c +  6]  = ((in[w +  9] & 0x00001fffffffffffULL) << 21) | ((in[w +  8] & 0x00001fffffffffffULL) >> 24);
        out[c +  7]  = ((in[w + 10] & 0x00001fffffffffffULL) <<  2) | ((in[w +  9] & 0x00001fffffffffffULL) >> 43);
        out[c +  7] |= ((in[w + 11] & 0x00001fffffffffffULL) << 47);
        out[c +  8]  = ((in[w + 12] & 0x00001fffffffffffULL) << 28) | ((in[w + 11] & 0x00001fffffffffffULL) >> 17);
        out[c +  9]  = ((in[w + 13] & 0x00001fffffffffffULL) <<  9) | ((in[w + 12] & 0x00001fffffffffffULL) >> 36);
        out[c +  9] |= ((in[w + 14] & 0x00001fffffffffffULL) << 54);
        out[c + 10]  = ((in[w + 15] & 0x00001fffffffffffULL) << 35) | ((in[w + 14] & 0x00001fffffffffffULL) >> 10);
        out[c + 11]  = ((in[w + 16] & 0x00001fffffffffffULL) << 16) | ((in[w + 15] & 0x00001fffffffffffULL) >> 29);
        out[c + 11] |= ((in[w + 17] & 0x00001fffffffffffULL) << 61);
        out[c + 12]  = ((in[w + 18] & 0x00001fffffffffffULL) << 42) | ((in[w + 17] & 0x00001fffffffffffULL) >> 3);
        out[c + 13]  = ((in[w + 19] & 0x00001fffffffffffULL) << 23) | ((in[w + 18] & 0x00001fffffffffffULL) >> 22);
        out[c + 14]  = ((in[w + 20] & 0x00001fffffffffffULL) <<  4) | ((in[w + 19] & 0x00001fffffffffffULL) >> 41);
        out[c + 14] |= ((in[w + 21] & 0x00001fffffffffffULL) << 49);
        out[c + 15]  = ((in[w + 22] & 0x00001fffffffffffULL) << 30) | ((in[w + 21] & 0x00001fffffffffffULL) >> 15);
        out[c + 16]  = ((in[w + 23] & 0x00001fffffffffffULL) << 11) | ((in[w + 22] & 0x00001fffffffffffULL) >> 34);
        out[c + 16] |= ((in[w + 24] & 0x00001fffffffffffULL) << 56);
        out[c + 17]  = ((in[w + 25] & 0x00001fffffffffffULL) << 37) | ((in[w + 24] & 0x00001fffffffffffULL) >> 8);
        out[c + 18]  = ((in[w + 26] & 0x00001fffffffffffULL) << 18) | ((in[w + 25] & 0x00001fffffffffffULL) >> 27);
        out[c + 18] |= ((in[w + 27] & 0x00001fffffffffffULL) << 63);
        out[c + 19]  = ((in[w + 28] & 0x00001fffffffffffULL) << 44) | ((in[w + 27] & 0x00001fffffffffffULL) >> 1);
        out[c + 20]  = ((in[w + 29] & 0x00001fffffffffffULL) << 25) | ((in[w + 28] & 0x00001fffffffffffULL) >> 20);
        out[c + 21]  = ((in[w + 30] & 0x00001fffffffffffULL) <<  6) | ((in[w + 29] & 0x00001fffffffffffULL) >> 39);
        out[c + 21] |= ((in[w + 31] & 0x00001fffffffffffULL) << 51);
        out[c + 22]  = ((in[w + 32] & 0x00001fffffffffffULL) << 32) | ((in[w + 31] & 0x00001fffffffffffULL) >> 13);
        out[c + 23]  = ((in[w + 33] & 0x00001fffffffffffULL) << 13) | ((in[w + 32] & 0x00001fffffffffffULL) >> 32);
        out[c + 23] |= ((in[w + 34] & 0x00001fffffffffffULL) << 58);
        out[c + 24]  = ((in[w + 35] & 0x00001fffffffffffULL) << 39) | ((in[w + 34] & 0x00001fffffffffffULL) >> 6);
        out[c + 25]  = ((in[w + 36] & 0x00001fffffffffffULL) << 20) | ((in[w + 35] & 0x00001fffffffffffULL) >> 25);
        out[c + 26]  = ((in[w + 37] & 0x00001fffffffffffULL) <<  1) | ((in[w + 36] & 0x00001fffffffffffULL) >> 44);
        out[c + 26] |= ((in[w + 38] & 0x00001fffffffffffULL) << 46);
        out[c + 27]  = ((in[w + 39] & 0x00001fffffffffffULL) << 27) | ((in[w + 38] & 0x00001fffffffffffULL) >> 18);
        out[c + 28]  = ((in[w + 40] & 0x00001fffffffffffULL) <<  8) | ((in[w + 39] & 0x00001fffffffffffULL) >> 37);
        out[c + 28] |= ((in[w + 41] & 0x00001fffffffffffULL) << 53);
        out[c + 29]  = ((in[w + 42] & 0x00001fffffffffffULL) << 34) | ((in[w + 41] & 0x00001fffffffffffULL) >> 11);
        out[c + 30]  = ((in[w + 43] & 0x00001fffffffffffULL) << 15) | ((in[w + 42] & 0x00001fffffffffffULL) >> 30);
        out[c + 30] |= ((in[w + 44] & 0x00001fffffffffffULL) << 60);
        out[c + 31]  = ((in[w + 45] & 0x00001fffffffffffULL) << 41) | ((in[w + 44] & 0x00001fffffffffffULL) >> 4);
        out[c + 32]  = ((in[w + 46] & 0x00001fffffffffffULL) << 22) | ((in[w + 45] & 0x00001fffffffffffULL) >> 23);
        out[c + 33]  = ((in[w + 47] & 0x00001fffffffffffULL) <<  3) | ((in[w + 46] & 0x00001fffffffffffULL) >> 42);
        out[c + 33] |= ((in[w + 48] & 0x00001fffffffffffULL) << 48);
        out[c + 34]  = ((in[w + 49] & 0x00001fffffffffffULL) << 29) | ((in[w + 48] & 0x00001fffffffffffULL) >> 16);
        out[c + 35]  = ((in[w + 50] & 0x00001fffffffffffULL) << 10) | ((in[w + 49] & 0x00001fffffffffffULL) >> 35);
        out[c + 35] |= ((in[w + 51] & 0x00001fffffffffffULL) << 55);
        out[c + 36]  = ((in[w + 52] & 0x00001fffffffffffULL) << 36) | ((in[w + 51] & 0x00001fffffffffffULL) >> 9);
        out[c + 37]  = ((in[w + 53] & 0x00001fffffffffffULL) << 17) | ((in[w + 52] & 0x00001fffffffffffULL) >> 28);
        out[c + 37] |= ((in[w + 54] & 0x00001fffffffffffULL) << 62);
        out[c + 38]  = ((in[w + 55] & 0x00001fffffffffffULL) << 43) | ((in[w + 54] & 0x00001fffffffffffULL) >> 2);
        out[c + 39]  = ((in[w + 56] & 0x00001fffffffffffULL) << 24) | ((in[w + 55] & 0x00001fffffffffffULL) >> 21);
        out[c + 40]  = ((in[w + 57] & 0x00001fffffffffffULL) <<  5) | ((in[w + 56] & 0x00001fffffffffffULL) >> 40);
        out[c + 40] |= ((in[w + 58] & 0x00001fffffffffffULL) << 50);
        out[c + 41]  = ((in[w + 59] & 0x00001fffffffffffULL) << 31) | ((in[w + 58] & 0x00001fffffffffffULL) >> 14);
        out[c + 42]  = ((in[w + 60] & 0x00001fffffffffffULL) << 12) | ((in[w + 59] & 0x00001fffffffffffULL) >> 33);
        out[c + 42] |= ((in[w + 61] & 0x00001fffffffffffULL) << 57);
        out[c + 43]  = ((in[w + 62] & 0x00001fffffffffffULL) << 38) | ((in[w + 61] & 0x00001fffffffffffULL) >> 7);
        out[c + 44]  = ((in[w + 63] & 0x00001fffffffffffULL) << 19) | ((in[w + 62] & 0x00001fffffffffffULL) >> 26);
    }
}

void
pack_64_into_46(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 23, w += 32) {
        out[c +  0]  = ((in[w +  0] & 0x00003fffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x00003fffffffffffULL) << 46);
        out[c +  1]  = ((in[w +  2] & 0x00003fffffffffffULL) << 28) | ((in[w +  1] & 0x00003fffffffffffULL) >> 18);
        out[c +  2]  = ((in[w +  3] & 0x00003fffffffffffULL) << 10) | ((in[w +  2] & 0x00003fffffffffffULL) >> 36);
        out[c +  2] |= ((in[w +  4] & 0x00003fffffffffffULL) << 56);
        out[c +  3]  = ((in[w +  5] & 0x00003fffffffffffULL) << 38) | ((in[w +  4] & 0x00003fffffffffffULL) >> 8);
        out[c +  4]  = ((in[w +  6] & 0x00003fffffffffffULL) << 20) | ((in[w +  5] & 0x00003fffffffffffULL) >> 26);
        out[c +  5]  = ((in[w +  7] & 0x00003fffffffffffULL) <<  2) | ((in[w +  6] & 0x00003fffffffffffULL) >> 44);
        out[c +  5] |= ((in[w +  8] & 0x00003fffffffffffULL) << 48);
        out[c +  6]  = ((in[w +  9] & 0x00003fffffffffffULL) << 30) | ((in[w +  8] & 0x00003fffffffffffULL) >> 16);
        out[c +  7]  = ((in[w + 10] & 0x00003fffffffffffULL) << 12) | ((in[w +  9] & 0x00003fffffffffffULL) >> 34);
        out[c +  7] |= ((in[w + 11] & 0x00003fffffffffffULL) << 58);
        out[c +  8]  = ((in[w + 12] & 0x00003fffffffffffULL) << 40) | ((in[w + 11] & 0x00003fffffffffffULL) >> 6);
        out[c +  9]  = ((in[w + 13] & 0x00003fffffffffffULL) << 22) | ((in[w + 12] & 0x00003fffffffffffULL) >> 24);
        out[c + 10]  = ((in[w + 14] & 0x00003fffffffffffULL) <<  4) | ((in[w + 13] & 0x00003fffffffffffULL) >> 42);
        out[c + 10] |= ((in[w + 15] & 0x00003fffffffffffULL) << 50);
        out[c + 11]  = ((in[w + 16] & 0x00003fffffffffffULL) << 32) | ((in[w + 15] & 0x00003fffffffffffULL) >> 14);
        out[c + 12]  = ((in[w + 17] & 0x00003fffffffffffULL) << 14) | ((in[w + 16] & 0x00003fffffffffffULL) >> 32);
        out[c + 12] |= ((in[w + 18] & 0x00003fffffffffffULL) << 60);
        out[c + 13]  = ((in[w + 19] & 0x00003fffffffffffULL) << 42) | ((in[w + 18] & 0x00003fffffffffffULL) >> 4);
        out[c + 14]  = ((in[w + 20] & 0x00003fffffffffffULL) << 24) | ((in[w + 19] & 0x00003fffffffffffULL) >> 22);
        out[c + 15]  = ((in[w + 21] & 0x00003fffffffffffULL) <<  6) | ((in[w + 20] & 0x00003fffffffffffULL) >> 40);
        out[c + 15] |= ((in[w + 22] & 0x00003fffffffffffULL) << 52);
        out[c + 16]  = ((in[w + 23] & 0x00003fffffffffffULL) << 34) | ((in[w + 22] & 0x00003fffffffffffULL) >> 12);
        out[c + 17]  = ((in[w + 24] & 0x00003fffffffffffULL) << 16) | ((in[w + 23] & 0x00003fffffffffffULL) >> 30);
        out[c + 17] |= ((in[w + 25] & 0x00003fffffffffffULL) << 62);
        out[c + 18]  = ((in[w + 26] & 0x00003fffffffffffULL) << 44) | ((in[w + 25] & 0x00003fffffffffffULL) >> 2);
        out[c + 19]  = ((in[w + 27] & 0x00003fffffffffffULL) << 26) | ((in[w + 26] & 0x00003fffffffffffULL) >> 20);
        out[c + 20]  = ((in[w + 28] & 0x00003fffffffffffULL) <<  8) | ((in[w + 27] & 0x00003fffffffffffULL) >> 38);
        out[c + 20] |= ((in[w + 29] & 0x00003fffffffffffULL) << 54);
        out[c + 21]  = ((in[w + 30] & 0x00003fffffffffffULL) << 36) | ((in[w + 29] & 0x00003fffffffffffULL) >> 10);
        out[c + 22]  = ((in[w + 31] & 0x00003fffffffffffULL) << 18) | ((in[w + 30] & 0x00003fffffffffffULL) >> 28);
    }
}

void
pack_64_into_47(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 47, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x00007fffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x00007fffffffffffULL) << 47);
        out[c +  1]  = ((in[w +  2] & 0x00007fffffffffffULL) << 30) | ((in[w +  1] & 0x00007fffffffffffULL) >> 17);
        out[c +  2]  = ((in[w +  3] & 0x00007fffffffffffULL) << 13) | ((in[w +  2] & 0x00007fffffffffffULL) >> 34);
        out[c +  2] |= ((in[w +  4] & 0x00007fffffffffffULL) << 60);
        out[c +  3]  = ((in[w +  5] & 0x00007fffffffffffULL) << 43) | ((in[w +  4] & 0x00007fffffffffffULL) >> 4);
        out[c +  4]  = ((in[w +  6] & 0x00007fffffffffffULL) << 26) | ((in[w +  5] & 0x00007fffffffffffULL) >> 21);
        out[c +  5]  = ((in[w +  7] & 0x00007fffffffffffULL) <<  9) | ((in[w +  6] & 0x00007fffffffffffULL) >> 38);
        out[c +  5] |= ((in[w +  8] & 0x00007fffffffffffULL) << 56);
        out[c +  6]  = ((in[w +  9] & 0x00007fffffffffffULL) << 39) | ((in[w +  8] & 0x00007fffffffffffULL) >> 8);
        out[c +  7]  = ((in[w + 10] & 0x00007fffffffffffULL) << 22) | ((in[w +  9] & 0x00007fffffffffffULL) >> 25);
        out[c +  8]  = ((in[w + 11] & 0x00007fffffffffffULL) <<  5) | ((in[w + 10] & 0x00007fffffffffffULL) >> 42);
        out[c +  8] |= ((in[w + 12] & 0x00007fffffffffffULL) << 52);
        out[c +  9]  = ((in[w + 13] & 0x00007fffffffffffULL) << 35) | ((in[w + 12] & 0x00007fffffffffffULL) >> 12);
        out[c + 10]  = ((in[w + 14] & 0x00007fffffffffffULL) << 18) | ((in[w + 13] & 0x00007fffffffffffULL) >> 29);
        out[c + 11]  = ((in[w + 15] & 0x00007fffffffffffULL) <<  1) | ((in[w + 14] & 0x00007fffffffffffULL) >> 46);
        out[c + 11] |= ((in[w + 16] & 0x00007fffffffffffULL) << 48);
        out[c + 12]  = ((in[w + 17] & 0x00007fffffffffffULL) << 31) | ((in[w + 16] & 0x00007fffffffffffULL) >> 16);
        out[c + 13]  = ((in[w + 18] & 0x00007fffffffffffULL) << 14) | ((in[w + 17] & 0x00007fffffffffffULL) >> 33);
        out[c + 13] |= ((in[w + 19] & 0x00007fffffffffffULL) << 61);
        out[c + 14]  = ((in[w + 20] & 0x00007fffffffffffULL) << 44) | ((in[w + 19] & 0x00007fffffffffffULL) >> 3);
        out[c + 15]  = ((in[w + 21] & 0x00007fffffffffffULL) << 27) | ((in[w + 20] & 0x00007fffffffffffULL) >> 20);
        out[c + 16]  = ((in[w + 22] & 0x00007fffffffffffULL) << 10) | ((in[w + 21] & 0x00007fffffffffffULL) >> 37);
        out[c + 16] |= ((in[w + 23] & 0x00007fffffffffffULL) << 57);
        out[c + 17]  = ((in[w + 24] & 0x00007fffffffffffULL) << 40) | ((in[w + 23] & 0x00007fffffffffffULL) >> 7);
        out[c + 18]  = ((in[w + 25] & 0x00007fffffffffffULL) << 23) | ((in[w + 24] & 0x00007fffffffffffULL) >> 24);
        out[c + 19]  = ((in[w + 26] & 0x00007fffffffffffULL) <<  6) | ((in[w + 25] & 0x00007fffffffffffULL) >> 41);
        out[c + 19] |= ((in[w + 27] & 0x00007fffffffffffULL) << 53);
        out[c + 20]  = ((in[w + 28] & 0x00007fffffffffffULL) << 36) | ((in[w + 27] & 0x00007fffffffffffULL) >> 11);
        out[c + 21]  = ((in[w + 29] & 0x00007fffffffffffULL) << 19) | ((in[w + 28] & 0x00007fffffffffffULL) >> 28);
        out[c + 22]  = ((in[w + 30] & 0x00007fffffffffffULL) <<  2) | ((in[w + 29] & 0x00007fffffffffffULL) >> 45);
        out[c + 22] |= ((in[w + 31] & 0x00007fffffffffffULL) << 49);
        out[c + 23]  = ((in[w + 32] & 0x00007fffffffffffULL) << 32) | ((in[w + 31] & 0x00007fffffffffffULL) >> 15);
        out[c + 24]  = ((in[w + 33] & 0x00007fffffffffffULL) << 15) | ((in[w + 32] & 0x00007fffffffffffULL) >> 32);
        out[c + 24] |= ((in[w + 34] & 0x00007fffffffffffULL) << 62);
        out[c + 25]  = ((in[w + 35] & 0x00007fffffffffffULL) << 45) | ((in[w + 34] & 0x00007fffffffffffULL) >> 2);
        out[c + 26]  = ((in[w + 36] & 0x00007fffffffffffULL) << 28) | ((in[w + 35] & 0x00007fffffffffffULL) >> 19);
        out[c + 27]  = ((in[w + 37] & 0x00007fffffffffffULL) << 11) | ((in[w + 36] & 0x00007fffffffffffULL) >> 36);
        out[c + 27] |= ((in[w + 38] & 0x00007fffffffffffULL) << 58);
        out[c + 28]  = ((in[w + 39] & 0x00007fffffffffffULL) << 41) | ((in[w + 38] & 0x00007fffffffffffULL) >> 6);
        out[c + 29]  = ((in[w + 40] & 0x00007fffffffffffULL) << 24) | ((in[w + 39] & 0x00007fffffffffffULL) >> 23);
        out[c + 30]  = ((in[w + 41] & 0x00007fffffffffffULL) <<  7) | ((in[w + 40] & 0x00007fffffffffffULL) >> 40);
        out[c + 30] |= ((in[w + 42] & 0x00007fffffffffffULL) << 54);
        out[c + 31]  = ((in[w + 43] & 0x00007fffffffffffULL) << 37) | ((in[w + 42] & 0x00007fffffffffffULL) >> 10);
        out[c + 32]  = ((in[w + 44] & 0x00007fffffffffffULL) << 20) | ((in[w + 43] & 0x00007fffffffffffULL) >> 27);
        out[c + 33]  = ((in[w + 45] & 0x00007fffffffffffULL) <<  3) | ((in[w + 44] & 0x00007fffffffffffULL) >> 44);
        out[c + 33] |= ((in[w + 46] & 0x00007fffffffffffULL) << 50);
        out[c + 34]  = ((in[w + 47] & 0x00007fffffffffffULL) << 33) | ((in[w + 46] & 0x00007fffffffffffULL) >> 14);
        out[c + 35]  = ((in[w + 48] & 0x00007fffffffffffULL) << 16) | ((in[w + 47] & 0x00007fffffffffffULL) >> 31);
        out[c + 35] |= ((in[w + 49] & 0x00007fffffffffffULL) << 63);
        out[c + 36]  = ((in[w + 50] & 0x00007fffffffffffULL) << 46) | ((in[w + 49] & 0x00007fffffffffffULL) >> 1);
        out[c + 37]  = ((in[w + 51] & 0x00007fffffffffffULL) << 29) | ((in[w + 50] & 0x00007fffffffffffULL) >> 18);
        out[c + 38]  = ((in[w + 52] & 0x00007fffffffffffULL) << 12) | ((in[w + 51] & 0x00007fffffffffffULL) >> 35);
        out[c + 38] |= ((in[w + 53] & 0x00007fffffffffffULL) << 59);
        out[c + 39]  = ((in[w + 54] & 0x00007fffffffffffULL) << 42) | ((in[w + 53] & 0x00007fffffffffffULL) >> 5);
        out[c + 40]  = ((in[w + 55] & 0x00007fffffffffffULL) << 25) | ((in[w + 54] & 0x00007fffffffffffULL) >> 22);
        out[c + 41]  = ((in[w + 56] & 0x00007fffffffffffULL) <<  8) | ((in[w + 55] & 0x00007fffffffffffULL) >> 39);
        out[c + 41] |= ((in[w + 57] & 0x00007fffffffffffULL) << 55);
        out[c + 42]  = ((in[w + 58] & 0x00007fffffffffffULL) << 38) | ((in[w + 57] & 0x00007fffffffffffULL) >> 9);
        out[c + 43]  = ((in[w + 59] & 0x00007fffffffffffULL) << 21) | ((in[w + 58] & 0x00007fffffffffffULL) >> 26);
        out[c + 44]  = ((in[w + 60] & 0x00007fffffffffffULL) <<  4) | ((in[w + 59] & 0x00007fffffffffffULL) >> 43);
        out[c + 44] |= ((in[w + 61] & 0x00007fffffffffffULL) << 51);
        out[c + 45]  = ((in[w + 62] & 0x00007fffffffffffULL) << 34) | ((in[w + 61] & 0x00007fffffffffffULL) >> 13);
        out[c + 46]  = ((in[w + 63] & 0x00007fffffffffffULL) << 17) | ((in[w + 62] & 0x00007fffffffffffULL) >> 30);
    }
}

void
pack_64_into_48(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 3, w += 4) {
        out[c + 0]  = ((in[w + 0] & 0x0000ffffffffffffULL) <<  0);
        out[c + 0] |= ((in[w + 1] & 0x0000ffffffffffffULL) << 48);
        out[c + 1]  = ((in[w + 2] & 0x0000ffffffffffffULL) << 32) | ((in[w + 1] & 0x0000ffffffffffffULL) >> 16);
        out[c + 2]  = ((in[w + 3] & 0x0000ffffffffffffULL) << 16) | ((in[w + 2] & 0x0000ffffffffffffULL) >> 32);
    }
}

void
pack_64_into_49(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 49, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x0001ffffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x0001ffffffffffffULL) << 49);
        out[c +  1]  = ((in[w +  2] & 0x0001ffffffffffffULL) << 34) | ((in[w +  1] & 0x0001ffffffffffffULL) >> 15);
        out[c +  2]  = ((in[w +  3] & 0x0001ffffffffffffULL) << 19) | ((in[w +  2] & 0x0001ffffffffffffULL) >> 30);
        out[c +  3]  = ((in[w +  4] & 0x0001ffffffffffffULL) <<  4) | ((in[w +  3] & 0x0001ffffffffffffULL) >> 45);
        out[c +  3] |= ((in[w +  5] & 0x0001ffffffffffffULL) << 53);
        out[c +  4]  = ((in[w +  6] & 0x0001ffffffffffffULL) << 38) | ((in[w +  5] & 0x0001ffffffffffffULL) >> 11);
        out[c +  5]  = ((in[w +  7] & 0x0001ffffffffffffULL) << 23) | ((in[w +  6] & 0x0001ffffffffffffULL) >> 26);
        out[c +  6]  = ((in[w +  8] & 0x0001ffffffffffffULL) <<  8) | ((in[w +  7] & 0x0001ffffffffffffULL) >> 41);
        out[c +  6] |= ((in[w +  9] & 0x0001ffffffffffffULL) << 57);
        out[c +  7]  = ((in[w + 10] & 0x0001ffffffffffffULL) << 42) | ((in[w +  9] & 0x0001ffffffffffffULL) >> 7);
        out[c +  8]  = ((in[w + 11] & 0x0001ffffffffffffULL) << 27) | ((in[w + 10] & 0x0001ffffffffffffULL) >> 22);
        out[c +  9]  = ((in[w + 12] & 0x0001ffffffffffffULL) << 12) | ((in[w + 11] & 0x0001ffffffffffffULL) >> 37);
        out[c +  9] |= ((in[w + 13] & 0x0001ffffffffffffULL) << 61);
        out[c + 10]  = ((in[w + 14] & 0x0001ffffffffffffULL) << 46) | ((in[w + 13] & 0x0001ffffffffffffULL) >> 3);
        out[c + 11]  = ((in[w + 15] & 0x0001ffffffffffffULL) << 31) | ((in[w + 14] & 0x0001ffffffffffffULL) >> 18);
        out[c + 12]  = ((in[w + 16] & 0x0001ffffffffffffULL) << 16) | ((in[w + 15] & 0x0001ffffffffffffULL) >> 33);
        out[c + 13]  = ((in[w + 17] & 0x0001ffffffffffffULL) <<  1) | ((in[w + 16] & 0x0001ffffffffffffULL) >> 48);
        out[c + 13] |= ((in[w + 18] & 0x0001ffffffffffffULL) << 50);
        out[c + 14]  = ((in[w + 19] & 0x0001ffffffffffffULL) << 35) | ((in[w + 18] & 0x0001ffffffffffffULL) >> 14);
        out[c + 15]  = ((in[w + 20] & 0x0001ffffffffffffULL) << 20) | ((in[w + 19] & 0x0001ffffffffffffULL) >> 29);
        out[c + 16]  = ((in[w + 21] & 0x0001ffffffffffffULL) <<  5) | ((in[w + 20] & 0x0001ffffffffffffULL) >> 44);
        out[c + 16] |= ((in[w + 22] & 0x0001ffffffffffffULL) << 54);
        out[c + 17]  = ((in[w + 23] & 0x0001ffffffffffffULL) << 39) | ((in[w + 22] & 0x0001ffffffffffffULL) >> 10);
        out[c + 18]  = ((in[w + 24] & 0x0001ffffffffffffULL) << 24) | ((in[w + 23] & 0x0001ffffffffffffULL) >> 25);
        out[c + 19]  = ((in[w + 25] & 0x0001ffffffffffffULL) <<  9) | ((in[w + 24] & 0x0001ffffffffffffULL) >> 40);
        out[c + 19] |= ((in[w + 26] & 0x0001ffffffffffffULL) << 58);
        out[c + 20]  = ((in[w + 27] & 0x0001ffffffffffffULL) << 43) | ((in[w + 26] & 0x0001ffffffffffffULL) >> 6);
        out[c + 21]  = ((in[w + 28] & 0x0001ffffffffffffULL) << 28) | ((in[w + 27] & 0x0001ffffffffffffULL) >> 21);
        out[c + 22]  = ((in[w + 29] & 0x0001ffffffffffffULL) << 13) | ((in[w + 28] & 0x0001ffffffffffffULL) >> 36);
        out[c + 22] |= ((in[w + 30] & 0x0001ffffffffffffULL) << 62);
        out[c + 23]  = ((in[w + 31] & 0x0001ffffffffffffULL) << 47) | ((in[w + 30] & 0x0001ffffffffffffULL) >> 2);
        out[c + 24]  = ((in[w + 32] & 0x0001ffffffffffffULL) << 32) | ((in[w + 31] & 0x0001ffffffffffffULL) >> 17);
        out[c + 25]  = ((in[w + 33] & 0x0001ffffffffffffULL) << 17) | ((in[w + 32] & 0x0001ffffffffffffULL) >> 32);
        out[c + 26]  = ((in[w + 34] & 0x0001ffffffffffffULL) <<  2) | ((in[w + 33] & 0x0001ffffffffffffULL) >> 47);
        out[c + 26] |= ((in[w + 35] & 0x0001ffffffffffffULL) << 51);
        out[c + 27]  = ((in[w + 36] & 0x0001ffffffffffffULL) << 36) | ((in[w + 35] & 0x0001ffffffffffffULL) >> 13);
        out[c + 28]  = ((in[w + 37] & 0x0001ffffffffffffULL) << 21) | ((in[w + 36] & 0x0001ffffffffffffULL) >> 28);
        out[c + 29]  = ((in[w + 38] & 0x0001ffffffffffffULL) <<  6) | ((in[w + 37] & 0x0001ffffffffffffULL) >> 43);
        out[c + 29] |= ((in[w + 39] & 0x0001ffffffffffffULL) << 55);
        out[c + 30]  = ((in[w + 40] & 0x0001ffffffffffffULL) << 40) | ((in[w + 39] & 0x0001ffffffffffffULL) >> 9);
        out[c + 31]  = ((in[w + 41] & 0x0001ffffffffffffULL) << 25) | ((in[w + 40] & 0x0001ffffffffffffULL) >> 24);
        out[c + 32]  = ((in[w + 42] & 0x0001ffffffffffffULL) << 10) | ((in[w + 41] & 0x0001ffffffffffffULL) >> 39);
        out[c + 32] |= ((in[w + 43] & 0x0001ffffffffffffULL) << 59);
        out[c + 33]  = ((in[w + 44] & 0x0001ffffffffffffULL) << 44) | ((in[w + 43] & 0x0001ffffffffffffULL) >> 5);
        out[c + 34]  = ((in[w + 45] & 0x0001ffffffffffffULL) << 29) | ((in[w + 44] & 0x0001ffffffffffffULL) >> 20);
        out[c + 35]  = ((in[w + 46] & 0x0001ffffffffffffULL) << 14) | ((in[w + 45] & 0x0001ffffffffffffULL) >> 35);
        out[c + 35] |= ((in[w + 47] & 0x0001ffffffffffffULL) << 63);
        out[c + 36]  = ((in[w + 48] & 0x0001ffffffffffffULL) << 48) | ((in[w + 47] & 0x0001ffffffffffffULL) >> 1);
        out[c + 37]  = ((in[w + 49] & 0x0001ffffffffffffULL) << 33) | ((in[w + 48] & 0x0001ffffffffffffULL) >> 16);
        out[c + 38]  = ((in[w + 50] & 0x0001ffffffffffffULL) << 18) | ((in[w + 49] & 0x0001ffffffffffffULL) >> 31);
        out[c + 39]  = ((in[w + 51] & 0x0001ffffffffffffULL) <<  3) | ((in[w + 50] & 0x0001ffffffffffffULL) >> 46);
        out[c + 39] |= ((in[w + 52] & 0x0001ffffffffffffULL) << 52);
        out[c + 40]  = ((in[w + 53] & 0x0001ffffffffffffULL) << 37) | ((in[w + 52] & 0x0001ffffffffffffULL) >> 12);
        out[c + 41]  = ((in[w + 54] & 0x0001ffffffffffffULL) << 22) | ((in[w + 53] & 0x0001ffffffffffffULL) >> 27);
        out[c + 42]  = ((in[w + 55] & 0x0001ffffffffffffULL) <<  7) | ((in[w + 54] & 0x0001ffffffffffffULL) >> 42);
        out[c + 42] |= ((in[w + 56] & 0x0001ffffffffffffULL) << 56);
        out[c + 43]  = ((in[w + 57] & 0x0001ffffffffffffULL) << 41) | ((in[w + 56] & 0x0001ffffffffffffULL) >> 8);
        out[c + 44]  = ((in[w + 58] & 0x0001ffffffffffffULL) << 26) | ((in[w + 57] & 0x0001ffffffffffffULL) >> 23);
        out[c + 45]  = ((in[w + 59] & 0x0001ffffffffffffULL) << 11) | ((in[w + 58] & 0x0001ffffffffffffULL) >> 38);
        out[c + 45] |= ((in[w + 60] & 0x0001ffffffffffffULL) << 60);
        out[c + 46]  = ((in[w + 61] & 0x0001ffffffffffffULL) << 45) | ((in[w + 60] & 0x0001ffffffffffffULL) >> 4);
        out[c + 47]  = ((in[w + 62] & 0x0001ffffffffffffULL) << 30) | ((in[w + 61] & 0x0001ffffffffffffULL) >> 19);
        out[c + 48]  = ((in[w + 63] & 0x0001ffffffffffffULL) << 15) | ((in[w + 62] & 0x0001ffffffffffffULL) >> 34);
    }
}

void
pack_64_into_50(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 25, w += 32) {
        out[c +  0]  = ((in[w +  0] & 0x0003ffffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x0003ffffffffffffULL) << 50);
        out[c +  1]  = ((in[w +  2] & 0x0003ffffffffffffULL) << 36) | ((in[w +  1] & 0x0003ffffffffffffULL) >> 14);
        out[c +  2]  = ((in[w +  3] & 0x0003ffffffffffffULL) << 22) | ((in[w +  2] & 0x0003ffffffffffffULL) >> 28);
        out[c +  3]  = ((in[w +  4] & 0x0003ffffffffffffULL) <<  8) | ((in[w +  3] & 0x0003ffffffffffffULL) >> 42);
        out[c +  3] |= ((in[w +  5] & 0x0003ffffffffffffULL) << 58);
        out[c +  4]  = ((in[w +  6] & 0x0003ffffffffffffULL) << 44) | ((in[w +  5] & 0x0003ffffffffffffULL) >> 6);
        out[c +  5]  = ((in[w +  7] & 0x0003ffffffffffffULL) << 30) | ((in[w +  6] & 0x0003ffffffffffffULL) >> 20);
        out[c +  6]  = ((in[w +  8] & 0x0003ffffffffffffULL) << 16) | ((in[w +  7] & 0x0003ffffffffffffULL) >> 34);
        out[c +  7]  = ((in[w +  9] & 0x0003ffffffffffffULL) <<  2) | ((in[w +  8] & 0x0003ffffffffffffULL) >> 48);
        out[c +  7] |= ((in[w + 10] & 0x0003ffffffffffffULL) << 52);
        out[c +  8]  = ((in[w + 11] & 0x0003ffffffffffffULL) << 38) | ((in[w + 10] & 0x0003ffffffffffffULL) >> 12);
        out[c +  9]  = ((in[w + 12] & 0x0003ffffffffffffULL) << 24) | ((in[w + 11] & 0x0003ffffffffffffULL) >> 26);
        out[c + 10]  = ((in[w + 13] & 0x0003ffffffffffffULL) << 10) | ((in[w + 12] & 0x0003ffffffffffffULL) >> 40);
        out[c + 10] |= ((in[w + 14] & 0x0003ffffffffffffULL) << 60);
        out[c + 11]  = ((in[w + 15] & 0x0003ffffffffffffULL) << 46) | ((in[w + 14] & 0x0003ffffffffffffULL) >> 4);
        out[c + 12]  = ((in[w + 16] & 0x0003ffffffffffffULL) << 32) | ((in[w + 15] & 0x0003ffffffffffffULL) >> 18);
        out[c + 13]  = ((in[w + 17] & 0x0003ffffffffffffULL) << 18) | ((in[w + 16] & 0x0003ffffffffffffULL) >> 32);
        out[c + 14]  = ((in[w + 18] & 0x0003ffffffffffffULL) <<  4) | ((in[w + 17] & 0x0003ffffffffffffULL) >> 46);
        out[c + 14] |= ((in[w + 19] & 0x0003ffffffffffffULL) << 54);
        out[c + 15]  = ((in[w + 20] & 0x0003ffffffffffffULL) << 40) | ((in[w + 19] & 0x0003ffffffffffffULL) >> 10);
        out[c + 16]  = ((in[w + 21] & 0x0003ffffffffffffULL) << 26) | ((in[w + 20] & 0x0003ffffffffffffULL) >> 24);
        out[c + 17]  = ((in[w + 22] & 0x0003ffffffffffffULL) << 12) | ((in[w + 21] & 0x0003ffffffffffffULL) >> 38);
        out[c + 17] |= ((in[w + 23] & 0x0003ffffffffffffULL) << 62);
        out[c + 18]  = ((in[w + 24] & 0x0003ffffffffffffULL) << 48) | ((in[w + 23] & 0x0003ffffffffffffULL) >> 2);
        out[c + 19]  = ((in[w + 25] & 0x0003ffffffffffffULL) << 34) | ((in[w + 24] & 0x0003ffffffffffffULL) >> 16);
        out[c + 20]  = ((in[w + 26] & 0x0003ffffffffffffULL) << 20) | ((in[w + 25] & 0x0003ffffffffffffULL) >> 30);
        out[c + 21]  = ((in[w + 27] & 0x0003ffffffffffffULL) <<  6) | ((in[w + 26] & 0x0003ffffffffffffULL) >> 44);
        out[c + 21] |= ((in[w + 28] & 0x0003ffffffffffffULL) << 56);
        out[c + 22]  = ((in[w + 29] & 0x0003ffffffffffffULL) << 42) | ((in[w + 28] & 0x0003ffffffffffffULL) >> 8);
        out[c + 23]  = ((in[w + 30] & 0x0003ffffffffffffULL) << 28) | ((in[w + 29] & 0x0003ffffffffffffULL) >> 22);
        out[c + 24]  = ((in[w + 31] & 0x0003ffffffffffffULL) << 14) | ((in[w + 30] & 0x0003ffffffffffffULL) >> 36);
    }
}

void
pack_64_into_51(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 51, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x0007ffffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x0007ffffffffffffULL) << 51);
        out[c +  1]  = ((in[w +  2] & 0x0007ffffffffffffULL) << 38) | ((in[w +  1] & 0x0007ffffffffffffULL) >> 13);
        out[c +  2]  = ((in[w +  3] & 0x0007ffffffffffffULL) << 25) | ((in[w +  2] & 0x0007ffffffffffffULL) >> 26);
        out[c +  3]  = ((in[w +  4] & 0x0007ffffffffffffULL) << 12) | ((in[w +  3] & 0x0007ffffffffffffULL) >> 39);
        out[c +  3] |= ((in[w +  5] & 0x0007ffffffffffffULL) << 63);
        out[c +  4]  = ((in[w +  6] & 0x0007ffffffffffffULL) << 50) | ((in[w +  5] & 0x0007ffffffffffffULL) >> 1);
        out[c +  5]  = ((in[w +  7] & 0x0007ffffffffffffULL) << 37) | ((in[w +  6] & 0x0007ffffffffffffULL) >> 14);
        out[c +  6]  = ((in[w +  8] & 0x0007ffffffffffffULL) << 24) | ((in[w +  7] & 0x0007ffffffffffffULL) >> 27);
        out[c +  7]  = ((in[w +  9] & 0x0007ffffffffffffULL) << 11) | ((in[w +  8] & 0x0007ffffffffffffULL) >> 40);
        out[c +  7] |= ((in[w + 10] & 0x0007ffffffffffffULL) << 62);
        out[c +  8]  = ((in[w + 11] & 0x0007ffffffffffffULL) << 49) | ((in[w + 10] & 0x0007ffffffffffffULL) >> 2);
        out[c +  9]  = ((in[w + 12] & 0x0007ffffffffffffULL) << 36) | ((in[w + 11] & 0x0007ffffffffffffULL) >> 15);
        out[c + 10]  = ((in[w + 13] & 0x0007ffffffffffffULL) << 23) | ((in[w + 12] & 0x0007ffffffffffffULL) >> 28);
        out[c + 11]  = ((in[w + 14] & 0x0007ffffffffffffULL) << 10) | ((in[w + 13] & 0x0007ffffffffffffULL) >> 41);
        out[c + 11] |= ((in[w + 15] & 0x0007ffffffffffffULL) << 61);
        out[c + 12]  = ((in[w + 16] & 0x0007ffffffffffffULL) << 48) | ((in[w + 15] & 0x0007ffffffffffffULL) >> 3);
        out[c + 13]  = ((in[w + 17] & 0x0007ffffffffffffULL) << 35) | ((in[w + 16] & 0x0007ffffffffffffULL) >> 16);
        out[c + 14]  = ((in[w + 18] & 0x0007ffffffffffffULL) << 22) | ((in[w + 17] & 0x0007ffffffffffffULL) >> 29);
        out[c + 15]  = ((in[w + 19] & 0x0007ffffffffffffULL) <<  9) | ((in[w + 18] & 0x0007ffffffffffffULL) >> 42);
        out[c + 15] |= ((in[w + 20] & 0x0007ffffffffffffULL) << 60);
        out[c + 16]  = ((in[w + 21] & 0x0007ffffffffffffULL) << 47) | ((in[w + 20] & 0x0007ffffffffffffULL) >> 4);
        out[c + 17]  = ((in[w + 22] & 0x0007ffffffffffffULL) << 34) | ((in[w + 21] & 0x0007ffffffffffffULL) >> 17);
        out[c + 18]  = ((in[w + 23] & 0x0007ffffffffffffULL) << 21) | ((in[w + 22] & 0x0007ffffffffffffULL) >> 30);
        out[c + 19]  = ((in[w + 24] & 0x0007ffffffffffffULL) <<  8) | ((in[w + 23] & 0x0007ffffffffffffULL) >> 43);
        out[c + 19] |= ((in[w + 25] & 0x0007ffffffffffffULL) << 59);
        out[c + 20]  = ((in[w + 26] & 0x0007ffffffffffffULL) << 46) | ((in[w + 25] & 0x0007ffffffffffffULL) >> 5);
        out[c + 21]  = ((in[w + 27] & 0x0007ffffffffffffULL) << 33) | ((in[w + 26] & 0x0007ffffffffffffULL) >> 18);
        out[c + 22]  = ((in[w + 28] & 0x0007ffffffffffffULL) << 20) | ((in[w + 27] & 0x0007ffffffffffffULL) >> 31);
        out[c + 23]  = ((in[w + 29] & 0x0007ffffffffffffULL) <<  7) | ((in[w + 28] & 0x0007ffffffffffffULL) >> 44);
        out[c + 23] |= ((in[w + 30] & 0x0007ffffffffffffULL) << 58);
        out[c + 24]  = ((in[w + 31] & 0x0007ffffffffffffULL) << 45) | ((in[w + 30] & 0x0007ffffffffffffULL) >> 6);
        out[c + 25]  = ((in[w + 32] & 0x0007ffffffffffffULL) << 32) | ((in[w + 31] & 0x0007ffffffffffffULL) >> 19);
        out[c + 26]  = ((in[w + 33] & 0x0007ffffffffffffULL) << 19) | ((in[w + 32] & 0x0007ffffffffffffULL) >> 32);
        out[c + 27]  = ((in[w + 34] & 0x0007ffffffffffffULL) <<  6) | ((in[w + 33] & 0x0007ffffffffffffULL) >> 45);
        out[c + 27] |= ((in[w + 35] & 0x0007ffffffffffffULL) << 57);
        out[c + 28]  = ((in[w + 36] & 0x0007ffffffffffffULL) << 44) | ((in[w + 35] & 0x0007ffffffffffffULL) >> 7);
        out[c + 29]  = ((in[w + 37] & 0x0007ffffffffffffULL) << 31) | ((in[w + 36] & 0x0007ffffffffffffULL) >> 20);
        out[c + 30]  = ((in[w + 38] & 0x0007ffffffffffffULL) << 18) | ((in[w + 37] & 0x0007ffffffffffffULL) >> 33);
        out[c + 31]  = ((in[w + 39] & 0x0007ffffffffffffULL) <<  5) | ((in[w + 38] & 0x0007ffffffffffffULL) >> 46);
        out[c + 31] |= ((in[w + 40] & 0x0007ffffffffffffULL) << 56);
        out[c + 32]  = ((in[w + 41] & 0x0007ffffffffffffULL) << 43) | ((in[w + 40] & 0x0007ffffffffffffULL) >> 8);
        out[c + 33]  = ((in[w + 42] & 0x0007ffffffffffffULL) << 30) | ((in[w + 41] & 0x0007ffffffffffffULL) >> 21);
        out[c + 34]  = ((in[w + 43] & 0x0007ffffffffffffULL) << 17) | ((in[w + 42] & 0x0007ffffffffffffULL) >> 34);
        out[c + 35]  = ((in[w + 44] & 0x0007ffffffffffffULL) <<  4) | ((in[w + 43] & 0x0007ffffffffffffULL) >> 47);
        out[c + 35] |= ((in[w + 45] & 0x0007ffffffffffffULL) << 55);
        out[c + 36]  = ((in[w + 46] & 0x0007ffffffffffffULL) << 42) | ((in[w + 45] & 0x0007ffffffffffffULL) >> 9);
        out[c + 37]  = ((in[w + 47] & 0x0007ffffffffffffULL) << 29) | ((in[w + 46] & 0x0007ffffffffffffULL) >> 22);
        out[c + 38]  = ((in[w + 48] & 0x0007ffffffffffffULL) << 16) | ((in[w + 47] & 0x0007ffffffffffffULL) >> 35);
        out[c + 39]  = ((in[w + 49] & 0x0007ffffffffffffULL) <<  3) | ((in[w + 48] & 0x0007ffffffffffffULL) >> 48);
        out[c + 39] |= ((in[w + 50] & 0x0007ffffffffffffULL) << 54);
        out[c + 40]  = ((in[w + 51] & 0x0007ffffffffffffULL) << 41) | ((in[w + 50] & 0x0007ffffffffffffULL) >> 10);
        out[c + 41]  = ((in[w + 52] & 0x0007ffffffffffffULL) << 28) | ((in[w + 51] & 0x0007ffffffffffffULL) >> 23);
        out[c + 42]  = ((in[w + 53] & 0x0007ffffffffffffULL) << 15) | ((in[w + 52] & 0x0007ffffffffffffULL) >> 36);
        out[c + 43]  = ((in[w + 54] & 0x0007ffffffffffffULL) <<  2) | ((in[w + 53] & 0x0007ffffffffffffULL) >> 49);
        out[c + 43] |= ((in[w + 55] & 0x0007ffffffffffffULL) << 53);
        out[c + 44]  = ((in[w + 56] & 0x0007ffffffffffffULL) << 40) | ((in[w + 55] & 0x0007ffffffffffffULL) >> 11);
        out[c + 45]  = ((in[w + 57] & 0x0007ffffffffffffULL) << 27) | ((in[w + 56] & 0x0007ffffffffffffULL) >> 24);
        out[c + 46]  = ((in[w + 58] & 0x0007ffffffffffffULL) << 14) | ((in[w + 57] & 0x0007ffffffffffffULL) >> 37);
        out[c + 47]  = ((in[w + 59] & 0x0007ffffffffffffULL) <<  1) | ((in[w + 58] & 0x0007ffffffffffffULL) >> 50);
        out[c + 47] |= ((in[w + 60] & 0x0007ffffffffffffULL) << 52);
        out[c + 48]  = ((in[w + 61] & 0x0007ffffffffffffULL) << 39) | ((in[w + 60] & 0x0007ffffffffffffULL) >> 12);
        out[c + 49]  = ((in[w + 62] & 0x0007ffffffffffffULL) << 26) | ((in[w + 61] & 0x0007ffffffffffffULL) >> 25);
        out[c + 50]  = ((in[w + 63] & 0x0007ffffffffffffULL) << 13) | ((in[w + 62] & 0x0007ffffffffffffULL) >> 38);
    }
}

void
pack_64_into_52(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 13, w += 16) {
        out[c +  0]  = ((in[w +  0] & 0x000fffffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x000fffffffffffffULL) << 52);
        out[c +  1]  = ((in[w +  2] & 0x000fffffffffffffULL) << 40) | ((in[w +  1] & 0x000fffffffffffffULL) >> 12);
        out[c +  2]  = ((in[w +  3] & 0x000fffffffffffffULL) << 28) | ((in[w +  2] & 0x000fffffffffffffULL) >> 24);
        out[c +  3]  = ((in[w +  4] & 0x000fffffffffffffULL) << 16) | ((in[w +  3] & 0x000fffffffffffffULL) >> 36);
        out[c +  4]  = ((in[w +  5] & 0x000fffffffffffffULL) <<  4) | ((in[w +  4] & 0x000fffffffffffffULL) >> 48);
        out[c +  4] |= ((in[w +  6] & 0x000fffffffffffffULL) << 56);
        out[c +  5]  = ((in[w +  7] & 0x000fffffffffffffULL) << 44) | ((in[w +  6] & 0x000fffffffffffffULL) >> 8);
        out[c +  6]  = ((in[w +  8] & 0x000fffffffffffffULL) << 32) | ((in[w +  7] & 0x000fffffffffffffULL) >> 20);
        out[c +  7]  = ((in[w +  9] & 0x000fffffffffffffULL) << 20) | ((in[w +  8] & 0x000fffffffffffffULL) >> 32);
        out[c +  8]  = ((in[w + 10] & 0x000fffffffffffffULL) <<  8) | ((in[w +  9] & 0x000fffffffffffffULL) >> 44);
        out[c +  8] |= ((in[w + 11] & 0x000fffffffffffffULL) << 60);
        out[c +  9]  = ((in[w + 12] & 0x000fffffffffffffULL) << 48) | ((in[w + 11] & 0x000fffffffffffffULL) >> 4);
        out[c + 10]  = ((in[w + 13] & 0x000fffffffffffffULL) << 36) | ((in[w + 12] & 0x000fffffffffffffULL) >> 16);
        out[c + 11]  = ((in[w + 14] & 0x000fffffffffffffULL) << 24) | ((in[w + 13] & 0x000fffffffffffffULL) >> 28);
        out[c + 12]  = ((in[w + 15] & 0x000fffffffffffffULL) << 12) | ((in[w + 14] & 0x000fffffffffffffULL) >> 40);
    }
}

void
pack_64_into_53(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 53, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x001fffffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x001fffffffffffffULL) << 53);
        out[c +  1]  = ((in[w +  2] & 0x001fffffffffffffULL) << 42) | ((in[w +  1] & 0x001fffffffffffffULL) >> 11);
        out[c +  2]  = ((in[w +  3] & 0x001fffffffffffffULL) << 31) | ((in[w +  2] & 0x001fffffffffffffULL) >> 22);
        out[c +  3]  = ((in[w +  4] & 0x001fffffffffffffULL) << 20) | ((in[w +  3] & 0x001fffffffffffffULL) >> 33);
        out[c +  4]  = ((in[w +  5] & 0x001fffffffffffffULL) <<  9) | ((in[w +  4] & 0x001fffffffffffffULL) >> 44);
        out[c +  4] |= ((in[w +  6] & 0x001fffffffffffffULL) << 62);
        out[c +  5]  = ((in[w +  7] & 0x001fffffffffffffULL) << 51) | ((in[w +  6] & 0x001fffffffffffffULL) >> 2);
        out[c +  6]  = ((in[w +  8] & 0x001fffffffffffffULL) << 40) | ((in[w +  7] & 0x001fffffffffffffULL) >> 13);
        out[c +  7]  = ((in[w +  9] & 0x001fffffffffffffULL) << 29) | ((in[w +  8] & 0x001fffffffffffffULL) >> 24);
        out[c +  8]  = ((in[w + 10] & 0x001fffffffffffffULL) << 18) | ((in[w +  9] & 0x001fffffffffffffULL) >> 35);
        out[c +  9]  = ((in[w + 11] & 0x001fffffffffffffULL) <<  7) | ((in[w + 10] & 0x001fffffffffffffULL) >> 46);
        out[c +  9] |= ((in[w + 12] & 0x001fffffffffffffULL) << 60);
        out[c + 10]  = ((in[w + 13] & 0x001fffffffffffffULL) << 49) | ((in[w + 12] & 0x001fffffffffffffULL) >> 4);
        out[c + 11]  = ((in[w + 14] & 0x001fffffffffffffULL) << 38) | ((in[w + 13] & 0x001fffffffffffffULL) >> 15);
        out[c + 12]  = ((in[w + 15] & 0x001fffffffffffffULL) << 27) | ((in[w + 14] & 0x001fffffffffffffULL) >> 26);
        out[c + 13]  = ((in[w + 16] & 0x001fffffffffffffULL) << 16) | ((in[w + 15] & 0x001fffffffffffffULL) >> 37);
        out[c + 14]  = ((in[w + 17] & 0x001fffffffffffffULL) <<  5) | ((in[w + 16] & 0x001fffffffffffffULL) >> 48);
        out[c + 14] |= ((in[w + 18] & 0x001fffffffffffffULL) << 58);
        out[c + 15]  = ((in[w + 19] & 0x001fffffffffffffULL) << 47) | ((in[w + 18] & 0x001fffffffffffffULL) >> 6);
        out[c + 16]  = ((in[w + 20] & 0x001fffffffffffffULL) << 36) | ((in[w + 19] & 0x001fffffffffffffULL) >> 17);
        out[c + 17]  = ((in[w + 21] & 0x001fffffffffffffULL) << 25) | ((in[w + 20] & 0x001fffffffffffffULL) >> 28);
        out[c + 18]  = ((in[w + 22] & 0x001fffffffffffffULL) << 14) | ((in[w + 21] & 0x001fffffffffffffULL) >> 39);
        out[c + 19]  = ((in[w + 23] & 0x001fffffffffffffULL) <<  3) | ((in[w + 22] & 0x001fffffffffffffULL) >> 50);
        out[c + 19] |= ((in[w + 24] & 0x001fffffffffffffULL) << 56);
        out[c + 20]  = ((in[w + 25] & 0x001fffffffffffffULL) << 45) | ((in[w + 24] & 0x001fffffffffffffULL) >> 8);
        out[c + 21]  = ((in[w + 26] & 0x001fffffffffffffULL) << 34) | ((in[w + 25] & 0x001fffffffffffffULL) >> 19);
        out[c + 22]  = ((in[w + 27] & 0x001fffffffffffffULL) << 23) | ((in[w + 26] & 0x001fffffffffffffULL) >> 30);
        out[c + 23]  = ((in[w + 28] & 0x001fffffffffffffULL) << 12) | ((in[w + 27] & 0x001fffffffffffffULL) >> 41);
        out[c + 24]  = ((in[w + 29] & 0x001fffffffffffffULL) <<  1) | ((in[w + 28] & 0x001fffffffffffffULL) >> 52);
        out[c + 24] |= ((in[w + 30] & 0x001fffffffffffffULL) << 54);
        out[c + 25]  = ((in[w + 31] & 0x001fffffffffffffULL) << 43) | ((in[w + 30] & 0x001fffffffffffffULL) >> 10);
        out[c + 26]  = ((in[w + 32] & 0x001fffffffffffffULL) << 32) | ((in[w + 31] & 0x001fffffffffffffULL) >> 21);
        out[c + 27]  = ((in[w + 33] & 0x001fffffffffffffULL) << 21) | ((in[w + 32] & 0x001fffffffffffffULL) >> 32);
        out[c + 28]  = ((in[w + 34] & 0x001fffffffffffffULL) << 10) | ((in[w + 33] & 0x001fffffffffffffULL) >> 43);
        out[c + 28] |= ((in[w + 35] & 0x001fffffffffffffULL) << 63);
        out[c + 29]  = ((in[w + 36] & 0x001fffffffffffffULL) << 52) | ((in[w + 35] & 0x001fffffffffffffULL) >> 1);
        out[c + 30]  = ((in[w + 37] & 0x001fffffffffffffULL) << 41) | ((in[w + 36] & 0x001fffffffffffffULL) >> 12);
        out[c + 31]  = ((in[w + 38] & 0x001fffffffffffffULL) << 30) | ((in[w + 37] & 0x001fffffffffffffULL) >> 23);
        out[c + 32]  = ((in[w + 39] & 0x001fffffffffffffULL) << 19) | ((in[w + 38] & 0x001fffffffffffffULL) >> 34);
        out[c + 33]  = ((in[w + 40] & 0x001fffffffffffffULL) <<  8) | ((in[w + 39] & 0x001fffffffffffffULL) >> 45);
        out[c + 33] |= ((in[w + 41] & 0x001fffffffffffffULL) << 61);
        out[c + 34]  = ((in[w + 42] & 0x001fffffffffffffULL) << 50) | ((in[w + 41] & 0x001fffffffffffffULL) >> 3);
        out[c + 35]  = ((in[w + 43] & 0x001fffffffffffffULL) << 39) | ((in[w + 42] & 0x001fffffffffffffULL) >> 14);
        out[c + 36]  = ((in[w + 44] & 0x001fffffffffffffULL) << 28) | ((in[w + 43] & 0x001fffffffffffffULL) >> 25);
        out[c + 37]  = ((in[w + 45] & 0x001fffffffffffffULL) << 17) | ((in[w + 44] & 0x001fffffffffffffULL) >> 36);
        out[c + 38]  = ((in[w + 46] & 0x001fffffffffffffULL) <<  6) | ((in[w + 45] & 0x001fffffffffffffULL) >> 47);
        out[c + 38] |= ((in[w + 47] & 0x001fffffffffffffULL) << 59);
        out[c + 39]  = ((in[w + 48] & 0x001fffffffffffffULL) << 48) | ((in[w + 47] & 0x001fffffffffffffULL) >> 5);
        out[c + 40]  = ((in[w + 49] & 0x001fffffffffffffULL) << 37) | ((in[w + 48] & 0x001fffffffffffffULL) >> 16);
        out[c + 41]  = ((in[w + 50] & 0x001fffffffffffffULL) << 26) | ((in[w + 49] & 0x001fffffffffffffULL) >> 27);
        out[c + 42]  = ((in[w + 51] & 0x001fffffffffffffULL) << 15) | ((in[w + 50] & 0x001fffffffffffffULL) >> 38);
        out[c + 43]  = ((in[w + 52] & 0x001fffffffffffffULL) <<  4) | ((in[w + 51] & 0x001fffffffffffffULL) >> 49);
        out[c + 43] |= ((in[w + 53] & 0x001fffffffffffffULL) << 57);
        out[c + 44]  = ((in[w + 54] & 0x001fffffffffffffULL) << 46) | ((in[w + 53] & 0x001fffffffffffffULL) >> 7);
        out[c + 45]  = ((in[w + 55] & 0x001fffffffffffffULL) << 35) | ((in[w + 54] & 0x001fffffffffffffULL) >> 18);
        out[c + 46]  = ((in[w + 56] & 0x001fffffffffffffULL) << 24) | ((in[w + 55] & 0x001fffffffffffffULL) >> 29);
        out[c + 47]  = ((in[w + 57] & 0x001fffffffffffffULL) << 13) | ((in[w + 56] & 0x001fffffffffffffULL) >> 40);
        out[c + 48]  = ((in[w + 58] & 0x001fffffffffffffULL) <<  2) | ((in[w + 57] & 0x001fffffffffffffULL) >> 51);
        out[c + 48] |= ((in[w + 59] & 0x001fffffffffffffULL) << 55);
        out[c + 49]  = ((in[w + 60] & 0x001fffffffffffffULL) << 44) | ((in[w + 59] & 0x001fffffffffffffULL) >> 9);
        out[c + 50]  = ((in[w + 61] & 0x001fffffffffffffULL) << 33) | ((in[w + 60] & 0x001fffffffffffffULL) >> 20);
        out[c + 51]  = ((in[w + 62] & 0x001fffffffffffffULL) << 22) | ((in[w + 61] & 0x001fffffffffffffULL) >> 31);
        out[c + 52]  = ((in[w + 63] & 0x001fffffffffffffULL) << 11) | ((in[w + 62] & 0x001fffffffffffffULL) >> 42);
    }
}

void
pack_64_into_54(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 27, w += 32) {
        out[c +  0]  = ((in[w +  0] & 0x003fffffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x003fffffffffffffULL) << 54);
        out[c +  1]  = ((in[w +  2] & 0x003fffffffffffffULL) << 44) | ((in[w +  1] & 0x003fffffffffffffULL) >> 10);
        out[c +  2]  = ((in[w +  3] & 0x003fffffffffffffULL) << 34) | ((in[w +  2] & 0x003fffffffffffffULL) >> 20);
        out[c +  3]  = ((in[w +  4] & 0x003fffffffffffffULL) << 24) | ((in[w +  3] & 0x003fffffffffffffULL) >> 30);
        out[c +  4]  = ((in[w +  5] & 0x003fffffffffffffULL) << 14) | ((in[w +  4] & 0x003fffffffffffffULL) >> 40);
        out[c +  5]  = ((in[w +  6] & 0x003fffffffffffffULL) <<  4) | ((in[w +  5] & 0x003fffffffffffffULL) >> 50);
        out[c +  5] |= ((in[w +  7] & 0x003fffffffffffffULL) << 58);
        out[c +  6]  = ((in[w +  8] & 0x003fffffffffffffULL) << 48) | ((in[w +  7] & 0x003fffffffffffffULL) >> 6);
        out[c +  7]  = ((in[w +  9] & 0x003fffffffffffffULL) << 38) | ((in[w +  8] & 0x003fffffffffffffULL) >> 16);
        out[c +  8]  = ((in[w + 10] & 0x003fffffffffffffULL) << 28) | ((in[w +  9] & 0x003fffffffffffffULL) >> 26);
        out[c +  9]  = ((in[w + 11] & 0x003fffffffffffffULL) << 18) | ((in[w + 10] & 0x003fffffffffffffULL) >> 36);
        out[c + 10]  = ((in[w + 12] & 0x003fffffffffffffULL) <<  8) | ((in[w + 11] & 0x003fffffffffffffULL) >> 46);
        out[c + 10] |= ((in[w + 13] & 0x003fffffffffffffULL) << 62);
        out[c + 11]  = ((in[w + 14] & 0x003fffffffffffffULL) << 52) | ((in[w + 13] & 0x003fffffffffffffULL) >> 2);
        out[c + 12]  = ((in[w + 15] & 0x003fffffffffffffULL) << 42) | ((in[w + 14] & 0x003fffffffffffffULL) >> 12);
        out[c + 13]  = ((in[w + 16] & 0x003fffffffffffffULL) << 32) | ((in[w + 15] & 0x003fffffffffffffULL) >> 22);
        out[c + 14]  = ((in[w + 17] & 0x003fffffffffffffULL) << 22) | ((in[w + 16] & 0x003fffffffffffffULL) >> 32);
        out[c + 15]  = ((in[w + 18] & 0x003fffffffffffffULL) << 12) | ((in[w + 17] & 0x003fffffffffffffULL) >> 42);
        out[c + 16]  = ((in[w + 19] & 0x003fffffffffffffULL) <<  2) | ((in[w + 18] & 0x003fffffffffffffULL) >> 52);
        out[c + 16] |= ((in[w + 20] & 0x003fffffffffffffULL) << 56);
        out[c + 17]  = ((in[w + 21] & 0x003fffffffffffffULL) << 46) | ((in[w + 20] & 0x003fffffffffffffULL) >> 8);
        out[c + 18]  = ((in[w + 22] & 0x003fffffffffffffULL) << 36) | ((in[w + 21] & 0x003fffffffffffffULL) >> 18);
        out[c + 19]  = ((in[w + 23] & 0x003fffffffffffffULL) << 26) | ((in[w + 22] & 0x003fffffffffffffULL) >> 28);
        out[c + 20]  = ((in[w + 24] & 0x003fffffffffffffULL) << 16) | ((in[w + 23] & 0x003fffffffffffffULL) >> 38);
        out[c + 21]  = ((in[w + 25] & 0x003fffffffffffffULL) <<  6) | ((in[w + 24] & 0x003fffffffffffffULL) >> 48);
        out[c + 21] |= ((in[w + 26] & 0x003fffffffffffffULL) << 60);
        out[c + 22]  = ((in[w + 27] & 0x003fffffffffffffULL) << 50) | ((in[w + 26] & 0x003fffffffffffffULL) >> 4);
        out[c + 23]  = ((in[w + 28] & 0x003fffffffffffffULL) << 40) | ((in[w + 27] & 0x003fffffffffffffULL) >> 14);
        out[c + 24]  = ((in[w + 29] & 0x003fffffffffffffULL) << 30) | ((in[w + 28] & 0x003fffffffffffffULL) >> 24);
        out[c + 25]  = ((in[w + 30] & 0x003fffffffffffffULL) << 20) | ((in[w + 29] & 0x003fffffffffffffULL) >> 34);
        out[c + 26]  = ((in[w + 31] & 0x003fffffffffffffULL) << 10) | ((in[w + 30] & 0x003fffffffffffffULL) >> 44);
    }
}

void
pack_64_into_55(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 55, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x007fffffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x007fffffffffffffULL) << 55);
        out[c +  1]  = ((in[w +  2] & 0x007fffffffffffffULL) << 46) | ((in[w +  1] & 0x007fffffffffffffULL) >> 9);
        out[c +  2]  = ((in[w +  3] & 0x007fffffffffffffULL) << 37) | ((in[w +  2] & 0x007fffffffffffffULL) >> 18);
        out[c +  3]  = ((in[w +  4] & 0x007fffffffffffffULL) << 28) | ((in[w +  3] & 0x007fffffffffffffULL) >> 27);
        out[c +  4]  = ((in[w +  5] & 0x007fffffffffffffULL) << 19) | ((in[w +  4] & 0x007fffffffffffffULL) >> 36);
        out[c +  5]  = ((in[w +  6] & 0x007fffffffffffffULL) << 10) | ((in[w +  5] & 0x007fffffffffffffULL) >> 45);
        out[c +  6]  = ((in[w +  7] & 0x007fffffffffffffULL) <<  1) | ((in[w +  6] & 0x007fffffffffffffULL) >> 54);
        out[c +  6] |= ((in[w +  8] & 0x007fffffffffffffULL) << 56);
        out[c +  7]  = ((in[w +  9] & 0x007fffffffffffffULL) << 47) | ((in[w +  8] & 0x007fffffffffffffULL) >> 8);
        out[c +  8]  = ((in[w + 10] & 0x007fffffffffffffULL) << 38) | ((in[w +  9] & 0x007fffffffffffffULL) >> 17);
        out[c +  9]  = ((in[w + 11] & 0x007fffffffffffffULL) << 29) | ((in[w + 10] & 0x007fffffffffffffULL) >> 26);
        out[c + 10]  = ((in[w + 12] & 0x007fffffffffffffULL) << 20) | ((in[w + 11] & 0x007fffffffffffffULL) >> 35);
        out[c + 11]  = ((in[w + 13] & 0x007fffffffffffffULL) << 11) | ((in[w + 12] & 0x007fffffffffffffULL) >> 44);
        out[c + 12]  = ((in[w + 14] & 0x007fffffffffffffULL) <<  2) | ((in[w + 13] & 0x007fffffffffffffULL) >> 53);
        out[c + 12] |= ((in[w + 15] & 0x007fffffffffffffULL) << 57);
        out[c + 13]  = ((in[w + 16] & 0x007fffffffffffffULL) << 48) | ((in[w + 15] & 0x007fffffffffffffULL) >> 7);
        out[c + 14]  = ((in[w + 17] & 0x007fffffffffffffULL) << 39) | ((in[w + 16] & 0x007fffffffffffffULL) >> 16);
        out[c + 15]  = ((in[w + 18] & 0x007fffffffffffffULL) << 30) | ((in[w + 17] & 0x007fffffffffffffULL) >> 25);
        out[c + 16]  = ((in[w + 19] & 0x007fffffffffffffULL) << 21) | ((in[w + 18] & 0x007fffffffffffffULL) >> 34);
        out[c + 17]  = ((in[w + 20] & 0x007fffffffffffffULL) << 12) | ((in[w + 19] & 0x007fffffffffffffULL) >> 43);
        out[c + 18]  = ((in[w + 21] & 0x007fffffffffffffULL) <<  3) | ((in[w + 20] & 0x007fffffffffffffULL) >> 52);
        out[c + 18] |= ((in[w + 22] & 0x007fffffffffffffULL) << 58);
        out[c + 19]  = ((in[w + 23] & 0x007fffffffffffffULL) << 49) | ((in[w + 22] & 0x007fffffffffffffULL) >> 6);
        out[c + 20]  = ((in[w + 24] & 0x007fffffffffffffULL) << 40) | ((in[w + 23] & 0x007fffffffffffffULL) >> 15);
        out[c + 21]  = ((in[w + 25] & 0x007fffffffffffffULL) << 31) | ((in[w + 24] & 0x007fffffffffffffULL) >> 24);
        out[c + 22]  = ((in[w + 26] & 0x007fffffffffffffULL) << 22) | ((in[w + 25] & 0x007fffffffffffffULL) >> 33);
        out[c + 23]  = ((in[w + 27] & 0x007fffffffffffffULL) << 13) | ((in[w + 26] & 0x007fffffffffffffULL) >> 42);
        out[c + 24]  = ((in[w + 28] & 0x007fffffffffffffULL) <<  4) | ((in[w + 27] & 0x007fffffffffffffULL) >> 51);
        out[c + 24] |= ((in[w + 29] & 0x007fffffffffffffULL) << 59);
        out[c + 25]  = ((in[w + 30] & 0x007fffffffffffffULL) << 50) | ((in[w + 29] & 0x007fffffffffffffULL) >> 5);
        out[c + 26]  = ((in[w + 31] & 0x007fffffffffffffULL) << 41) | ((in[w + 30] & 0x007fffffffffffffULL) >> 14);
        out[c + 27]  = ((in[w + 32] & 0x007fffffffffffffULL) << 32) | ((in[w + 31] & 0x007fffffffffffffULL) >> 23);
        out[c + 28]  = ((in[w + 33] & 0x007fffffffffffffULL) << 23) | ((in[w + 32] & 0x007fffffffffffffULL) >> 32);
        out[c + 29]  = ((in[w + 34] & 0x007fffffffffffffULL) << 14) | ((in[w + 33] & 0x007fffffffffffffULL) >> 41);
        out[c + 30]  = ((in[w + 35] & 0x007fffffffffffffULL) <<  5) | ((in[w + 34] & 0x007fffffffffffffULL) >> 50);
        out[c + 30] |= ((in[w + 36] & 0x007fffffffffffffULL) << 60);
        out[c + 31]  = ((in[w + 37] & 0x007fffffffffffffULL) << 51) | ((in[w + 36] & 0x007fffffffffffffULL) >> 4);
        out[c + 32]  = ((in[w + 38] & 0x007fffffffffffffULL) << 42) | ((in[w + 37] & 0x007fffffffffffffULL) >> 13);
        out[c + 33]  = ((in[w + 39] & 0x007fffffffffffffULL) << 33) | ((in[w + 38] & 0x007fffffffffffffULL) >> 22);
        out[c + 34]  = ((in[w + 40] & 0x007fffffffffffffULL) << 24) | ((in[w + 39] & 0x007fffffffffffffULL) >> 31);
        out[c + 35]  = ((in[w + 41] & 0x007fffffffffffffULL) << 15) | ((in[w + 40] & 0x007fffffffffffffULL) >> 40);
        out[c + 36]  = ((in[w + 42] & 0x007fffffffffffffULL) <<  6) | ((in[w + 41] & 0x007fffffffffffffULL) >> 49);
        out[c + 36] |= ((in[w + 43] & 0x007fffffffffffffULL) << 61);
        out[c + 37]  = ((in[w + 44] & 0x007fffffffffffffULL) << 52) | ((in[w + 43] & 0x007fffffffffffffULL) >> 3);
        out[c + 38]  = ((in[w + 45] & 0x007fffffffffffffULL) << 43) | ((in[w + 44] & 0x007fffffffffffffULL) >> 12);
        out[c + 39]  = ((in[w + 46] & 0x007fffffffffffffULL) << 34) | ((in[w + 45] & 0x007fffffffffffffULL) >> 21);
        out[c + 40]  = ((in[w + 47] & 0x007fffffffffffffULL) << 25) | ((in[w + 46] & 0x007fffffffffffffULL) >> 30);
        out[c + 41]  = ((in[w + 48] & 0x007fffffffffffffULL) << 16) | ((in[w + 47] & 0x007fffffffffffffULL) >> 39);
        out[c + 42]  = ((in[w + 49] & 0x007fffffffffffffULL) <<  7) | ((in[w + 48] & 0x007fffffffffffffULL) >> 48);
        out[c + 42] |= ((in[w + 50] & 0x007fffffffffffffULL) << 62);
        out[c + 43]  = ((in[w + 51] & 0x007fffffffffffffULL) << 53) | ((in[w + 50] & 0x007fffffffffffffULL) >> 2);
        out[c + 44]  = ((in[w + 52] & 0x007fffffffffffffULL) << 44) | ((in[w + 51] & 0x007fffffffffffffULL) >> 11);
        out[c + 45]  = ((in[w + 53] & 0x007fffffffffffffULL) << 35) | ((in[w + 52] & 0x007fffffffffffffULL) >> 20);
        out[c + 46]  = ((in[w + 54] & 0x007fffffffffffffULL) << 26) | ((in[w + 53] & 0x007fffffffffffffULL) >> 29);
        out[c + 47]  = ((in[w + 55] & 0x007fffffffffffffULL) << 17) | ((in[w + 54] & 0x007fffffffffffffULL) >> 38);
        out[c + 48]  = ((in[w + 56] & 0x007fffffffffffffULL) <<  8) | ((in[w + 55] & 0x007fffffffffffffULL) >> 47);
        out[c + 48] |= ((in[w + 57] & 0x007fffffffffffffULL) << 63);
        out[c + 49]  = ((in[w + 58] & 0x007fffffffffffffULL) << 54) | ((in[w + 57] & 0x007fffffffffffffULL) >> 1);
        out[c + 50]  = ((in[w + 59] & 0x007fffffffffffffULL) << 45) | ((in[w + 58] & 0x007fffffffffffffULL) >> 10);
        out[c + 51]  = ((in[w + 60] & 0x007fffffffffffffULL) << 36) | ((in[w + 59] & 0x007fffffffffffffULL) >> 19);
        out[c + 52]  = ((in[w + 61] & 0x007fffffffffffffULL) << 27) | ((in[w + 60] & 0x007fffffffffffffULL) >> 28);
        out[c + 53]  = ((in[w + 62] & 0x007fffffffffffffULL) << 18) | ((in[w + 61] & 0x007fffffffffffffULL) >> 37);
        out[c + 54]  = ((in[w + 63] & 0x007fffffffffffffULL) <<  9) | ((in[w + 62] & 0x007fffffffffffffULL) >> 46);
    }
}

void
pack_64_into_56(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 7, w += 8) {
        out[c + 0]  = ((in[w + 0] & 0x00ffffffffffffffULL) <<  0);
        out[c + 0] |= ((in[w + 1] & 0x00ffffffffffffffULL) << 56);
        out[c + 1]  = ((in[w + 2] & 0x00ffffffffffffffULL) << 48) | ((in[w + 1] & 0x00ffffffffffffffULL) >> 8);
        out[c + 2]  = ((in[w + 3] & 0x00ffffffffffffffULL) << 40) | ((in[w + 2] & 0x00ffffffffffffffULL) >> 16);
        out[c + 3]  = ((in[w + 4] & 0x00ffffffffffffffULL) << 32) | ((in[w + 3] & 0x00ffffffffffffffULL) >> 24);
        out[c + 4]  = ((in[w + 5] & 0x00ffffffffffffffULL) << 24) | ((in[w + 4] & 0x00ffffffffffffffULL) >> 32);
        out[c + 5]  = ((in[w + 6] & 0x00ffffffffffffffULL) << 16) | ((in[w + 5] & 0x00ffffffffffffffULL) >> 40);
        out[c + 6]  = ((in[w + 7] & 0x00ffffffffffffffULL) <<  8) | ((in[w + 6] & 0x00ffffffffffffffULL) >> 48);
    }
}

void
pack_64_into_57(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 57, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x01ffffffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x01ffffffffffffffULL) << 57);
        out[c +  1]  = ((in[w +  2] & 0x01ffffffffffffffULL) << 50) | ((in[w +  1] & 0x01ffffffffffffffULL) >> 7);
        out[c +  2]  = ((in[w +  3] & 0x01ffffffffffffffULL) << 43) | ((in[w +  2] & 0x01ffffffffffffffULL) >> 14);
        out[c +  3]  = ((in[w +  4] & 0x01ffffffffffffffULL) << 36) | ((in[w +  3] & 0x01ffffffffffffffULL) >> 21);
        out[c +  4]  = ((in[w +  5] & 0x01ffffffffffffffULL) << 29) | ((in[w +  4] & 0x01ffffffffffffffULL) >> 28);
        out[c +  5]  = ((in[w +  6] & 0x01ffffffffffffffULL) << 22) | ((in[w +  5] & 0x01ffffffffffffffULL) >> 35);
        out[c +  6]  = ((in[w +  7] & 0x01ffffffffffffffULL) << 15) | ((in[w +  6] & 0x01ffffffffffffffULL) >> 42);
        out[c +  7]  = ((in[w +  8] & 0x01ffffffffffffffULL) <<  8) | ((in[w +  7] & 0x01ffffffffffffffULL) >> 49);
        out[c +  8]  = ((in[w +  9] & 0x01ffffffffffffffULL) <<  1) | ((in[w +  8] & 0x01ffffffffffffffULL) >> 56);
        out[c +  8] |= ((in[w + 10] & 0x01ffffffffffffffULL) << 58);
        out[c +  9]  = ((in[w + 11] & 0x01ffffffffffffffULL) << 51) | ((in[w + 10] & 0x01ffffffffffffffULL) >> 6);
        out[c + 10]  = ((in[w + 12] & 0x01ffffffffffffffULL) << 44) | ((in[w + 11] & 0x01ffffffffffffffULL) >> 13);
        out[c + 11]  = ((in[w + 13] & 0x01ffffffffffffffULL) << 37) | ((in[w + 12] & 0x01ffffffffffffffULL) >> 20);
        out[c + 12]  = ((in[w + 14] & 0x01ffffffffffffffULL) << 30) | ((in[w + 13] & 0x01ffffffffffffffULL) >> 27);
        out[c + 13]  = ((in[w + 15] & 0x01ffffffffffffffULL) << 23) | ((in[w + 14] & 0x01ffffffffffffffULL) >> 34);
        out[c + 14]  = ((in[w + 16] & 0x01ffffffffffffffULL) << 16) | ((in[w + 15] & 0x01ffffffffffffffULL) >> 41);
        out[c + 15]  = ((in[w + 17] & 0x01ffffffffffffffULL) <<  9) | ((in[w + 16] & 0x01ffffffffffffffULL) >> 48);
        out[c + 16]  = ((in[w + 18] & 0x01ffffffffffffffULL) <<  2) | ((in[w + 17] & 0x01ffffffffffffffULL) >> 55);
        out[c + 16] |= ((in[w + 19] & 0x01ffffffffffffffULL) << 59);
        out[c + 17]  = ((in[w + 20] & 0x01ffffffffffffffULL) << 52) | ((in[w + 19] & 0x01ffffffffffffffULL) >> 5);
        out[c + 18]  = ((in[w + 21] & 0x01ffffffffffffffULL) << 45) | ((in[w + 20] & 0x01ffffffffffffffULL) >> 12);
        out[c + 19]  = ((in[w + 22] & 0x01ffffffffffffffULL) << 38) | ((in[w + 21] & 0x01ffffffffffffffULL) >> 19);
        out[c + 20]  = ((in[w + 23] & 0x01ffffffffffffffULL) << 31) | ((in[w + 22] & 0x01ffffffffffffffULL) >> 26);
        out[c + 21]  = ((in[w + 24] & 0x01ffffffffffffffULL) << 24) | ((in[w + 23] & 0x01ffffffffffffffULL) >> 33);
        out[c + 22]  = ((in[w + 25] & 0x01ffffffffffffffULL) << 17) | ((in[w + 24] & 0x01ffffffffffffffULL) >> 40);
        out[c + 23]  = ((in[w + 26] & 0x01ffffffffffffffULL) << 10) | ((in[w + 25] & 0x01ffffffffffffffULL) >> 47);
        out[c + 24]  = ((in[w + 27] & 0x01ffffffffffffffULL) <<  3) | ((in[w + 26] & 0x01ffffffffffffffULL) >> 54);
        out[c + 24] |= ((in[w + 28] & 0x01ffffffffffffffULL) << 60);
        out[c + 25]  = ((in[w + 29] & 0x01ffffffffffffffULL) << 53) | ((in[w + 28] & 0x01ffffffffffffffULL) >> 4);
        out[c + 26]  = ((in[w + 30] & 0x01ffffffffffffffULL) << 46) | ((in[w + 29] & 0x01ffffffffffffffULL) >> 11);
        out[c + 27]  = ((in[w + 31] & 0x01ffffffffffffffULL) << 39) | ((in[w + 30] & 0x01ffffffffffffffULL) >> 18);
        out[c + 28]  = ((in[w + 32] & 0x01ffffffffffffffULL) << 32) | ((in[w + 31] & 0x01ffffffffffffffULL) >> 25);
        out[c + 29]  = ((in[w + 33] & 0x01ffffffffffffffULL) << 25) | ((in[w + 32] & 0x01ffffffffffffffULL) >> 32);
        out[c + 30]  = ((in[w + 34] & 0x01ffffffffffffffULL) << 18) | ((in[w + 33] & 0x01ffffffffffffffULL) >> 39);
        out[c + 31]  = ((in[w + 35] & 0x01ffffffffffffffULL) << 11) | ((in[w + 34] & 0x01ffffffffffffffULL) >> 46);
        out[c + 32]  = ((in[w + 36] & 0x01ffffffffffffffULL) <<  4) | ((in[w + 35] & 0x01ffffffffffffffULL) >> 53);
        out[c + 32] |= ((in[w + 37] & 0x01ffffffffffffffULL) << 61);
        out[c + 33]  = ((in[w + 38] & 0x01ffffffffffffffULL) << 54) | ((in[w + 37] & 0x01ffffffffffffffULL) >> 3);
        out[c + 34]  = ((in[w + 39] & 0x01ffffffffffffffULL) << 47) | ((in[w + 38] & 0x01ffffffffffffffULL) >> 10);
        out[c + 35]  = ((in[w + 40] & 0x01ffffffffffffffULL) << 40) | ((in[w + 39] & 0x01ffffffffffffffULL) >> 17);
        out[c + 36]  = ((in[w + 41] & 0x01ffffffffffffffULL) << 33) | ((in[w + 40] & 0x01ffffffffffffffULL) >> 24);
        out[c + 37]  = ((in[w + 42] & 0x01ffffffffffffffULL) << 26) | ((in[w + 41] & 0x01ffffffffffffffULL) >> 31);
        out[c + 38]  = ((in[w + 43] & 0x01ffffffffffffffULL) << 19) | ((in[w + 42] & 0x01ffffffffffffffULL) >> 38);
        out[c + 39]  = ((in[w + 44] & 0x01ffffffffffffffULL) << 12) | ((in[w + 43] & 0x01ffffffffffffffULL) >> 45);
        out[c + 40]  = ((in[w + 45] & 0x01ffffffffffffffULL) <<  5) | ((in[w + 44] & 0x01ffffffffffffffULL) >> 52);
        out[c + 40] |= ((in[w + 46] & 0x01ffffffffffffffULL) << 62);
        out[c + 41]  = ((in[w + 47] & 0x01ffffffffffffffULL) << 55) | ((in[w + 46] & 0x01ffffffffffffffULL) >> 2);
        out[c + 42]  = ((in[w + 48] & 0x01ffffffffffffffULL) << 48) | ((in[w + 47] & 0x01ffffffffffffffULL) >> 9);
        out[c + 43]  = ((in[w + 49] & 0x01ffffffffffffffULL) << 41) | ((in[w + 48] & 0x01ffffffffffffffULL) >> 16);
        out[c + 44]  = ((in[w + 50] & 0x01ffffffffffffffULL) << 34) | ((in[w + 49] & 0x01ffffffffffffffULL) >> 23);
        out[c + 45]  = ((in[w + 51] & 0x01ffffffffffffffULL) << 27) | ((in[w + 50] & 0x01ffffffffffffffULL) >> 30);
        out[c + 46]  = ((in[w + 52] & 0x01ffffffffffffffULL) << 20) | ((in[w + 51] & 0x01ffffffffffffffULL) >> 37);
        out[c + 47]  = ((in[w + 53] & 0x01ffffffffffffffULL) << 13) | ((in[w + 52] & 0x01ffffffffffffffULL) >> 44);
        out[c + 48]  = ((in[w + 54] & 0x01ffffffffffffffULL) <<  6) | ((in[w + 53] & 0x01ffffffffffffffULL) >> 51);
        out[c + 48] |= ((in[w + 55] & 0x01ffffffffffffffULL) << 63);
        out[c + 49]  = ((in[w + 56] & 0x01ffffffffffffffULL) << 56) | ((in[w + 55] & 0x01ffffffffffffffULL) >> 1);
        out[c + 50]  = ((in[w + 57] & 0x01ffffffffffffffULL) << 49) | ((in[w + 56] & 0x01ffffffffffffffULL) >> 8);
        out[c + 51]  = ((in[w + 58] & 0x01ffffffffffffffULL) << 42) | ((in[w + 57] & 0x01ffffffffffffffULL) >> 15);
        out[c + 52]  = ((in[w + 59] & 0x01ffffffffffffffULL) << 35) | ((in[w + 58] & 0x01ffffffffffffffULL) >> 22);
        out[c + 53]  = ((in[w + 60] & 0x01ffffffffffffffULL) << 28) | ((in[w + 59] & 0x01ffffffffffffffULL) >> 29);
        out[c + 54]  = ((in[w + 61] & 0x01ffffffffffffffULL) << 21) | ((in[w + 60] & 0x01ffffffffffffffULL) >> 36);
        out[c + 55]  = ((in[w + 62] & 0x01ffffffffffffffULL) << 14) | ((in[w + 61] & 0x01ffffffffffffffULL) >> 43);
        out[c + 56]  = ((in[w + 63] & 0x01ffffffffffffffULL) <<  7) | ((in[w + 62] & 0x01ffffffffffffffULL) >> 50);
    }
}

void
pack_64_into_58(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 29, w += 32) {
        out[c +  0]  = ((in[w +  0] & 0x03ffffffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x03ffffffffffffffULL) << 58);
        out[c +  1]  = ((in[w +  2] & 0x03ffffffffffffffULL) << 52) | ((in[w +  1] & 0x03ffffffffffffffULL) >> 6);
        out[c +  2]  = ((in[w +  3] & 0x03ffffffffffffffULL) << 46) | ((in[w +  2] & 0x03ffffffffffffffULL) >> 12);
        out[c +  3]  = ((in[w +  4] & 0x03ffffffffffffffULL) << 40) | ((in[w +  3] & 0x03ffffffffffffffULL) >> 18);
        out[c +  4]  = ((in[w +  5] & 0x03ffffffffffffffULL) << 34) | ((in[w +  4] & 0x03ffffffffffffffULL) >> 24);
        out[c +  5]  = ((in[w +  6] & 0x03ffffffffffffffULL) << 28) | ((in[w +  5] & 0x03ffffffffffffffULL) >> 30);
        out[c +  6]  = ((in[w +  7] & 0x03ffffffffffffffULL) << 22) | ((in[w +  6] & 0x03ffffffffffffffULL) >> 36);
        out[c +  7]  = ((in[w +  8] & 0x03ffffffffffffffULL) << 16) | ((in[w +  7] & 0x03ffffffffffffffULL) >> 42);
        out[c +  8]  = ((in[w +  9] & 0x03ffffffffffffffULL) << 10) | ((in[w +  8] & 0x03ffffffffffffffULL) >> 48);
        out[c +  9]  = ((in[w + 10] & 0x03ffffffffffffffULL) <<  4) | ((in[w +  9] & 0x03ffffffffffffffULL) >> 54);
        out[c +  9] |= ((in[w + 11] & 0x03ffffffffffffffULL) << 62);
        out[c + 10]  = ((in[w + 12] & 0x03ffffffffffffffULL) << 56) | ((in[w + 11] & 0x03ffffffffffffffULL) >> 2);
        out[c + 11]  = ((in[w + 13] & 0x03ffffffffffffffULL) << 50) | ((in[w + 12] & 0x03ffffffffffffffULL) >> 8);
        out[c + 12]  = ((in[w + 14] & 0x03ffffffffffffffULL) << 44) | ((in[w + 13] & 0x03ffffffffffffffULL) >> 14);
        out[c + 13]  = ((in[w + 15] & 0x03ffffffffffffffULL) << 38) | ((in[w + 14] & 0x03ffffffffffffffULL) >> 20);
        out[c + 14]  = ((in[w + 16] & 0x03ffffffffffffffULL) << 32) | ((in[w + 15] & 0x03ffffffffffffffULL) >> 26);
        out[c + 15]  = ((in[w + 17] & 0x03ffffffffffffffULL) << 26) | ((in[w + 16] & 0x03ffffffffffffffULL) >> 32);
        out[c + 16]  = ((in[w + 18] & 0x03ffffffffffffffULL) << 20) | ((in[w + 17] & 0x03ffffffffffffffULL) >> 38);
        out[c + 17]  = ((in[w + 19] & 0x03ffffffffffffffULL) << 14) | ((in[w + 18] & 0x03ffffffffffffffULL) >> 44);
        out[c + 18]  = ((in[w + 20] & 0x03ffffffffffffffULL) <<  8) | ((in[w + 19] & 0x03ffffffffffffffULL) >> 50);
        out[c + 19]  = ((in[w + 21] & 0x03ffffffffffffffULL) <<  2) | ((in[w + 20] & 0x03ffffffffffffffULL) >> 56);
        out[c + 19] |= ((in[w + 22] & 0x03ffffffffffffffULL) << 60);
        out[c + 20]  = ((in[w + 23] & 0x03ffffffffffffffULL) << 54) | ((in[w + 22] & 0x03ffffffffffffffULL) >> 4);
        out[c + 21]  = ((in[w + 24] & 0x03ffffffffffffffULL) << 48) | ((in[w + 23] & 0x03ffffffffffffffULL) >> 10);
        out[c + 22]  = ((in[w + 25] & 0x03ffffffffffffffULL) << 42) | ((in[w + 24] & 0x03ffffffffffffffULL) >> 16);
        out[c + 23]  = ((in[w + 26] & 0x03ffffffffffffffULL) << 36) | ((in[w + 25] & 0x03ffffffffffffffULL) >> 22);
        out[c + 24]  = ((in[w + 27] & 0x03ffffffffffffffULL) << 30) | ((in[w + 26] & 0x03ffffffffffffffULL) >> 28);
        out[c + 25]  = ((in[w + 28] & 0x03ffffffffffffffULL) << 24) | ((in[w + 27] & 0x03ffffffffffffffULL) >> 34);
        out[c + 26]  = ((in[w + 29] & 0x03ffffffffffffffULL) << 18) | ((in[w + 28] & 0x03ffffffffffffffULL) >> 40);
        out[c + 27]  = ((in[w + 30] & 0x03ffffffffffffffULL) << 12) | ((in[w + 29] & 0x03ffffffffffffffULL) >> 46);
        out[c + 28]  = ((in[w + 31] & 0x03ffffffffffffffULL) <<  6) | ((in[w + 30] & 0x03ffffffffffffffULL) >> 52);
    }
}

void
pack_64_into_59(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 59, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x07ffffffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x07ffffffffffffffULL) << 59);
        out[c +  1]  = ((in[w +  2] & 0x07ffffffffffffffULL) << 54) | ((in[w +  1] & 0x07ffffffffffffffULL) >> 5);
        out[c +  2]  = ((in[w +  3] & 0x07ffffffffffffffULL) << 49) | ((in[w +  2] & 0x07ffffffffffffffULL) >> 10);
        out[c +  3]  = ((in[w +  4] & 0x07ffffffffffffffULL) << 44) | ((in[w +  3] & 0x07ffffffffffffffULL) >> 15);
        out[c +  4]  = ((in[w +  5] & 0x07ffffffffffffffULL) << 39) | ((in[w +  4] & 0x07ffffffffffffffULL) >> 20);
        out[c +  5]  = ((in[w +  6] & 0x07ffffffffffffffULL) << 34) | ((in[w +  5] & 0x07ffffffffffffffULL) >> 25);
        out[c +  6]  = ((in[w +  7] & 0x07ffffffffffffffULL) << 29) | ((in[w +  6] & 0x07ffffffffffffffULL) >> 30);
        out[c +  7]  = ((in[w +  8] & 0x07ffffffffffffffULL) << 24) | ((in[w +  7] & 0x07ffffffffffffffULL) >> 35);
        out[c +  8]  = ((in[w +  9] & 0x07ffffffffffffffULL) << 19) | ((in[w +  8] & 0x07ffffffffffffffULL) >> 40);
        out[c +  9]  = ((in[w + 10] & 0x07ffffffffffffffULL) << 14) | ((in[w +  9] & 0x07ffffffffffffffULL) >> 45);
        out[c + 10]  = ((in[w + 11] & 0x07ffffffffffffffULL) <<  9) | ((in[w + 10] & 0x07ffffffffffffffULL) >> 50);
        out[c + 11]  = ((in[w + 12] & 0x07ffffffffffffffULL) <<  4) | ((in[w + 11] & 0x07ffffffffffffffULL) >> 55);
        out[c + 11] |= ((in[w + 13] & 0x07ffffffffffffffULL) << 63);
        out[c + 12]  = ((in[w + 14] & 0x07ffffffffffffffULL) << 58) | ((in[w + 13] & 0x07ffffffffffffffULL) >> 1);
        out[c + 13]  = ((in[w + 15] & 0x07ffffffffffffffULL) << 53) | ((in[w + 14] & 0x07ffffffffffffffULL) >> 6);
        out[c + 14]  = ((in[w + 16] & 0x07ffffffffffffffULL) << 48) | ((in[w + 15] & 0x07ffffffffffffffULL) >> 11);
        out[c + 15]  = ((in[w + 17] & 0x07ffffffffffffffULL) << 43) | ((in[w + 16] & 0x07ffffffffffffffULL) >> 16);
        out[c + 16]  = ((in[w + 18] & 0x07ffffffffffffffULL) << 38) | ((in[w + 17] & 0x07ffffffffffffffULL) >> 21);
        out[c + 17]  = ((in[w + 19] & 0x07ffffffffffffffULL) << 33) | ((in[w + 18] & 0x07ffffffffffffffULL) >> 26);
        out[c + 18]  = ((in[w + 20] & 0x07ffffffffffffffULL) << 28) | ((in[w + 19] & 0x07ffffffffffffffULL) >> 31);
        out[c + 19]  = ((in[w + 21] & 0x07ffffffffffffffULL) << 23) | ((in[w + 20] & 0x07ffffffffffffffULL) >> 36);
        out[c + 20]  = ((in[w + 22] & 0x07ffffffffffffffULL) << 18) | ((in[w + 21] & 0x07ffffffffffffffULL) >> 41);
        out[c + 21]  = ((in[w + 23] & 0x07ffffffffffffffULL) << 13) | ((in[w + 22] & 0x07ffffffffffffffULL) >> 46);
        out[c + 22]  = ((in[w + 24] & 0x07ffffffffffffffULL) <<  8) | ((in[w + 23] & 0x07ffffffffffffffULL) >> 51);
        out[c + 23]  = ((in[w + 25] & 0x07ffffffffffffffULL) <<  3) | ((in[w + 24] & 0x07ffffffffffffffULL) >> 56);
        out[c + 23] |= ((in[w + 26] & 0x07ffffffffffffffULL) << 62);
        out[c + 24]  = ((in[w + 27] & 0x07ffffffffffffffULL) << 57) | ((in[w + 26] & 0x07ffffffffffffffULL) >> 2);
        out[c + 25]  = ((in[w + 28] & 0x07ffffffffffffffULL) << 52) | ((in[w + 27] & 0x07ffffffffffffffULL) >> 7);
        out[c + 26]  = ((in[w + 29] & 0x07ffffffffffffffULL) << 47) | ((in[w + 28] & 0x07ffffffffffffffULL) >> 12);
        out[c + 27]  = ((in[w + 30] & 0x07ffffffffffffffULL) << 42) | ((in[w + 29] & 0x07ffffffffffffffULL) >> 17);
        out[c + 28]  = ((in[w + 31] & 0x07ffffffffffffffULL) << 37) | ((in[w + 30] & 0x07ffffffffffffffULL) >> 22);
        out[c + 29]  = ((in[w + 32] & 0x07ffffffffffffffULL) << 32) | ((in[w + 31] & 0x07ffffffffffffffULL) >> 27);
        out[c + 30]  = ((in[w + 33] & 0x07ffffffffffffffULL) << 27) | ((in[w + 32] & 0x07ffffffffffffffULL) >> 32);
        out[c + 31]  = ((in[w + 34] & 0x07ffffffffffffffULL) << 22) | ((in[w + 33] & 0x07ffffffffffffffULL) >> 37);
        out[c + 32]  = ((in[w + 35] & 0x07ffffffffffffffULL) << 17) | ((in[w + 34] & 0x07ffffffffffffffULL) >> 42);
        out[c + 33]  = ((in[w + 36] & 0x07ffffffffffffffULL) << 12) | ((in[w + 35] & 0x07ffffffffffffffULL) >> 47);
        out[c + 34]  = ((in[w + 37] & 0x07ffffffffffffffULL) <<  7) | ((in[w + 36] & 0x07ffffffffffffffULL) >> 52);
        out[c + 35]  = ((in[w + 38] & 0x07ffffffffffffffULL) <<  2) | ((in[w + 37] & 0x07ffffffffffffffULL) >> 57);
        out[c + 35] |= ((in[w + 39] & 0x07ffffffffffffffULL) << 61);
        out[c + 36]  = ((in[w + 40] & 0x07ffffffffffffffULL) << 56) | ((in[w + 39] & 0x07ffffffffffffffULL) >> 3);
        out[c + 37]  = ((in[w + 41] & 0x07ffffffffffffffULL) << 51) | ((in[w + 40] & 0x07ffffffffffffffULL) >> 8);
        out[c + 38]  = ((in[w + 42] & 0x07ffffffffffffffULL) << 46) | ((in[w + 41] & 0x07ffffffffffffffULL) >> 13);
        out[c + 39]  = ((in[w + 43] & 0x07ffffffffffffffULL) << 41) | ((in[w + 42] & 0x07ffffffffffffffULL) >> 18);
        out[c + 40]  = ((in[w + 44] & 0x07ffffffffffffffULL) << 36) | ((in[w + 43] & 0x07ffffffffffffffULL) >> 23);
        out[c + 41]  = ((in[w + 45] & 0x07ffffffffffffffULL) << 31) | ((in[w + 44] & 0x07ffffffffffffffULL) >> 28);
        out[c + 42]  = ((in[w + 46] & 0x07ffffffffffffffULL) << 26) | ((in[w + 45] & 0x07ffffffffffffffULL) >> 33);
        out[c + 43]  = ((in[w + 47] & 0x07ffffffffffffffULL) << 21) | ((in[w + 46] & 0x07ffffffffffffffULL) >> 38);
        out[c + 44]  = ((in[w + 48] & 0x07ffffffffffffffULL) << 16) | ((in[w + 47] & 0x07ffffffffffffffULL) >> 43);
        out[c + 45]  = ((in[w + 49] & 0x07ffffffffffffffULL) << 11) | ((in[w + 48] & 0x07ffffffffffffffULL) >> 48);
        out[c + 46]  = ((in[w + 50] & 0x07ffffffffffffffULL) <<  6) | ((in[w + 49] & 0x07ffffffffffffffULL) >> 53);
        out[c + 47]  = ((in[w + 51] & 0x07ffffffffffffffULL) <<  1) | ((in[w + 50] & 0x07ffffffffffffffULL) >> 58);
        out[c + 47] |= ((in[w + 52] & 0x07ffffffffffffffULL) << 60);
        out[c + 48]  = ((in[w + 53] & 0x07ffffffffffffffULL) << 55) | ((in[w + 52] & 0x07ffffffffffffffULL) >> 4);
        out[c + 49]  = ((in[w + 54] & 0x07ffffffffffffffULL) << 50) | ((in[w + 53] & 0x07ffffffffffffffULL) >> 9);
        out[c + 50]  = ((in[w + 55] & 0x07ffffffffffffffULL) << 45) | ((in[w + 54] & 0x07ffffffffffffffULL) >> 14);
        out[c + 51]  = ((in[w + 56] & 0x07ffffffffffffffULL) << 40) | ((in[w + 55] & 0x07ffffffffffffffULL) >> 19);
        out[c + 52]  = ((in[w + 57] & 0x07ffffffffffffffULL) << 35) | ((in[w + 56] & 0x07ffffffffffffffULL) >> 24);
        out[c + 53]  = ((in[w + 58] & 0x07ffffffffffffffULL) << 30) | ((in[w + 57] & 0x07ffffffffffffffULL) >> 29);
        out[c + 54]  = ((in[w + 59] & 0x07ffffffffffffffULL) << 25) | ((in[w + 58] & 0x07ffffffffffffffULL) >> 34);
        out[c + 55]  = ((in[w + 60] & 0x07ffffffffffffffULL) << 20) | ((in[w + 59] & 0x07ffffffffffffffULL) >> 39);
        out[c + 56]  = ((in[w + 61] & 0x07ffffffffffffffULL) << 15) | ((in[w + 60] & 0x07ffffffffffffffULL) >> 44);
        out[c + 57]  = ((in[w + 62] & 0x07ffffffffffffffULL) << 10) | ((in[w + 61] & 0x07ffffffffffffffULL) >> 49);
        out[c + 58]  = ((in[w + 63] & 0x07ffffffffffffffULL) <<  5) | ((in[w + 62] & 0x07ffffffffffffffULL) >> 54);
    }
}

void
pack_64_into_60(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 15, w += 16) {
        out[c +  0]  = ((in[w +  0] & 0x0fffffffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x0fffffffffffffffULL) << 60);
        out[c +  1]  = ((in[w +  2] & 0x0fffffffffffffffULL) << 56) | ((in[w +  1] & 0x0fffffffffffffffULL) >> 4);
        out[c +  2]  = ((in[w +  3] & 0x0fffffffffffffffULL) << 52) | ((in[w +  2] & 0x0fffffffffffffffULL) >> 8);
        out[c +  3]  = ((in[w +  4] & 0x0fffffffffffffffULL) << 48) | ((in[w +  3] & 0x0fffffffffffffffULL) >> 12);
        out[c +  4]  = ((in[w +  5] & 0x0fffffffffffffffULL) << 44) | ((in[w +  4] & 0x0fffffffffffffffULL) >> 16);
        out[c +  5]  = ((in[w +  6] & 0x0fffffffffffffffULL) << 40) | ((in[w +  5] & 0x0fffffffffffffffULL) >> 20);
        out[c +  6]  = ((in[w +  7] & 0x0fffffffffffffffULL) << 36) | ((in[w +  6] & 0x0fffffffffffffffULL) >> 24);
        out[c +  7]  = ((in[w +  8] & 0x0fffffffffffffffULL) << 32) | ((in[w +  7] & 0x0fffffffffffffffULL) >> 28);
        out[c +  8]  = ((in[w +  9] & 0x0fffffffffffffffULL) << 28) | ((in[w +  8] & 0x0fffffffffffffffULL) >> 32);
        out[c +  9]  = ((in[w + 10] & 0x0fffffffffffffffULL) << 24) | ((in[w +  9] & 0x0fffffffffffffffULL) >> 36);
        out[c + 10]  = ((in[w + 11] & 0x0fffffffffffffffULL) << 20) | ((in[w + 10] & 0x0fffffffffffffffULL) >> 40);
        out[c + 11]  = ((in[w + 12] & 0x0fffffffffffffffULL) << 16) | ((in[w + 11] & 0x0fffffffffffffffULL) >> 44);
        out[c + 12]  = ((in[w + 13] & 0x0fffffffffffffffULL) << 12) | ((in[w + 12] & 0x0fffffffffffffffULL) >> 48);
        out[c + 13]  = ((in[w + 14] & 0x0fffffffffffffffULL) <<  8) | ((in[w + 13] & 0x0fffffffffffffffULL) >> 52);
        out[c + 14]  = ((in[w + 15] & 0x0fffffffffffffffULL) <<  4) | ((in[w + 14] & 0x0fffffffffffffffULL) >> 56);
    }
}

void
pack_64_into_61(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 61, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x1fffffffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x1fffffffffffffffULL) << 61);
        out[c +  1]  = ((in[w +  2] & 0x1fffffffffffffffULL) << 58) | ((in[w +  1] & 0x1fffffffffffffffULL) >> 3);
        out[c +  2]  = ((in[w +  3] & 0x1fffffffffffffffULL) << 55) | ((in[w +  2] & 0x1fffffffffffffffULL) >> 6);
        out[c +  3]  = ((in[w +  4] & 0x1fffffffffffffffULL) << 52) | ((in[w +  3] & 0x1fffffffffffffffULL) >> 9);
        out[c +  4]  = ((in[w +  5] & 0x1fffffffffffffffULL) << 49) | ((in[w +  4] & 0x1fffffffffffffffULL) >> 12);
        out[c +  5]  = ((in[w +  6] & 0x1fffffffffffffffULL) << 46) | ((in[w +  5] & 0x1fffffffffffffffULL) >> 15);
        out[c +  6]  = ((in[w +  7] & 0x1fffffffffffffffULL) << 43) | ((in[w +  6] & 0x1fffffffffffffffULL) >> 18);
        out[c +  7]  = ((in[w +  8] & 0x1fffffffffffffffULL) << 40) | ((in[w +  7] & 0x1fffffffffffffffULL) >> 21);
        out[c +  8]  = ((in[w +  9] & 0x1fffffffffffffffULL) << 37) | ((in[w +  8] & 0x1fffffffffffffffULL) >> 24);
        out[c +  9]  = ((in[w + 10] & 0x1fffffffffffffffULL) << 34) | ((in[w +  9] & 0x1fffffffffffffffULL) >> 27);
        out[c + 10]  = ((in[w + 11] & 0x1fffffffffffffffULL) << 31) | ((in[w + 10] & 0x1fffffffffffffffULL) >> 30);
        out[c + 11]  = ((in[w + 12] & 0x1fffffffffffffffULL) << 28) | ((in[w + 11] & 0x1fffffffffffffffULL) >> 33);
        out[c + 12]  = ((in[w + 13] & 0x1fffffffffffffffULL) << 25) | ((in[w + 12] & 0x1fffffffffffffffULL) >> 36);
        out[c + 13]  = ((in[w + 14] & 0x1fffffffffffffffULL) << 22) | ((in[w + 13] & 0x1fffffffffffffffULL) >> 39);
        out[c + 14]  = ((in[w + 15] & 0x1fffffffffffffffULL) << 19) | ((in[w + 14] & 0x1fffffffffffffffULL) >> 42);
        out[c + 15]  = ((in[w + 16] & 0x1fffffffffffffffULL) << 16) | ((in[w + 15] & 0x1fffffffffffffffULL) >> 45);
        out[c + 16]  = ((in[w + 17] & 0x1fffffffffffffffULL) << 13) | ((in[w + 16] & 0x1fffffffffffffffULL) >> 48);
        out[c + 17]  = ((in[w + 18] & 0x1fffffffffffffffULL) << 10) | ((in[w + 17] & 0x1fffffffffffffffULL) >> 51);
        out[c + 18]  = ((in[w + 19] & 0x1fffffffffffffffULL) <<  7) | ((in[w + 18] & 0x1fffffffffffffffULL) >> 54);
        out[c + 19]  = ((in[w + 20] & 0x1fffffffffffffffULL) <<  4) | ((in[w + 19] & 0x1fffffffffffffffULL) >> 57);
        out[c + 20]  = ((in[w + 21] & 0x1fffffffffffffffULL) <<  1) | ((in[w + 20] & 0x1fffffffffffffffULL) >> 60);
        out[c + 20] |= ((in[w + 22] & 0x1fffffffffffffffULL) << 62);
        out[c + 21]  = ((in[w + 23] & 0x1fffffffffffffffULL) << 59) | ((in[w + 22] & 0x1fffffffffffffffULL) >> 2);
        out[c + 22]  = ((in[w + 24] & 0x1fffffffffffffffULL) << 56) | ((in[w + 23] & 0x1fffffffffffffffULL) >> 5);
        out[c + 23]  = ((in[w + 25] & 0x1fffffffffffffffULL) << 53) | ((in[w + 24] & 0x1fffffffffffffffULL) >> 8);
        out[c + 24]  = ((in[w + 26] & 0x1fffffffffffffffULL) << 50) | ((in[w + 25] & 0x1fffffffffffffffULL) >> 11);
        out[c + 25]  = ((in[w + 27] & 0x1fffffffffffffffULL) << 47) | ((in[w + 26] & 0x1fffffffffffffffULL) >> 14);
        out[c + 26]  = ((in[w + 28] & 0x1fffffffffffffffULL) << 44) | ((in[w + 27] & 0x1fffffffffffffffULL) >> 17);
        out[c + 27]  = ((in[w + 29] & 0x1fffffffffffffffULL) << 41) | ((in[w + 28] & 0x1fffffffffffffffULL) >> 20);
        out[c + 28]  = ((in[w + 30] & 0x1fffffffffffffffULL) << 38) | ((in[w + 29] & 0x1fffffffffffffffULL) >> 23);
        out[c + 29]  = ((in[w + 31] & 0x1fffffffffffffffULL) << 35) | ((in[w + 30] & 0x1fffffffffffffffULL) >> 26);
        out[c + 30]  = ((in[w + 32] & 0x1fffffffffffffffULL) << 32) | ((in[w + 31] & 0x1fffffffffffffffULL) >> 29);
        out[c + 31]  = ((in[w + 33] & 0x1fffffffffffffffULL) << 29) | ((in[w + 32] & 0x1fffffffffffffffULL) >> 32);
        out[c + 32]  = ((in[w + 34] & 0x1fffffffffffffffULL) << 26) | ((in[w + 33] & 0x1fffffffffffffffULL) >> 35);
        out[c + 33]  = ((in[w + 35] & 0x1fffffffffffffffULL) << 23) | ((in[w + 34] & 0x1fffffffffffffffULL) >> 38);
        out[c + 34]  = ((in[w + 36] & 0x1fffffffffffffffULL) << 20) | ((in[w + 35] & 0x1fffffffffffffffULL) >> 41);
        out[c + 35]  = ((in[w + 37] & 0x1fffffffffffffffULL) << 17) | ((in[w + 36] & 0x1fffffffffffffffULL) >> 44);
        out[c + 36]  = ((in[w + 38] & 0x1fffffffffffffffULL) << 14) | ((in[w + 37] & 0x1fffffffffffffffULL) >> 47);
        out[c + 37]  = ((in[w + 39] & 0x1fffffffffffffffULL) << 11) | ((in[w + 38] & 0x1fffffffffffffffULL) >> 50);
        out[c + 38]  = ((in[w + 40] & 0x1fffffffffffffffULL) <<  8) | ((in[w + 39] & 0x1fffffffffffffffULL) >> 53);
        out[c + 39]  = ((in[w + 41] & 0x1fffffffffffffffULL) <<  5) | ((in[w + 40] & 0x1fffffffffffffffULL) >> 56);
        out[c + 40]  = ((in[w + 42] & 0x1fffffffffffffffULL) <<  2) | ((in[w + 41] & 0x1fffffffffffffffULL) >> 59);
        out[c + 40] |= ((in[w + 43] & 0x1fffffffffffffffULL) << 63);
        out[c + 41]  = ((in[w + 44] & 0x1fffffffffffffffULL) << 60) | ((in[w + 43] & 0x1fffffffffffffffULL) >> 1);
        out[c + 42]  = ((in[w + 45] & 0x1fffffffffffffffULL) << 57) | ((in[w + 44] & 0x1fffffffffffffffULL) >> 4);
        out[c + 43]  = ((in[w + 46] & 0x1fffffffffffffffULL) << 54) | ((in[w + 45] & 0x1fffffffffffffffULL) >> 7);
        out[c + 44]  = ((in[w + 47] & 0x1fffffffffffffffULL) << 51) | ((in[w + 46] & 0x1fffffffffffffffULL) >> 10);
        out[c + 45]  = ((in[w + 48] & 0x1fffffffffffffffULL) << 48) | ((in[w + 47] & 0x1fffffffffffffffULL) >> 13);
        out[c + 46]  = ((in[w + 49] & 0x1fffffffffffffffULL) << 45) | ((in[w + 48] & 0x1fffffffffffffffULL) >> 16);
        out[c + 47]  = ((in[w + 50] & 0x1fffffffffffffffULL) << 42) | ((in[w + 49] & 0x1fffffffffffffffULL) >> 19);
        out[c + 48]  = ((in[w + 51] & 0x1fffffffffffffffULL) << 39) | ((in[w + 50] & 0x1fffffffffffffffULL) >> 22);
        out[c + 49]  = ((in[w + 52] & 0x1fffffffffffffffULL) << 36) | ((in[w + 51] & 0x1fffffffffffffffULL) >> 25);
        out[c + 50]  = ((in[w + 53] & 0x1fffffffffffffffULL) << 33) | ((in[w + 52] & 0x1fffffffffffffffULL) >> 28);
        out[c + 51]  = ((in[w + 54] & 0x1fffffffffffffffULL) << 30) | ((in[w + 53] & 0x1fffffffffffffffULL) >> 31);
        out[c + 52]  = ((in[w + 55] & 0x1fffffffffffffffULL) << 27) | ((in[w + 54] & 0x1fffffffffffffffULL) >> 34);
        out[c + 53]  = ((in[w + 56] & 0x1fffffffffffffffULL) << 24) | ((in[w + 55] & 0x1fffffffffffffffULL) >> 37);
        out[c + 54]  = ((in[w + 57] & 0x1fffffffffffffffULL) << 21) | ((in[w + 56] & 0x1fffffffffffffffULL) >> 40);
        out[c + 55]  = ((in[w + 58] & 0x1fffffffffffffffULL) << 18) | ((in[w + 57] & 0x1fffffffffffffffULL) >> 43);
        out[c + 56]  = ((in[w + 59] & 0x1fffffffffffffffULL) << 15) | ((in[w + 58] & 0x1fffffffffffffffULL) >> 46);
        out[c + 57]  = ((in[w + 60] & 0x1fffffffffffffffULL) << 12) | ((in[w + 59] & 0x1fffffffffffffffULL) >> 49);
        out[c + 58]  = ((in[w + 61] & 0x1fffffffffffffffULL) <<  9) | ((in[w + 60] & 0x1fffffffffffffffULL) >> 52);
        out[c + 59]  = ((in[w + 62] & 0x1fffffffffffffffULL) <<  6) | ((in[w + 61] & 0x1fffffffffffffffULL) >> 55);
        out[c + 60]  = ((in[w + 63] & 0x1fffffffffffffffULL) <<  3) | ((in[w + 62] & 0x1fffffffffffffffULL) >> 58);
    }
}

void
pack_64_into_62(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 31, w += 32) {
        out[c +  0]  = ((in[w +  0] & 0x3fffffffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x3fffffffffffffffULL) << 62);
        out[c +  1]  = ((in[w +  2] & 0x3fffffffffffffffULL) << 60) | ((in[w +  1] & 0x3fffffffffffffffULL) >> 2);
        out[c +  2]  = ((in[w +  3] & 0x3fffffffffffffffULL) << 58) | ((in[w +  2] & 0x3fffffffffffffffULL) >> 4);
        out[c +  3]  = ((in[w +  4] & 0x3fffffffffffffffULL) << 56) | ((in[w +  3] & 0x3fffffffffffffffULL) >> 6);
        out[c +  4]  = ((in[w +  5] & 0x3fffffffffffffffULL) << 54) | ((in[w +  4] & 0x3fffffffffffffffULL) >> 8);
        out[c +  5]  = ((in[w +  6] & 0x3fffffffffffffffULL) << 52) | ((in[w +  5] & 0x3fffffffffffffffULL) >> 10);
        out[c +  6]  = ((in[w +  7] & 0x3fffffffffffffffULL) << 50) | ((in[w +  6] & 0x3fffffffffffffffULL) >> 12);
        out[c +  7]  = ((in[w +  8] & 0x3fffffffffffffffULL) << 48) | ((in[w +  7] & 0x3fffffffffffffffULL) >> 14);
        out[c +  8]  = ((in[w +  9] & 0x3fffffffffffffffULL) << 46) | ((in[w +  8] & 0x3fffffffffffffffULL) >> 16);
        out[c +  9]  = ((in[w + 10] & 0x3fffffffffffffffULL) << 44) | ((in[w +  9] & 0x3fffffffffffffffULL) >> 18);
        out[c + 10]  = ((in[w + 11] & 0x3fffffffffffffffULL) << 42) | ((in[w + 10] & 0x3fffffffffffffffULL) >> 20);
        out[c + 11]  = ((in[w + 12] & 0x3fffffffffffffffULL) << 40) | ((in[w + 11] & 0x3fffffffffffffffULL) >> 22);
        out[c + 12]  = ((in[w + 13] & 0x3fffffffffffffffULL) << 38) | ((in[w + 12] & 0x3fffffffffffffffULL) >> 24);
        out[c + 13]  = ((in[w + 14] & 0x3fffffffffffffffULL) << 36) | ((in[w + 13] & 0x3fffffffffffffffULL) >> 26);
        out[c + 14]  = ((in[w + 15] & 0x3fffffffffffffffULL) << 34) | ((in[w + 14] & 0x3fffffffffffffffULL) >> 28);
        out[c + 15]  = ((in[w + 16] & 0x3fffffffffffffffULL) << 32) | ((in[w + 15] & 0x3fffffffffffffffULL) >> 30);
        out[c + 16]  = ((in[w + 17] & 0x3fffffffffffffffULL) << 30) | ((in[w + 16] & 0x3fffffffffffffffULL) >> 32);
        out[c + 17]  = ((in[w + 18] & 0x3fffffffffffffffULL) << 28) | ((in[w + 17] & 0x3fffffffffffffffULL) >> 34);
        out[c + 18]  = ((in[w + 19] & 0x3fffffffffffffffULL) << 26) | ((in[w + 18] & 0x3fffffffffffffffULL) >> 36);
        out[c + 19]  = ((in[w + 20] & 0x3fffffffffffffffULL) << 24) | ((in[w + 19] & 0x3fffffffffffffffULL) >> 38);
        out[c + 20]  = ((in[w + 21] & 0x3fffffffffffffffULL) << 22) | ((in[w + 20] & 0x3fffffffffffffffULL) >> 40);
        out[c + 21]  = ((in[w + 22] & 0x3fffffffffffffffULL) << 20) | ((in[w + 21] & 0x3fffffffffffffffULL) >> 42);
        out[c + 22]  = ((in[w + 23] & 0x3fffffffffffffffULL) << 18) | ((in[w + 22] & 0x3fffffffffffffffULL) >> 44);
        out[c + 23]  = ((in[w + 24] & 0x3fffffffffffffffULL) << 16) | ((in[w + 23] & 0x3fffffffffffffffULL) >> 46);
        out[c + 24]  = ((in[w + 25] & 0x3fffffffffffffffULL) << 14) | ((in[w + 24] & 0x3fffffffffffffffULL) >> 48);
        out[c + 25]  = ((in[w + 26] & 0x3fffffffffffffffULL) << 12) | ((in[w + 25] & 0x3fffffffffffffffULL) >> 50);
        out[c + 26]  = ((in[w + 27] & 0x3fffffffffffffffULL) << 10) | ((in[w + 26] & 0x3fffffffffffffffULL) >> 52);
        out[c + 27]  = ((in[w + 28] & 0x3fffffffffffffffULL) <<  8) | ((in[w + 27] & 0x3fffffffffffffffULL) >> 54);
        out[c + 28]  = ((in[w + 29] & 0x3fffffffffffffffULL) <<  6) | ((in[w + 28] & 0x3fffffffffffffffULL) >> 56);
        out[c + 29]  = ((in[w + 30] & 0x3fffffffffffffffULL) <<  4) | ((in[w + 29] & 0x3fffffffffffffffULL) >> 58);
        out[c + 30]  = ((in[w + 31] & 0x3fffffffffffffffULL) <<  2) | ((in[w + 30] & 0x3fffffffffffffffULL) >> 60);
    }
}

void
pack_64_into_63(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t c = 0, w = 0; w < n; c += 63, w += 64) {
        out[c +  0]  = ((in[w +  0] & 0x7fffffffffffffffULL) <<  0);
        out[c +  0] |= ((in[w +  1] & 0x7fffffffffffffffULL) << 63);
        out[c +  1]  = ((in[w +  2] & 0x7fffffffffffffffULL) << 62) | ((in[w +  1] & 0x7fffffffffffffffULL) >> 1);
        out[c +  2]  = ((in[w +  3] & 0x7fffffffffffffffULL) << 61) | ((in[w +  2] & 0x7fffffffffffffffULL) >> 2);
        out[c +  3]  = ((in[w +  4] & 0x7fffffffffffffffULL) << 60) | ((in[w +  3] & 0x7fffffffffffffffULL) >> 3);
        out[c +  4]  = ((in[w +  5] & 0x7fffffffffffffffULL) << 59) | ((in[w +  4] & 0x7fffffffffffffffULL) >> 4);
        out[c +  5]  = ((in[w +  6] & 0x7fffffffffffffffULL) << 58) | ((in[w +  5] & 0x7fffffffffffffffULL) >> 5);
        out[c +  6]  = ((in[w +  7] & 0x7fffffffffffffffULL) << 57) | ((in[w +  6] & 0x7fffffffffffffffULL) >> 6);
        out[c +  7]  = ((in[w +  8] & 0x7fffffffffffffffULL) << 56) | ((in[w +  7] & 0x7fffffffffffffffULL) >> 7);
        out[c +  8]  = ((in[w +  9] & 0x7fffffffffffffffULL) << 55) | ((in[w +  8] & 0x7fffffffffffffffULL) >> 8);
        out[c +  9]  = ((in[w + 10] & 0x7fffffffffffffffULL) << 54) | ((in[w +  9] & 0x7fffffffffffffffULL) >> 9);
        out[c + 10]  = ((in[w + 11] & 0x7fffffffffffffffULL) << 53) | ((in[w + 10] & 0x7fffffffffffffffULL) >> 10);
        out[c + 11]  = ((in[w + 12] & 0x7fffffffffffffffULL) << 52) | ((in[w + 11] & 0x7fffffffffffffffULL) >> 11);
        out[c + 12]  = ((in[w + 13] & 0x7fffffffffffffffULL) << 51) | ((in[w + 12] & 0x7fffffffffffffffULL) >> 12);
        out[c + 13]  = ((in[w + 14] & 0x7fffffffffffffffULL) << 50) | ((in[w + 13] & 0x7fffffffffffffffULL) >> 13);
        out[c + 14]  = ((in[w + 15] & 0x7fffffffffffffffULL) << 49) | ((in[w + 14] & 0x7fffffffffffffffULL) >> 14);
        out[c + 15]  = ((in[w + 16] & 0x7fffffffffffffffULL) << 48) | ((in[w + 15] & 0x7fffffffffffffffULL) >> 15);
        out[c + 16]  = ((in[w + 17] & 0x7fffffffffffffffULL) << 47) | ((in[w + 16] & 0x7fffffffffffffffULL) >> 16);
        out[c + 17]  = ((in[w + 18] & 0x7fffffffffffffffULL) << 46) | ((in[w + 17] & 0x7fffffffffffffffULL) >> 17);
        out[c + 18]  = ((in[w + 19] & 0x7fffffffffffffffULL) << 45) | ((in[w + 18] & 0x7fffffffffffffffULL) >> 18);
        out[c + 19]  = ((in[w + 20] & 0x7fffffffffffffffULL) << 44) | ((in[w + 19] & 0x7fffffffffffffffULL) >> 19);
        out[c + 20]  = ((in[w + 21] & 0x7fffffffffffffffULL) << 43) | ((in[w + 20] & 0x7fffffffffffffffULL) >> 20);
        out[c + 21]  = ((in[w + 22] & 0x7fffffffffffffffULL) << 42) | ((in[w + 21] & 0x7fffffffffffffffULL) >> 21);
        out[c + 22]  = ((in[w + 23] & 0x7fffffffffffffffULL) << 41) | ((in[w + 22] & 0x7fffffffffffffffULL) >> 22);
        out[c + 23]  = ((in[w + 24] & 0x7fffffffffffffffULL) << 40) | ((in[w + 23] & 0x7fffffffffffffffULL) >> 23);
        out[c + 24]  = ((in[w + 25] & 0x7fffffffffffffffULL) << 39) | ((in[w + 24] & 0x7fffffffffffffffULL) >> 24);
        out[c + 25]  = ((in[w + 26] & 0x7fffffffffffffffULL) << 38) | ((in[w + 25] & 0x7fffffffffffffffULL) >> 25);
        out[c + 26]  = ((in[w + 27] & 0x7fffffffffffffffULL) << 37) | ((in[w + 26] & 0x7fffffffffffffffULL) >> 26);
        out[c + 27]  = ((in[w + 28] & 0x7fffffffffffffffULL) << 36) | ((in[w + 27] & 0x7fffffffffffffffULL) >> 27);
        out[c + 28]  = ((in[w + 29] & 0x7fffffffffffffffULL) << 35) | ((in[w + 28] & 0x7fffffffffffffffULL) >> 28);
        out[c + 29]  = ((in[w + 30] & 0x7fffffffffffffffULL) << 34) | ((in[w + 29] & 0x7fffffffffffffffULL) >> 29);
        out[c + 30]  = ((in[w + 31] & 0x7fffffffffffffffULL) << 33) | ((in[w + 30] & 0x7fffffffffffffffULL) >> 30);
        out[c + 31]  = ((in[w + 32] & 0x7fffffffffffffffULL) << 32) | ((in[w + 31] & 0x7fffffffffffffffULL) >> 31);
        out[c + 32]  = ((in[w + 33] & 0x7fffffffffffffffULL) << 31) | ((in[w + 32] & 0x7fffffffffffffffULL) >> 32);
        out[c + 33]  = ((in[w + 34] & 0x7fffffffffffffffULL) << 30) | ((in[w + 33] & 0x7fffffffffffffffULL) >> 33);
        out[c + 34]  = ((in[w + 35] & 0x7fffffffffffffffULL) << 29) | ((in[w + 34] & 0x7fffffffffffffffULL) >> 34);
        out[c + 35]  = ((in[w + 36] & 0x7fffffffffffffffULL) << 28) | ((in[w + 35] & 0x7fffffffffffffffULL) >> 35);
        out[c + 36]  = ((in[w + 37] & 0x7fffffffffffffffULL) << 27) | ((in[w + 36] & 0x7fffffffffffffffULL) >> 36);
        out[c + 37]  = ((in[w + 38] & 0x7fffffffffffffffULL) << 26) | ((in[w + 37] & 0x7fffffffffffffffULL) >> 37);
        out[c + 38]  = ((in[w + 39] & 0x7fffffffffffffffULL) << 25) | ((in[w + 38] & 0x7fffffffffffffffULL) >> 38);
        out[c + 39]  = ((in[w + 40] & 0x7fffffffffffffffULL) << 24) | ((in[w + 39] & 0x7fffffffffffffffULL) >> 39);
        out[c + 40]  = ((in[w + 41] & 0x7fffffffffffffffULL) << 23) | ((in[w + 40] & 0x7fffffffffffffffULL) >> 40);
        out[c + 41]  = ((in[w + 42] & 0x7fffffffffffffffULL) << 22) | ((in[w + 41] & 0x7fffffffffffffffULL) >> 41);
        out[c + 42]  = ((in[w + 43] & 0x7fffffffffffffffULL) << 21) | ((in[w + 42] & 0x7fffffffffffffffULL) >> 42);
        out[c + 43]  = ((in[w + 44] & 0x7fffffffffffffffULL) << 20) | ((in[w + 43] & 0x7fffffffffffffffULL) >> 43);
        out[c + 44]  = ((in[w + 45] & 0x7fffffffffffffffULL) << 19) | ((in[w + 44] & 0x7fffffffffffffffULL) >> 44);
        out[c + 45]  = ((in[w + 46] & 0x7fffffffffffffffULL) << 18) | ((in[w + 45] & 0x7fffffffffffffffULL) >> 45);
        out[c + 46]  = ((in[w + 47] & 0x7fffffffffffffffULL) << 17) | ((in[w + 46] & 0x7fffffffffffffffULL) >> 46);
        out[c + 47]  = ((in[w + 48] & 0x7fffffffffffffffULL) << 16) | ((in[w + 47] & 0x7fffffffffffffffULL) >> 47);
        out[c + 48]  = ((in[w + 49] & 0x7fffffffffffffffULL) << 15) | ((in[w + 48] & 0x7fffffffffffffffULL) >> 48);
        out[c + 49]  = ((in[w + 50] & 0x7fffffffffffffffULL) << 14) | ((in[w + 49] & 0x7fffffffffffffffULL) >> 49);
        out[c + 50]  = ((in[w + 51] & 0x7fffffffffffffffULL) << 13) | ((in[w + 50] & 0x7fffffffffffffffULL) >> 50);
        out[c + 51]  = ((in[w + 52] & 0x7fffffffffffffffULL) << 12) | ((in[w + 51] & 0x7fffffffffffffffULL) >> 51);
        out[c + 52]  = ((in[w + 53] & 0x7fffffffffffffffULL) << 11) | ((in[w + 52] & 0x7fffffffffffffffULL) >> 52);
        out[c + 53]  = ((in[w + 54] & 0x7fffffffffffffffULL) << 10) | ((in[w + 53] & 0x7fffffffffffffffULL) >> 53);
        out[c + 54]  = ((in[w + 55] & 0x7fffffffffffffffULL) <<  9) | ((in[w + 54] & 0x7fffffffffffffffULL) >> 54);
        out[c + 55]  = ((in[w + 56] & 0x7fffffffffffffffULL) <<  8) | ((in[w + 55] & 0x7fffffffffffffffULL) >> 55);
        out[c + 56]  = ((in[w + 57] & 0x7fffffffffffffffULL) <<  7) | ((in[w + 56] & 0x7fffffffffffffffULL) >> 56);
        out[c + 57]  = ((in[w + 58] & 0x7fffffffffffffffULL) <<  6) | ((in[w + 57] & 0x7fffffffffffffffULL) >> 57);
        out[c + 58]  = ((in[w + 59] & 0x7fffffffffffffffULL) <<  5) | ((in[w + 58] & 0x7fffffffffffffffULL) >> 58);
        out[c + 59]  = ((in[w + 60] & 0x7fffffffffffffffULL) <<  4) | ((in[w + 59] & 0x7fffffffffffffffULL) >> 59);
        out[c + 60]  = ((in[w + 61] & 0x7fffffffffffffffULL) <<  3) | ((in[w + 60] & 0x7fffffffffffffffULL) >> 60);
        out[c + 61]  = ((in[w + 62] & 0x7fffffffffffffffULL) <<  2) | ((in[w + 61] & 0x7fffffffffffffffULL) >> 61);
        out[c + 62]  = ((in[w + 63] & 0x7fffffffffffffffULL) <<  1) | ((in[w + 62] & 0x7fffffffffffffffULL) >> 62);
    }
}
void
unpack_1_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 1) {
        out[w +  0] = ((in[c + 0] & 0x0000000000000001ULL) >>  0);
        out[w +  1] = ((in[c + 0] & 0x0000000000000002ULL) >>  1);
        out[w +  2] = ((in[c + 0] & 0x0000000000000004ULL) >>  2);
        out[w +  3] = ((in[c + 0] & 0x0000000000000008ULL) >>  3);
        out[w +  4] = ((in[c + 0] & 0x0000000000000010ULL) >>  4);
        out[w +  5] = ((in[c + 0] & 0x0000000000000020ULL) >>  5);
        out[w +  6] = ((in[c + 0] & 0x0000000000000040ULL) >>  6);
        out[w +  7] = ((in[c + 0] & 0x0000000000000080ULL) >>  7);
        out[w +  8] = ((in[c + 0] & 0x0000000000000100ULL) >>  8);
        out[w +  9] = ((in[c + 0] & 0x0000000000000200ULL) >>  9);
        out[w + 10] = ((in[c + 0] & 0x0000000000000400ULL) >> 10);
        out[w + 11] = ((in[c + 0] & 0x0000000000000800ULL) >> 11);
        out[w + 12] = ((in[c + 0] & 0x0000000000001000ULL) >> 12);
        out[w + 13] = ((in[c + 0] & 0x0000000000002000ULL) >> 13);
        out[w + 14] = ((in[c + 0] & 0x0000000000004000ULL) >> 14);
        out[w + 15] = ((in[c + 0] & 0x0000000000008000ULL) >> 15);
        out[w + 16] = ((in[c + 0] & 0x0000000000010000ULL) >> 16);
        out[w + 17] = ((in[c + 0] & 0x0000000000020000ULL) >> 17);
        out[w + 18] = ((in[c + 0] & 0x0000000000040000ULL) >> 18);
        out[w + 19] = ((in[c + 0] & 0x0000000000080000ULL) >> 19);
        out[w + 20] = ((in[c + 0] & 0x0000000000100000ULL) >> 20);
        out[w + 21] = ((in[c + 0] & 0x0000000000200000ULL) >> 21);
        out[w + 22] = ((in[c + 0] & 0x0000000000400000ULL) >> 22);
        out[w + 23] = ((in[c + 0] & 0x0000000000800000ULL) >> 23);
        out[w + 24] = ((in[c + 0] & 0x0000000001000000ULL) >> 24);
        out[w + 25] = ((in[c + 0] & 0x0000000002000000ULL) >> 25);
        out[w + 26] = ((in[c + 0] & 0x0000000004000000ULL) >> 26);
        out[w + 27] = ((in[c + 0] & 0x0000000008000000ULL) >> 27);
        out[w + 28] = ((in[c + 0] & 0x0000000010000000ULL) >> 28);
        out[w + 29] = ((in[c + 0] & 0x0000000020000000ULL) >> 29);
        out[w + 30] = ((in[c + 0] & 0x0000000040000000ULL) >> 30);
        out[w + 31] = ((in[c + 0] & 0x0000000080000000ULL) >> 31);
        out[w + 32] = ((in[c + 0] & 0x0000000100000000ULL) >> 32);
        out[w + 33] = ((in[c + 0] & 0x0000000200000000ULL) >> 33);
        out[w + 34] = ((in[c + 0] & 0x0000000400000000ULL) >> 34);
        out[w + 35] = ((in[c + 0] & 0x0000000800000000ULL) >> 35);
        out[w + 36] = ((in[c + 0] & 0x0000001000000000ULL) >> 36);
        out[w + 37] = ((in[c + 0] & 0x0000002000000000ULL) >> 37);
        out[w + 38] = ((in[c + 0] & 0x0000004000000000ULL) >> 38);
        out[w + 39] = ((in[c + 0] & 0x0000008000000000ULL) >> 39);
        out[w + 40] = ((in[c + 0] & 0x0000010000000000ULL) >> 40);
        out[w + 41] = ((in[c + 0] & 0x0000020000000000ULL) >> 41);
        out[w + 42] = ((in[c + 0] & 0x0000040000000000ULL) >> 42);
        out[w + 43] = ((in[c + 0] & 0x0000080000000000ULL) >> 43);
        out[w + 44] = ((in[c + 0] & 0x0000100000000000ULL) >> 44);
        out[w + 45] = ((in[c + 0] & 0x0000200000000000ULL) >> 45);
        out[w + 46] = ((in[c + 0] & 0x0000400000000000ULL) >> 46);
        out[w + 47] = ((in[c + 0] & 0x0000800000000000ULL) >> 47);
        out[w + 48] = ((in[c + 0] & 0x0001000000000000ULL) >> 48);
        out[w + 49] = ((in[c + 0] & 0x0002000000000000ULL) >> 49);
        out[w + 50] = ((in[c + 0] & 0x0004000000000000ULL) >> 50);
        out[w + 51] = ((in[c + 0] & 0x0008000000000000ULL) >> 51);
        out[w + 52] = ((in[c + 0] & 0x0010000000000000ULL) >> 52);
        out[w + 53] = ((in[c + 0] & 0x0020000000000000ULL) >> 53);
        out[w + 54] = ((in[c + 0] & 0x0040000000000000ULL) >> 54);
        out[w + 55] = ((in[c + 0] & 0x0080000000000000ULL) >> 55);
        out[w + 56] = ((in[c + 0] & 0x0100000000000000ULL) >> 56);
        out[w + 57] = ((in[c + 0] & 0x0200000000000000ULL) >> 57);
        out[w + 58] = ((in[c + 0] & 0x0400000000000000ULL) >> 58);
        out[w + 59] = ((in[c + 0] & 0x0800000000000000ULL) >> 59);
        out[w + 60] = ((in[c + 0] & 0x1000000000000000ULL) >> 60);
        out[w + 61] = ((in[c + 0] & 0x2000000000000000ULL) >> 61);
        out[w + 62] = ((in[c + 0] & 0x4000000000000000ULL) >> 62);
        out[w + 63] = ((in[c + 0] & 0x8000000000000000ULL) >> 63);
    }
}
void
unpack_2_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 1) {
        out[w +  0] = ((in[c + 0] & 0x0000000000000003ULL) >>  0);
        out[w +  1] = ((in[c + 0] & 0x000000000000000cULL) >>  2);
        out[w +  2] = ((in[c + 0] & 0x0000000000000030ULL) >>  4);
        out[w +  3] = ((in[c + 0] & 0x00000000000000c0ULL) >>  6);
        out[w +  4] = ((in[c + 0] & 0x0000000000000300ULL) >>  8);
        out[w +  5] = ((in[c + 0] & 0x0000000000000c00ULL) >> 10);
        out[w +  6] = ((in[c + 0] & 0x0000000000003000ULL) >> 12);
        out[w +  7] = ((in[c + 0] & 0x000000000000c000ULL) >> 14);
        out[w +  8] = ((in[c + 0] & 0x0000000000030000ULL) >> 16);
        out[w +  9] = ((in[c + 0] & 0x00000000000c0000ULL) >> 18);
        out[w + 10] = ((in[c + 0] & 0x0000000000300000ULL) >> 20);
        out[w + 11] = ((in[c + 0] & 0x0000000000c00000ULL) >> 22);
        out[w + 12] = ((in[c + 0] & 0x0000000003000000ULL) >> 24);
        out[w + 13] = ((in[c + 0] & 0x000000000c000000ULL) >> 26);
        out[w + 14] = ((in[c + 0] & 0x0000000030000000ULL) >> 28);
        out[w + 15] = ((in[c + 0] & 0x00000000c0000000ULL) >> 30);
        out[w + 16] = ((in[c + 0] & 0x0000000300000000ULL) >> 32);
        out[w + 17] = ((in[c + 0] & 0x0000000c00000000ULL) >> 34);
        out[w + 18] = ((in[c + 0] & 0x0000003000000000ULL) >> 36);
        out[w + 19] = ((in[c + 0] & 0x000000c000000000ULL) >> 38);
        out[w + 20] = ((in[c + 0] & 0x0000030000000000ULL) >> 40);
        out[w + 21] = ((in[c + 0] & 0x00000c0000000000ULL) >> 42);
        out[w + 22] = ((in[c + 0] & 0x0000300000000000ULL) >> 44);
        out[w + 23] = ((in[c + 0] & 0x0000c00000000000ULL) >> 46);
        out[w + 24] = ((in[c + 0] & 0x0003000000000000ULL) >> 48);
        out[w + 25] = ((in[c + 0] & 0x000c000000000000ULL) >> 50);
        out[w + 26] = ((in[c + 0] & 0x0030000000000000ULL) >> 52);
        out[w + 27] = ((in[c + 0] & 0x00c0000000000000ULL) >> 54);
        out[w + 28] = ((in[c + 0] & 0x0300000000000000ULL) >> 56);
        out[w + 29] = ((in[c + 0] & 0x0c00000000000000ULL) >> 58);
        out[w + 30] = ((in[c + 0] & 0x3000000000000000ULL) >> 60);
        out[w + 31] = ((in[c + 0] & 0xc000000000000000ULL) >> 62);
    }
}
void
unpack_3_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 3) {
        out[w +  0] = ((in[c + 0] & 0x0000000000000007ULL) >>  0);
        out[w +  1] = ((in[c + 0] & 0x0000000000000038ULL) >>  3);
        out[w +  2] = ((in[c + 0] & 0x00000000000001c0ULL) >>  6);
        out[w +  3] = ((in[c + 0] & 0x0000000000000e00ULL) >>  9);
        out[w +  4] = ((in[c + 0] & 0x0000000000007000ULL) >> 12);
        out[w +  5] = ((in[c + 0] & 0x0000000000038000ULL) >> 15);
        out[w +  6] = ((in[c + 0] & 0x00000000001c0000ULL) >> 18);
        out[w +  7] = ((in[c + 0] & 0x0000000000e00000ULL) >> 21);
        out[w +  8] = ((in[c + 0] & 0x0000000007000000ULL) >> 24);
        out[w +  9] = ((in[c + 0] & 0x0000000038000000ULL) >> 27);
        out[w + 10] = ((in[c + 0] & 0x00000001c0000000ULL) >> 30);
        out[w + 11] = ((in[c + 0] & 0x0000000e00000000ULL) >> 33);
        out[w + 12] = ((in[c + 0] & 0x0000007000000000ULL) >> 36);
        out[w + 13] = ((in[c + 0] & 0x0000038000000000ULL) >> 39);
        out[w + 14] = ((in[c + 0] & 0x00001c0000000000ULL) >> 42);
        out[w + 15] = ((in[c + 0] & 0x0000e00000000000ULL) >> 45);
        out[w + 16] = ((in[c + 0] & 0x0007000000000000ULL) >> 48);
        out[w + 17] = ((in[c + 0] & 0x0038000000000000ULL) >> 51);
        out[w + 18] = ((in[c + 0] & 0x01c0000000000000ULL) >> 54);
        out[w + 19] = ((in[c + 0] & 0x0e00000000000000ULL) >> 57);
        out[w + 20] = ((in[c + 0] & 0x7000000000000000ULL) >> 60);
        out[w + 21] = (((in[c + 0] & 0x8000000000000000ULL) >> 63) | (in[c + 1] & 0x0000000000000003ULL) << 1);
        out[w + 22] = ((in[c + 1] & 0x000000000000001cULL) >>  2);
        out[w + 23] = ((in[c + 1] & 0x00000000000000e0ULL) >>  5);
        out[w + 24] = ((in[c + 1] & 0x0000000000000700ULL) >>  8);
        out[w + 25] = ((in[c + 1] & 0x0000000000003800ULL) >> 11);
        out[w + 26] = ((in[c + 1] & 0x000000000001c000ULL) >> 14);
        out[w + 27] = ((in[c + 1] & 0x00000000000e0000ULL) >> 17);
        out[w + 28] = ((in[c + 1] & 0x0000000000700000ULL) >> 20);
        out[w + 29] = ((in[c + 1] & 0x0000000003800000ULL) >> 23);
        out[w + 30] = ((in[c + 1] & 0x000000001c000000ULL) >> 26);
        out[w + 31] = ((in[c + 1] & 0x00000000e0000000ULL) >> 29);
        out[w + 32] = ((in[c + 1] & 0x0000000700000000ULL) >> 32);
        out[w + 33] = ((in[c + 1] & 0x0000003800000000ULL) >> 35);
        out[w + 34] = ((in[c + 1] & 0x000001c000000000ULL) >> 38);
        out[w + 35] = ((in[c + 1] & 0x00000e0000000000ULL) >> 41);
        out[w + 36] = ((in[c + 1] & 0x0000700000000000ULL) >> 44);
        out[w + 37] = ((in[c + 1] & 0x0003800000000000ULL) >> 47);
        out[w + 38] = ((in[c + 1] & 0x001c000000000000ULL) >> 50);
        out[w + 39] = ((in[c + 1] & 0x00e0000000000000ULL) >> 53);
        out[w + 40] = ((in[c + 1] & 0x0700000000000000ULL) >> 56);
        out[w + 41] = ((in[c + 1] & 0x3800000000000000ULL) >> 59);
        out[w + 42] = (((in[c + 1] & 0xc000000000000000ULL) >> 62) | (in[c + 2] & 0x0000000000000001ULL) << 2);
        out[w + 43] = ((in[c + 2] & 0x000000000000000eULL) >>  1);
        out[w + 44] = ((in[c + 2] & 0x0000000000000070ULL) >>  4);
        out[w + 45] = ((in[c + 2] & 0x0000000000000380ULL) >>  7);
        out[w + 46] = ((in[c + 2] & 0x0000000000001c00ULL) >> 10);
        out[w + 47] = ((in[c + 2] & 0x000000000000e000ULL) >> 13);
        out[w + 48] = ((in[c + 2] & 0x0000000000070000ULL) >> 16);
        out[w + 49] = ((in[c + 2] & 0x0000000000380000ULL) >> 19);
        out[w + 50] = ((in[c + 2] & 0x0000000001c00000ULL) >> 22);
        out[w + 51] = ((in[c + 2] & 0x000000000e000000ULL) >> 25);
        out[w + 52] = ((in[c + 2] & 0x0000000070000000ULL) >> 28);
        out[w + 53] = ((in[c + 2] & 0x0000000380000000ULL) >> 31);
        out[w + 54] = ((in[c + 2] & 0x0000001c00000000ULL) >> 34);
        out[w + 55] = ((in[c + 2] & 0x000000e000000000ULL) >> 37);
        out[w + 56] = ((in[c + 2] & 0x0000070000000000ULL) >> 40);
        out[w + 57] = ((in[c + 2] & 0x0000380000000000ULL) >> 43);
        out[w + 58] = ((in[c + 2] & 0x0001c00000000000ULL) >> 46);
        out[w + 59] = ((in[c + 2] & 0x000e000000000000ULL) >> 49);
        out[w + 60] = ((in[c + 2] & 0x0070000000000000ULL) >> 52);
        out[w + 61] = ((in[c + 2] & 0x0380000000000000ULL) >> 55);
        out[w + 62] = ((in[c + 2] & 0x1c00000000000000ULL) >> 58);
        out[w + 63] = ((in[c + 2] & 0xe000000000000000ULL) >> 61);
    }
}
void
unpack_4_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 16, c += 1) {
        out[w +  0] = ((in[c + 0] & 0x000000000000000fULL) >>  0);
        out[w +  1] = ((in[c + 0] & 0x00000000000000f0ULL) >>  4);
        out[w +  2] = ((in[c + 0] & 0x0000000000000f00ULL) >>  8);
        out[w +  3] = ((in[c + 0] & 0x000000000000f000ULL) >> 12);
        out[w +  4] = ((in[c + 0] & 0x00000000000f0000ULL) >> 16);
        out[w +  5] = ((in[c + 0] & 0x0000000000f00000ULL) >> 20);
        out[w +  6] = ((in[c + 0] & 0x000000000f000000ULL) >> 24);
        out[w +  7] = ((in[c + 0] & 0x00000000f0000000ULL) >> 28);
        out[w +  8] = ((in[c + 0] & 0x0000000f00000000ULL) >> 32);
        out[w +  9] = ((in[c + 0] & 0x000000f000000000ULL) >> 36);
        out[w + 10] = ((in[c + 0] & 0x00000f0000000000ULL) >> 40);
        out[w + 11] = ((in[c + 0] & 0x0000f00000000000ULL) >> 44);
        out[w + 12] = ((in[c + 0] & 0x000f000000000000ULL) >> 48);
        out[w + 13] = ((in[c + 0] & 0x00f0000000000000ULL) >> 52);
        out[w + 14] = ((in[c + 0] & 0x0f00000000000000ULL) >> 56);
        out[w + 15] = ((in[c + 0] & 0xf000000000000000ULL) >> 60);
    }
}
void
unpack_5_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 5) {
        out[w +  0] = ((in[c + 0] & 0x000000000000001fULL) >>  0);
        out[w +  1] = ((in[c + 0] & 0x00000000000003e0ULL) >>  5);
        out[w +  2] = ((in[c + 0] & 0x0000000000007c00ULL) >> 10);
        out[w +  3] = ((in[c + 0] & 0x00000000000f8000ULL) >> 15);
        out[w +  4] = ((in[c + 0] & 0x0000000001f00000ULL) >> 20);
        out[w +  5] = ((in[c + 0] & 0x000000003e000000ULL) >> 25);
        out[w +  6] = ((in[c + 0] & 0x00000007c0000000ULL) >> 30);
        out[w +  7] = ((in[c + 0] & 0x000000f800000000ULL) >> 35);
        out[w +  8] = ((in[c + 0] & 0x00001f0000000000ULL) >> 40);
        out[w +  9] = ((in[c + 0] & 0x0003e00000000000ULL) >> 45);
        out[w + 10] = ((in[c + 0] & 0x007c000000000000ULL) >> 50);
        out[w + 11] = ((in[c + 0] & 0x0f80000000000000ULL) >> 55);
        out[w + 12] = (((in[c + 0] & 0xf000000000000000ULL) >> 60) | (in[c + 1] & 0x0000000000000001ULL) << 4);
        out[w + 13] = ((in[c + 1] & 0x000000000000003eULL) >>  1);
        out[w + 14] = ((in[c + 1] & 0x00000000000007c0ULL) >>  6);
        out[w + 15] = ((in[c + 1] & 0x000000000000f800ULL) >> 11);
        out[w + 16] = ((in[c + 1] & 0x00000000001f0000ULL) >> 16);
        out[w + 17] = ((in[c + 1] & 0x0000000003e00000ULL) >> 21);
        out[w + 18] = ((in[c + 1] & 0x000000007c000000ULL) >> 26);
        out[w + 19] = ((in[c + 1] & 0x0000000f80000000ULL) >> 31);
        out[w + 20] = ((in[c + 1] & 0x000001f000000000ULL) >> 36);
        out[w + 21] = ((in[c + 1] & 0x00003e0000000000ULL) >> 41);
        out[w + 22] = ((in[c + 1] & 0x0007c00000000000ULL) >> 46);
        out[w + 23] = ((in[c + 1] & 0x00f8000000000000ULL) >> 51);
        out[w + 24] = ((in[c + 1] & 0x1f00000000000000ULL) >> 56);
        out[w + 25] = (((in[c + 1] & 0xe000000000000000ULL) >> 61) | (in[c + 2] & 0x0000000000000003ULL) << 3);
        out[w + 26] = ((in[c + 2] & 0x000000000000007cULL) >>  2);
        out[w + 27] = ((in[c + 2] & 0x0000000000000f80ULL) >>  7);
        out[w + 28] = ((in[c + 2] & 0x000000000001f000ULL) >> 12);
        out[w + 29] = ((in[c + 2] & 0x00000000003e0000ULL) >> 17);
        out[w + 30] = ((in[c + 2] & 0x0000000007c00000ULL) >> 22);
        out[w + 31] = ((in[c + 2] & 0x00000000f8000000ULL) >> 27);
        out[w + 32] = ((in[c + 2] & 0x0000001f00000000ULL) >> 32);
        out[w + 33] = ((in[c + 2] & 0x000003e000000000ULL) >> 37);
        out[w + 34] = ((in[c + 2] & 0x00007c0000000000ULL) >> 42);
        out[w + 35] = ((in[c + 2] & 0x000f800000000000ULL) >> 47);
        out[w + 36] = ((in[c + 2] & 0x01f0000000000000ULL) >> 52);
        out[w + 37] = ((in[c + 2] & 0x3e00000000000000ULL) >> 57);
        out[w + 38] = (((in[c + 2] & 0xc000000000000000ULL) >> 62) | (in[c + 3] & 0x0000000000000007ULL) << 2);
        out[w + 39] = ((in[c + 3] & 0x00000000000000f8ULL) >>  3);
        out[w + 40] = ((in[c + 3] & 0x0000000000001f00ULL) >>  8);
        out[w + 41] = ((in[c + 3] & 0x000000000003e000ULL) >> 13);
        out[w + 42] = ((in[c + 3] & 0x00000000007c0000ULL) >> 18);
        out[w + 43] = ((in[c + 3] & 0x000000000f800000ULL) >> 23);
        out[w + 44] = ((in[c + 3] & 0x00000001f0000000ULL) >> 28);
        out[w + 45] = ((in[c + 3] & 0x0000003e00000000ULL) >> 33);
        out[w + 46] = ((in[c + 3] & 0x000007c000000000ULL) >> 38);
        out[w + 47] = ((in[c + 3] & 0x0000f80000000000ULL) >> 43);
        out[w + 48] = ((in[c + 3] & 0x001f000000000000ULL) >> 48);
        out[w + 49] = ((in[c + 3] & 0x03e0000000000000ULL) >> 53);
        out[w + 50] = ((in[c + 3] & 0x7c00000000000000ULL) >> 58);
        out[w + 51] = (((in[c + 3] & 0x8000000000000000ULL) >> 63) | (in[c + 4] & 0x000000000000000fULL) << 1);
        out[w + 52] = ((in[c + 4] & 0x00000000000001f0ULL) >>  4);
        out[w + 53] = ((in[c + 4] & 0x0000000000003e00ULL) >>  9);
        out[w + 54] = ((in[c + 4] & 0x000000000007c000ULL) >> 14);
        out[w + 55] = ((in[c + 4] & 0x0000000000f80000ULL) >> 19);
        out[w + 56] = ((in[c + 4] & 0x000000001f000000ULL) >> 24);
        out[w + 57] = ((in[c + 4] & 0x00000003e0000000ULL) >> 29);
        out[w + 58] = ((in[c + 4] & 0x0000007c00000000ULL) >> 34);
        out[w + 59] = ((in[c + 4] & 0x00000f8000000000ULL) >> 39);
        out[w + 60] = ((in[c + 4] & 0x0001f00000000000ULL) >> 44);
        out[w + 61] = ((in[c + 4] & 0x003e000000000000ULL) >> 49);
        out[w + 62] = ((in[c + 4] & 0x07c0000000000000ULL) >> 54);
        out[w + 63] = ((in[c + 4] & 0xf800000000000000ULL) >> 59);
    }
}
void
unpack_6_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 3) {
        out[w +  0] = ((in[c + 0] & 0x000000000000003fULL) >>  0);
        out[w +  1] = ((in[c + 0] & 0x0000000000000fc0ULL) >>  6);
        out[w +  2] = ((in[c + 0] & 0x000000000003f000ULL) >> 12);
        out[w +  3] = ((in[c + 0] & 0x0000000000fc0000ULL) >> 18);
        out[w +  4] = ((in[c + 0] & 0x000000003f000000ULL) >> 24);
        out[w +  5] = ((in[c + 0] & 0x0000000fc0000000ULL) >> 30);
        out[w +  6] = ((in[c + 0] & 0x000003f000000000ULL) >> 36);
        out[w +  7] = ((in[c + 0] & 0x0000fc0000000000ULL) >> 42);
        out[w +  8] = ((in[c + 0] & 0x003f000000000000ULL) >> 48);
        out[w +  9] = ((in[c + 0] & 0x0fc0000000000000ULL) >> 54);
        out[w + 10] = (((in[c + 0] & 0xf000000000000000ULL) >> 60) | (in[c + 1] & 0x0000000000000003ULL) << 4);
        out[w + 11] = ((in[c + 1] & 0x00000000000000fcULL) >>  2);
        out[w + 12] = ((in[c + 1] & 0x0000000000003f00ULL) >>  8);
        out[w + 13] = ((in[c + 1] & 0x00000000000fc000ULL) >> 14);
        out[w + 14] = ((in[c + 1] & 0x0000000003f00000ULL) >> 20);
        out[w + 15] = ((in[c + 1] & 0x00000000fc000000ULL) >> 26);
        out[w + 16] = ((in[c + 1] & 0x0000003f00000000ULL) >> 32);
        out[w + 17] = ((in[c + 1] & 0x00000fc000000000ULL) >> 38);
        out[w + 18] = ((in[c + 1] & 0x0003f00000000000ULL) >> 44);
        out[w + 19] = ((in[c + 1] & 0x00fc000000000000ULL) >> 50);
        out[w + 20] = ((in[c + 1] & 0x3f00000000000000ULL) >> 56);
        out[w + 21] = (((in[c + 1] & 0xc000000000000000ULL) >> 62) | (in[c + 2] & 0x000000000000000fULL) << 2);
        out[w + 22] = ((in[c + 2] & 0x00000000000003f0ULL) >>  4);
        out[w + 23] = ((in[c + 2] & 0x000000000000fc00ULL) >> 10);
        out[w + 24] = ((in[c + 2] & 0x00000000003f0000ULL) >> 16);
        out[w + 25] = ((in[c + 2] & 0x000000000fc00000ULL) >> 22);
        out[w + 26] = ((in[c + 2] & 0x00000003f0000000ULL) >> 28);
        out[w + 27] = ((in[c + 2] & 0x000000fc00000000ULL) >> 34);
        out[w + 28] = ((in[c + 2] & 0x00003f0000000000ULL) >> 40);
        out[w + 29] = ((in[c + 2] & 0x000fc00000000000ULL) >> 46);
        out[w + 30] = ((in[c + 2] & 0x03f0000000000000ULL) >> 52);
        out[w + 31] = ((in[c + 2] & 0xfc00000000000000ULL) >> 58);
    }
}
void
unpack_7_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 7) {
        out[w +  0] = ((in[c + 0] & 0x000000000000007fULL) >>  0);
        out[w +  1] = ((in[c + 0] & 0x0000000000003f80ULL) >>  7);
        out[w +  2] = ((in[c + 0] & 0x00000000001fc000ULL) >> 14);
        out[w +  3] = ((in[c + 0] & 0x000000000fe00000ULL) >> 21);
        out[w +  4] = ((in[c + 0] & 0x00000007f0000000ULL) >> 28);
        out[w +  5] = ((in[c + 0] & 0x000003f800000000ULL) >> 35);
        out[w +  6] = ((in[c + 0] & 0x0001fc0000000000ULL) >> 42);
        out[w +  7] = ((in[c + 0] & 0x00fe000000000000ULL) >> 49);
        out[w +  8] = ((in[c + 0] & 0x7f00000000000000ULL) >> 56);
        out[w +  9] = (((in[c + 0] & 0x8000000000000000ULL) >> 63) | (in[c + 1] & 0x000000000000003fULL) << 1);
        out[w + 10] = ((in[c + 1] & 0x0000000000001fc0ULL) >>  6);
        out[w + 11] = ((in[c + 1] & 0x00000000000fe000ULL) >> 13);
        out[w + 12] = ((in[c + 1] & 0x0000000007f00000ULL) >> 20);
        out[w + 13] = ((in[c + 1] & 0x00000003f8000000ULL) >> 27);
        out[w + 14] = ((in[c + 1] & 0x000001fc00000000ULL) >> 34);
        out[w + 15] = ((in[c + 1] & 0x0000fe0000000000ULL) >> 41);
        out[w + 16] = ((in[c + 1] & 0x007f000000000000ULL) >> 48);
        out[w + 17] = ((in[c + 1] & 0x3f80000000000000ULL) >> 55);
        out[w + 18] = (((in[c + 1] & 0xc000000000000000ULL) >> 62) | (in[c + 2] & 0x000000000000001fULL) << 2);
        out[w + 19] = ((in[c + 2] & 0x0000000000000fe0ULL) >>  5);
        out[w + 20] = ((in[c + 2] & 0x000000000007f000ULL) >> 12);
        out[w + 21] = ((in[c + 2] & 0x0000000003f80000ULL) >> 19);
        out[w + 22] = ((in[c + 2] & 0x00000001fc000000ULL) >> 26);
        out[w + 23] = ((in[c + 2] & 0x000000fe00000000ULL) >> 33);
        out[w + 24] = ((in[c + 2] & 0x00007f0000000000ULL) >> 40);
        out[w + 25] = ((in[c + 2] & 0x003f800000000000ULL) >> 47);
        out[w + 26] = ((in[c + 2] & 0x1fc0000000000000ULL) >> 54);
        out[w + 27] = (((in[c + 2] & 0xe000000000000000ULL) >> 61) | (in[c + 3] & 0x000000000000000fULL) << 3);
        out[w + 28] = ((in[c + 3] & 0x00000000000007f0ULL) >>  4);
        out[w + 29] = ((in[c + 3] & 0x000000000003f800ULL) >> 11);
        out[w + 30] = ((in[c + 3] & 0x0000000001fc0000ULL) >> 18);
        out[w + 31] = ((in[c + 3] & 0x00000000fe000000ULL) >> 25);
        out[w + 32] = ((in[c + 3] & 0x0000007f00000000ULL) >> 32);
        out[w + 33] = ((in[c + 3] & 0x00003f8000000000ULL) >> 39);
        out[w + 34] = ((in[c + 3] & 0x001fc00000000000ULL) >> 46);
        out[w + 35] = ((in[c + 3] & 0x0fe0000000000000ULL) >> 53);
        out[w + 36] = (((in[c + 3] & 0xf000000000000000ULL) >> 60) | (in[c + 4] & 0x0000000000000007ULL) << 4);
        out[w + 37] = ((in[c + 4] & 0x00000000000003f8ULL) >>  3);
        out[w + 38] = ((in[c + 4] & 0x000000000001fc00ULL) >> 10);
        out[w + 39] = ((in[c + 4] & 0x0000000000fe0000ULL) >> 17);
        out[w + 40] = ((in[c + 4] & 0x000000007f000000ULL) >> 24);
        out[w + 41] = ((in[c + 4] & 0x0000003f80000000ULL) >> 31);
        out[w + 42] = ((in[c + 4] & 0x00001fc000000000ULL) >> 38);
        out[w + 43] = ((in[c + 4] & 0x000fe00000000000ULL) >> 45);
        out[w + 44] = ((in[c + 4] & 0x07f0000000000000ULL) >> 52);
        out[w + 45] = (((in[c + 4] & 0xf800000000000000ULL) >> 59) | (in[c + 5] & 0x0000000000000003ULL) << 5);
        out[w + 46] = ((in[c + 5] & 0x00000000000001fcULL) >>  2);
        out[w + 47] = ((in[c + 5] & 0x000000000000fe00ULL) >>  9);
        out[w + 48] = ((in[c + 5] & 0x00000000007f0000ULL) >> 16);
        out[w + 49] = ((in[c + 5] & 0x000000003f800000ULL) >> 23);
        out[w + 50] = ((in[c + 5] & 0x0000001fc0000000ULL) >> 30);
        out[w + 51] = ((in[c + 5] & 0x00000fe000000000ULL) >> 37);
        out[w + 52] = ((in[c + 5] & 0x0007f00000000000ULL) >> 44);
        out[w + 53] = ((in[c + 5] & 0x03f8000000000000ULL) >> 51);
        out[w + 54] = (((in[c + 5] & 0xfc00000000000000ULL) >> 58) | (in[c + 6] & 0x0000000000000001ULL) << 6);
        out[w + 55] = ((in[c + 6] & 0x00000000000000feULL) >>  1);
        out[w + 56] = ((in[c + 6] & 0x0000000000007f00ULL) >>  8);
        out[w + 57] = ((in[c + 6] & 0x00000000003f8000ULL) >> 15);
        out[w + 58] = ((in[c + 6] & 0x000000001fc00000ULL) >> 22);
        out[w + 59] = ((in[c + 6] & 0x0000000fe0000000ULL) >> 29);
        out[w + 60] = ((in[c + 6] & 0x000007f000000000ULL) >> 36);
        out[w + 61] = ((in[c + 6] & 0x0003f80000000000ULL) >> 43);
        out[w + 62] = ((in[c + 6] & 0x01fc000000000000ULL) >> 50);
        out[w + 63] = ((in[c + 6] & 0xfe00000000000000ULL) >> 57);
    }
}
void
unpack_8_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 8, c += 1) {
        out[w + 0] = ((in[c + 0] & 0x00000000000000ffULL) >>  0);
        out[w + 1] = ((in[c + 0] & 0x000000000000ff00ULL) >>  8);
        out[w + 2] = ((in[c + 0] & 0x0000000000ff0000ULL) >> 16);
        out[w + 3] = ((in[c + 0] & 0x00000000ff000000ULL) >> 24);
        out[w + 4] = ((in[c + 0] & 0x000000ff00000000ULL) >> 32);
        out[w + 5] = ((in[c + 0] & 0x0000ff0000000000ULL) >> 40);
        out[w + 6] = ((in[c + 0] & 0x00ff000000000000ULL) >> 48);
        out[w + 7] = ((in[c + 0] & 0xff00000000000000ULL) >> 56);
    }
}
void
unpack_9_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 9) {
        out[w +  0] = ((in[c + 0] & 0x00000000000001ffULL) >>  0);
        out[w +  1] = ((in[c + 0] & 0x000000000003fe00ULL) >>  9);
        out[w +  2] = ((in[c + 0] & 0x0000000007fc0000ULL) >> 18);
        out[w +  3] = ((in[c + 0] & 0x0000000ff8000000ULL) >> 27);
        out[w +  4] = ((in[c + 0] & 0x00001ff000000000ULL) >> 36);
        out[w +  5] = ((in[c + 0] & 0x003fe00000000000ULL) >> 45);
        out[w +  6] = ((in[c + 0] & 0x7fc0000000000000ULL) >> 54);
        out[w +  7] = (((in[c + 0] & 0x8000000000000000ULL) >> 63) | (in[c + 1] & 0x00000000000000ffULL) << 1);
        out[w +  8] = ((in[c + 1] & 0x000000000001ff00ULL) >>  8);
        out[w +  9] = ((in[c + 1] & 0x0000000003fe0000ULL) >> 17);
        out[w + 10] = ((in[c + 1] & 0x00000007fc000000ULL) >> 26);
        out[w + 11] = ((in[c + 1] & 0x00000ff800000000ULL) >> 35);
        out[w + 12] = ((in[c + 1] & 0x001ff00000000000ULL) >> 44);
        out[w + 13] = ((in[c + 1] & 0x3fe0000000000000ULL) >> 53);
        out[w + 14] = (((in[c + 1] & 0xc000000000000000ULL) >> 62) | (in[c + 2] & 0x000000000000007fULL) << 2);
        out[w + 15] = ((in[c + 2] & 0x000000000000ff80ULL) >>  7);
        out[w + 16] = ((in[c + 2] & 0x0000000001ff0000ULL) >> 16);
        out[w + 17] = ((in[c + 2] & 0x00000003fe000000ULL) >> 25);
        out[w + 18] = ((in[c + 2] & 0x000007fc00000000ULL) >> 34);
        out[w + 19] = ((in[c + 2] & 0x000ff80000000000ULL) >> 43);
        out[w + 20] = ((in[c + 2] & 0x1ff0000000000000ULL) >> 52);
        out[w + 21] = (((in[c + 2] & 0xe000000000000000ULL) >> 61) | (in[c + 3] & 0x000000000000003fULL) << 3);
        out[w + 22] = ((in[c + 3] & 0x0000000000007fc0ULL) >>  6);
        out[w + 23] = ((in[c + 3] & 0x0000000000ff8000ULL) >> 15);
        out[w + 24] = ((in[c + 3] & 0x00000001ff000000ULL) >> 24);
        out[w + 25] = ((in[c + 3] & 0x000003fe00000000ULL) >> 33);
        out[w + 26] = ((in[c + 3] & 0x0007fc0000000000ULL) >> 42);
        out[w + 27] = ((in[c + 3] & 0x0ff8000000000000ULL) >> 51);
        out[w + 28] = (((in[c + 3] & 0xf000000000000000ULL) >> 60) | (in[c + 4] & 0x000000000000001fULL) << 4);
        out[w + 29] = ((in[c + 4] & 0x0000000000003fe0ULL) >>  5);
        out[w + 30] = ((in[c + 4] & 0x00000000007fc000ULL) >> 14);
        out[w + 31] = ((in[c + 4] & 0x00000000ff800000ULL) >> 23);
        out[w + 32] = ((in[c + 4] & 0x000001ff00000000ULL) >> 32);
        out[w + 33] = ((in[c + 4] & 0x0003fe0000000000ULL) >> 41);
        out[w + 34] = ((in[c + 4] & 0x07fc000000000000ULL) >> 50);
        out[w + 35] = (((in[c + 4] & 0xf800000000000000ULL) >> 59) | (in[c + 5] & 0x000000000000000fULL) << 5);
        out[w + 36] = ((in[c + 5] & 0x0000000000001ff0ULL) >>  4);
        out[w + 37] = ((in[c + 5] & 0x00000000003fe000ULL) >> 13);
        out[w + 38] = ((in[c + 5] & 0x000000007fc00000ULL) >> 22);
        out[w + 39] = ((in[c + 5] & 0x000000ff80000000ULL) >> 31);
        out[w + 40] = ((in[c + 5] & 0x0001ff0000000000ULL) >> 40);
        out[w + 41] = ((in[c + 5] & 0x03fe000000000000ULL) >> 49);
        out[w + 42] = (((in[c + 5] & 0xfc00000000000000ULL) >> 58) | (in[c + 6] & 0x0000000000000007ULL) << 6);
        out[w + 43] = ((in[c + 6] & 0x0000000000000ff8ULL) >>  3);
        out[w + 44] = ((in[c + 6] & 0x00000000001ff000ULL) >> 12);
        out[w + 45] = ((in[c + 6] & 0x000000003fe00000ULL) >> 21);
        out[w + 46] = ((in[c + 6] & 0x0000007fc0000000ULL) >> 30);
        out[w + 47] = ((in[c + 6] & 0x0000ff8000000000ULL) >> 39);
        out[w + 48] = ((in[c + 6] & 0x01ff000000000000ULL) >> 48);
        out[w + 49] = (((in[c + 6] & 0xfe00000000000000ULL) >> 57) | (in[c + 7] & 0x0000000000000003ULL) << 7);
        out[w + 50] = ((in[c + 7] & 0x00000000000007fcULL) >>  2);
        out[w + 51] = ((in[c + 7] & 0x00000000000ff800ULL) >> 11);
        out[w + 52] = ((in[c + 7] & 0x000000001ff00000ULL) >> 20);
        out[w + 53] = ((in[c + 7] & 0x0000003fe0000000ULL) >> 29);
        out[w + 54] = ((in[c + 7] & 0x00007fc000000000ULL) >> 38);
        out[w + 55] = ((in[c + 7] & 0x00ff800000000000ULL) >> 47);
        out[w + 56] = (((in[c + 7] & 0xff00000000000000ULL) >> 56) | (in[c + 8] & 0x0000000000000001ULL) << 8);
        out[w + 57] = ((in[c + 8] & 0x00000000000003feULL) >>  1);
        out[w + 58] = ((in[c + 8] & 0x000000000007fc00ULL) >> 10);
        out[w + 59] = ((in[c + 8] & 0x000000000ff80000ULL) >> 19);
        out[w + 60] = ((in[c + 8] & 0x0000001ff0000000ULL) >> 28);
        out[w + 61] = ((in[c + 8] & 0x00003fe000000000ULL) >> 37);
        out[w + 62] = ((in[c + 8] & 0x007fc00000000000ULL) >> 46);
        out[w + 63] = ((in[c + 8] & 0xff80000000000000ULL) >> 55);
    }
}
void
unpack_10_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 5) {
        out[w +  0] = ((in[c + 0] & 0x00000000000003ffULL) >>  0);
        out[w +  1] = ((in[c + 0] & 0x00000000000ffc00ULL) >> 10);
        out[w +  2] = ((in[c + 0] & 0x000000003ff00000ULL) >> 20);
        out[w +  3] = ((in[c + 0] & 0x000000ffc0000000ULL) >> 30);
        out[w +  4] = ((in[c + 0] & 0x0003ff0000000000ULL) >> 40);
        out[w +  5] = ((in[c + 0] & 0x0ffc000000000000ULL) >> 50);
        out[w +  6] = (((in[c + 0] & 0xf000000000000000ULL) >> 60) | (in[c + 1] & 0x000000000000003fULL) << 4);
        out[w +  7] = ((in[c + 1] & 0x000000000000ffc0ULL) >>  6);
        out[w +  8] = ((in[c + 1] & 0x0000000003ff0000ULL) >> 16);
        out[w +  9] = ((in[c + 1] & 0x0000000ffc000000ULL) >> 26);
        out[w + 10] = ((in[c + 1] & 0x00003ff000000000ULL) >> 36);
        out[w + 11] = ((in[c + 1] & 0x00ffc00000000000ULL) >> 46);
        out[w + 12] = (((in[c + 1] & 0xff00000000000000ULL) >> 56) | (in[c + 2] & 0x0000000000000003ULL) << 8);
        out[w + 13] = ((in[c + 2] & 0x0000000000000ffcULL) >>  2);
        out[w + 14] = ((in[c + 2] & 0x00000000003ff000ULL) >> 12);
        out[w + 15] = ((in[c + 2] & 0x00000000ffc00000ULL) >> 22);
        out[w + 16] = ((in[c + 2] & 0x000003ff00000000ULL) >> 32);
        out[w + 17] = ((in[c + 2] & 0x000ffc0000000000ULL) >> 42);
        out[w + 18] = ((in[c + 2] & 0x3ff0000000000000ULL) >> 52);
        out[w + 19] = (((in[c + 2] & 0xc000000000000000ULL) >> 62) | (in[c + 3] & 0x00000000000000ffULL) << 2);
        out[w + 20] = ((in[c + 3] & 0x000000000003ff00ULL) >>  8);
        out[w + 21] = ((in[c + 3] & 0x000000000ffc0000ULL) >> 18);
        out[w + 22] = ((in[c + 3] & 0x0000003ff0000000ULL) >> 28);
        out[w + 23] = ((in[c + 3] & 0x0000ffc000000000ULL) >> 38);
        out[w + 24] = ((in[c + 3] & 0x03ff000000000000ULL) >> 48);
        out[w + 25] = (((in[c + 3] & 0xfc00000000000000ULL) >> 58) | (in[c + 4] & 0x000000000000000fULL) << 6);
        out[w + 26] = ((in[c + 4] & 0x0000000000003ff0ULL) >>  4);
        out[w + 27] = ((in[c + 4] & 0x0000000000ffc000ULL) >> 14);
        out[w + 28] = ((in[c + 4] & 0x00000003ff000000ULL) >> 24);
        out[w + 29] = ((in[c + 4] & 0x00000ffc00000000ULL) >> 34);
        out[w + 30] = ((in[c + 4] & 0x003ff00000000000ULL) >> 44);
        out[w + 31] = ((in[c + 4] & 0xffc0000000000000ULL) >> 54);
    }
}
void
unpack_11_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 11) {
        out[w +  0] = ((in[c +  0] & 0x00000000000007ffULL) >>  0);
        out[w +  1] = ((in[c +  0] & 0x00000000003ff800ULL) >> 11);
        out[w +  2] = ((in[c +  0] & 0x00000001ffc00000ULL) >> 22);
        out[w +  3] = ((in[c +  0] & 0x00000ffe00000000ULL) >> 33);
        out[w +  4] = ((in[c +  0] & 0x007ff00000000000ULL) >> 44);
        out[w +  5] = (((in[c +  0] & 0xff80000000000000ULL) >> 55) | (in[c +  1] & 0x0000000000000003ULL) << 9);
        out[w +  6] = ((in[c +  1] & 0x0000000000001ffcULL) >>  2);
        out[w +  7] = ((in[c +  1] & 0x0000000000ffe000ULL) >> 13);
        out[w +  8] = ((in[c +  1] & 0x00000007ff000000ULL) >> 24);
        out[w +  9] = ((in[c +  1] & 0x00003ff800000000ULL) >> 35);
        out[w + 10] = ((in[c +  1] & 0x01ffc00000000000ULL) >> 46);
        out[w + 11] = (((in[c +  1] & 0xfe00000000000000ULL) >> 57) | (in[c +  2] & 0x000000000000000fULL) << 7);
        out[w + 12] = ((in[c +  2] & 0x0000000000007ff0ULL) >>  4);
        out[w + 13] = ((in[c +  2] & 0x0000000003ff8000ULL) >> 15);
        out[w + 14] = ((in[c +  2] & 0x0000001ffc000000ULL) >> 26);
        out[w + 15] = ((in[c +  2] & 0x0000ffe000000000ULL) >> 37);
        out[w + 16] = ((in[c +  2] & 0x07ff000000000000ULL) >> 48);
        out[w + 17] = (((in[c +  2] & 0xf800000000000000ULL) >> 59) | (in[c +  3] & 0x000000000000003fULL) << 5);
        out[w + 18] = ((in[c +  3] & 0x000000000001ffc0ULL) >>  6);
        out[w + 19] = ((in[c +  3] & 0x000000000ffe0000ULL) >> 17);
        out[w + 20] = ((in[c +  3] & 0x0000007ff0000000ULL) >> 28);
        out[w + 21] = ((in[c +  3] & 0x0003ff8000000000ULL) >> 39);
        out[w + 22] = ((in[c +  3] & 0x1ffc000000000000ULL) >> 50);
        out[w + 23] = (((in[c +  3] & 0xe000000000000000ULL) >> 61) | (in[c +  4] & 0x00000000000000ffULL) << 3);
        out[w + 24] = ((in[c +  4] & 0x000000000007ff00ULL) >>  8);
        out[w + 25] = ((in[c +  4] & 0x000000003ff80000ULL) >> 19);
        out[w + 26] = ((in[c +  4] & 0x000001ffc0000000ULL) >> 30);
        out[w + 27] = ((in[c +  4] & 0x000ffe0000000000ULL) >> 41);
        out[w + 28] = ((in[c +  4] & 0x7ff0000000000000ULL) >> 52);
        out[w + 29] = (((in[c +  4] & 0x8000000000000000ULL) >> 63) | (in[c +  5] & 0x00000000000003ffULL) << 1);
        out[w + 30] = ((in[c +  5] & 0x00000000001ffc00ULL) >> 10);
        out[w + 31] = ((in[c +  5] & 0x00000000ffe00000ULL) >> 21);
        out[w + 32] = ((in[c +  5] & 0x000007ff00000000ULL) >> 32);
        out[w + 33] = ((in[c +  5] & 0x003ff80000000000ULL) >> 43);
        out[w + 34] = (((in[c +  5] & 0xffc0000000000000ULL) >> 54) | (in[c +  6] & 0x0000000000000001ULL) << 10);
        out[w + 35] = ((in[c +  6] & 0x0000000000000ffeULL) >>  1);
        out[w + 36] = ((in[c +  6] & 0x00000000007ff000ULL) >> 12);
        out[w + 37] = ((in[c +  6] & 0x00000003ff800000ULL) >> 23);
        out[w + 38] = ((in[c +  6] & 0x00001ffc00000000ULL) >> 34);
        out[w + 39] = ((in[c +  6] & 0x00ffe00000000000ULL) >> 45);
        out[w + 40] = (((in[c +  6] & 0xff00000000000000ULL) >> 56) | (in[c +  7] & 0x0000000000000007ULL) << 8);
        out[w + 41] = ((in[c +  7] & 0x0000000000003ff8ULL) >>  3);
        out[w + 42] = ((in[c +  7] & 0x0000000001ffc000ULL) >> 14);
        out[w + 43] = ((in[c +  7] & 0x0000000ffe000000ULL) >> 25);
        out[w + 44] = ((in[c +  7] & 0x00007ff000000000ULL) >> 36);
        out[w + 45] = ((in[c +  7] & 0x03ff800000000000ULL) >> 47);
        out[w + 46] = (((in[c +  7] & 0xfc00000000000000ULL) >> 58) | (in[c +  8] & 0x000000000000001fULL) << 6);
        out[w + 47] = ((in[c +  8] & 0x000000000000ffe0ULL) >>  5);
        out[w + 48] = ((in[c +  8] & 0x0000000007ff0000ULL) >> 16);
        out[w + 49] = ((in[c +  8] & 0x0000003ff8000000ULL) >> 27);
        out[w + 50] = ((in[c +  8] & 0x0001ffc000000000ULL) >> 38);
        out[w + 51] = ((in[c +  8] & 0x0ffe000000000000ULL) >> 49);
        out[w + 52] = (((in[c +  8] & 0xf000000000000000ULL) >> 60) | (in[c +  9] & 0x000000000000007fULL) << 4);
        out[w + 53] = ((in[c +  9] & 0x000000000003ff80ULL) >>  7);
        out[w + 54] = ((in[c +  9] & 0x000000001ffc0000ULL) >> 18);
        out[w + 55] = ((in[c +  9] & 0x000000ffe0000000ULL) >> 29);
        out[w + 56] = ((in[c +  9] & 0x0007ff0000000000ULL) >> 40);
        out[w + 57] = ((in[c +  9] & 0x3ff8000000000000ULL) >> 51);
        out[w + 58] = (((in[c +  9] & 0xc000000000000000ULL) >> 62) | (in[c + 10] & 0x00000000000001ffULL) << 2);
        out[w + 59] = ((in[c + 10] & 0x00000000000ffe00ULL) >>  9);
        out[w + 60] = ((in[c + 10] & 0x000000007ff00000ULL) >> 20);
        out[w + 61] = ((in[c + 10] & 0x000003ff80000000ULL) >> 31);
        out[w + 62] = ((in[c + 10] & 0x001ffc0000000000ULL) >> 42);
        out[w + 63] = ((in[c + 10] & 0xffe0000000000000ULL) >> 53);
    }
}
void
unpack_12_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 16, c += 3) {
        out[w +  0] = ((in[c + 0] & 0x0000000000000fffULL) >>  0);
        out[w +  1] = ((in[c + 0] & 0x0000000000fff000ULL) >> 12);
        out[w +  2] = ((in[c + 0] & 0x0000000fff000000ULL) >> 24);
        out[w +  3] = ((in[c + 0] & 0x0000fff000000000ULL) >> 36);
        out[w +  4] = ((in[c + 0] & 0x0fff000000000000ULL) >> 48);
        out[w +  5] = (((in[c + 0] & 0xf000000000000000ULL) >> 60) | (in[c + 1] & 0x00000000000000ffULL) << 4);
        out[w +  6] = ((in[c + 1] & 0x00000000000fff00ULL) >>  8);
        out[w +  7] = ((in[c + 1] & 0x00000000fff00000ULL) >> 20);
        out[w +  8] = ((in[c + 1] & 0x00000fff00000000ULL) >> 32);
        out[w +  9] = ((in[c + 1] & 0x00fff00000000000ULL) >> 44);
        out[w + 10] = (((in[c + 1] & 0xff00000000000000ULL) >> 56) | (in[c + 2] & 0x000000000000000fULL) << 8);
        out[w + 11] = ((in[c + 2] & 0x000000000000fff0ULL) >>  4);
        out[w + 12] = ((in[c + 2] & 0x000000000fff0000ULL) >> 16);
        out[w + 13] = ((in[c + 2] & 0x000000fff0000000ULL) >> 28);
        out[w + 14] = ((in[c + 2] & 0x000fff0000000000ULL) >> 40);
        out[w + 15] = ((in[c + 2] & 0xfff0000000000000ULL) >> 52);
    }
}
void
unpack_13_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 13) {
        out[w +  0] = ((in[c +  0] & 0x0000000000001fffULL) >>  0);
        out[w +  1] = ((in[c +  0] & 0x0000000003ffe000ULL) >> 13);
        out[w +  2] = ((in[c +  0] & 0x0000007ffc000000ULL) >> 26);
        out[w +  3] = ((in[c +  0] & 0x000fff8000000000ULL) >> 39);
        out[w +  4] = (((in[c +  0] & 0xfff0000000000000ULL) >> 52) | (in[c +  1] & 0x0000000000000001ULL) << 12);
        out[w +  5] = ((in[c +  1] & 0x0000000000003ffeULL) >>  1);
        out[w +  6] = ((in[c +  1] & 0x0000000007ffc000ULL) >> 14);
        out[w +  7] = ((in[c +  1] & 0x000000fff8000000ULL) >> 27);
        out[w +  8] = ((in[c +  1] & 0x001fff0000000000ULL) >> 40);
        out[w +  9] = (((in[c +  1] & 0xffe0000000000000ULL) >> 53) | (in[c +  2] & 0x0000000000000003ULL) << 11);
        out[w + 10] = ((in[c +  2] & 0x0000000000007ffcULL) >>  2);
        out[w + 11] = ((in[c +  2] & 0x000000000fff8000ULL) >> 15);
        out[w + 12] = ((in[c +  2] & 0x000001fff0000000ULL) >> 28);
        out[w + 13] = ((in[c +  2] & 0x003ffe0000000000ULL) >> 41);
        out[w + 14] = (((in[c +  2] & 0xffc0000000000000ULL) >> 54) | (in[c +  3] & 0x0000000000000007ULL) << 10);
        out[w + 15] = ((in[c +  3] & 0x000000000000fff8ULL) >>  3);
        out[w + 16] = ((in[c +  3] & 0x000000001fff0000ULL) >> 16);
        out[w + 17] = ((in[c +  3] & 0x000003ffe0000000ULL) >> 29);
        out[w + 18] = ((in[c +  3] & 0x007ffc0000000000ULL) >> 42);
        out[w + 19] = (((in[c +  3] & 0xff80000000000000ULL) >> 55) | (in[c +  4] & 0x000000000000000fULL) << 9);
        out[w + 20] = ((in[c +  4] & 0x000000000001fff0ULL) >>  4);
        out[w + 21] = ((in[c +  4] & 0x000000003ffe0000ULL) >> 17);
        out[w + 22] = ((in[c +  4] & 0x000007ffc0000000ULL) >> 30);
        out[w + 23] = ((in[c +  4] & 0x00fff80000000000ULL) >> 43);
        out[w + 24] = (((in[c +  4] & 0xff00000000000000ULL) >> 56) | (in[c +  5] & 0x000000000000001fULL) << 8);
        out[w + 25] = ((in[c +  5] & 0x000000000003ffe0ULL) >>  5);
        out[w + 26] = ((in[c +  5] & 0x000000007ffc0000ULL) >> 18);
        out[w + 27] = ((in[c +  5] & 0x00000fff80000000ULL) >> 31);
        out[w + 28] = ((in[c +  5] & 0x01fff00000000000ULL) >> 44);
        out[w + 29] = (((in[c +  5] & 0xfe00000000000000ULL) >> 57) | (in[c +  6] & 0x000000000000003fULL) << 7);
        out[w + 30] = ((in[c +  6] & 0x000000000007ffc0ULL) >>  6);
        out[w + 31] = ((in[c +  6] & 0x00000000fff80000ULL) >> 19);
        out[w + 32] = ((in[c +  6] & 0x00001fff00000000ULL) >> 32);
        out[w + 33] = ((in[c +  6] & 0x03ffe00000000000ULL) >> 45);
        out[w + 34] = (((in[c +  6] & 0xfc00000000000000ULL) >> 58) | (in[c +  7] & 0x000000000000007fULL) << 6);
        out[w + 35] = ((in[c +  7] & 0x00000000000fff80ULL) >>  7);
        out[w + 36] = ((in[c +  7] & 0x00000001fff00000ULL) >> 20);
        out[w + 37] = ((in[c +  7] & 0x00003ffe00000000ULL) >> 33);
        out[w + 38] = ((in[c +  7] & 0x07ffc00000000000ULL) >> 46);
        out[w + 39] = (((in[c +  7] & 0xf800000000000000ULL) >> 59) | (in[c +  8] & 0x00000000000000ffULL) << 5);
        out[w + 40] = ((in[c +  8] & 0x00000000001fff00ULL) >>  8);
        out[w + 41] = ((in[c +  8] & 0x00000003ffe00000ULL) >> 21);
        out[w + 42] = ((in[c +  8] & 0x00007ffc00000000ULL) >> 34);
        out[w + 43] = ((in[c +  8] & 0x0fff800000000000ULL) >> 47);
        out[w + 44] = (((in[c +  8] & 0xf000000000000000ULL) >> 60) | (in[c +  9] & 0x00000000000001ffULL) << 4);
        out[w + 45] = ((in[c +  9] & 0x00000000003ffe00ULL) >>  9);
        out[w + 46] = ((in[c +  9] & 0x00000007ffc00000ULL) >> 22);
        out[w + 47] = ((in[c +  9] & 0x0000fff800000000ULL) >> 35);
        out[w + 48] = ((in[c +  9] & 0x1fff000000000000ULL) >> 48);
        out[w + 49] = (((in[c +  9] & 0xe000000000000000ULL) >> 61) | (in[c + 10] & 0x00000000000003ffULL) << 3);
        out[w + 50] = ((in[c + 10] & 0x00000000007ffc00ULL) >> 10);
        out[w + 51] = ((in[c + 10] & 0x0000000fff800000ULL) >> 23);
        out[w + 52] = ((in[c + 10] & 0x0001fff000000000ULL) >> 36);
        out[w + 53] = ((in[c + 10] & 0x3ffe000000000000ULL) >> 49);
        out[w + 54] = (((in[c + 10] & 0xc000000000000000ULL) >> 62) | (in[c + 11] & 0x00000000000007ffULL) << 2);
        out[w + 55] = ((in[c + 11] & 0x0000000000fff800ULL) >> 11);
        out[w + 56] = ((in[c + 11] & 0x0000001fff000000ULL) >> 24);
        out[w + 57] = ((in[c + 11] & 0x0003ffe000000000ULL) >> 37);
        out[w + 58] = ((in[c + 11] & 0x7ffc000000000000ULL) >> 50);
        out[w + 59] = (((in[c + 11] & 0x8000000000000000ULL) >> 63) | (in[c + 12] & 0x0000000000000fffULL) << 1);
        out[w + 60] = ((in[c + 12] & 0x0000000001fff000ULL) >> 12);
        out[w + 61] = ((in[c + 12] & 0x0000003ffe000000ULL) >> 25);
        out[w + 62] = ((in[c + 12] & 0x0007ffc000000000ULL) >> 38);
        out[w + 63] = ((in[c + 12] & 0xfff8000000000000ULL) >> 51);
    }
}
void
unpack_14_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 7) {
        out[w +  0] = ((in[c + 0] & 0x0000000000003fffULL) >>  0);
        out[w +  1] = ((in[c + 0] & 0x000000000fffc000ULL) >> 14);
        out[w +  2] = ((in[c + 0] & 0x000003fff0000000ULL) >> 28);
        out[w +  3] = ((in[c + 0] & 0x00fffc0000000000ULL) >> 42);
        out[w +  4] = (((in[c + 0] & 0xff00000000000000ULL) >> 56) | (in[c + 1] & 0x000000000000003fULL) << 8);
        out[w +  5] = ((in[c + 1] & 0x00000000000fffc0ULL) >>  6);
        out[w +  6] = ((in[c + 1] & 0x00000003fff00000ULL) >> 20);
        out[w +  7] = ((in[c + 1] & 0x0000fffc00000000ULL) >> 34);
        out[w +  8] = ((in[c + 1] & 0x3fff000000000000ULL) >> 48);
        out[w +  9] = (((in[c + 1] & 0xc000000000000000ULL) >> 62) | (in[c + 2] & 0x0000000000000fffULL) << 2);
        out[w + 10] = ((in[c + 2] & 0x0000000003fff000ULL) >> 12);
        out[w + 11] = ((in[c + 2] & 0x000000fffc000000ULL) >> 26);
        out[w + 12] = ((in[c + 2] & 0x003fff0000000000ULL) >> 40);
        out[w + 13] = (((in[c + 2] & 0xffc0000000000000ULL) >> 54) | (in[c + 3] & 0x000000000000000fULL) << 10);
        out[w + 14] = ((in[c + 3] & 0x000000000003fff0ULL) >>  4);
        out[w + 15] = ((in[c + 3] & 0x00000000fffc0000ULL) >> 18);
        out[w + 16] = ((in[c + 3] & 0x00003fff00000000ULL) >> 32);
        out[w + 17] = ((in[c + 3] & 0x0fffc00000000000ULL) >> 46);
        out[w + 18] = (((in[c + 3] & 0xf000000000000000ULL) >> 60) | (in[c + 4] & 0x00000000000003ffULL) << 4);
        out[w + 19] = ((in[c + 4] & 0x0000000000fffc00ULL) >> 10);
        out[w + 20] = ((in[c + 4] & 0x0000003fff000000ULL) >> 24);
        out[w + 21] = ((in[c + 4] & 0x000fffc000000000ULL) >> 38);
        out[w + 22] = (((in[c + 4] & 0xfff0000000000000ULL) >> 52) | (in[c + 5] & 0x0000000000000003ULL) << 12);
        out[w + 23] = ((in[c + 5] & 0x000000000000fffcULL) >>  2);
        out[w + 24] = ((in[c + 5] & 0x000000003fff0000ULL) >> 16);
        out[w + 25] = ((in[c + 5] & 0x00000fffc0000000ULL) >> 30);
        out[w + 26] = ((in[c + 5] & 0x03fff00000000000ULL) >> 44);
        out[w + 27] = (((in[c + 5] & 0xfc00000000000000ULL) >> 58) | (in[c + 6] & 0x00000000000000ffULL) << 6);
        out[w + 28] = ((in[c + 6] & 0x00000000003fff00ULL) >>  8);
        out[w + 29] = ((in[c + 6] & 0x0000000fffc00000ULL) >> 22);
        out[w + 30] = ((in[c + 6] & 0x0003fff000000000ULL) >> 36);
        out[w + 31] = ((in[c + 6] & 0xfffc000000000000ULL) >> 50);
    }
}
void
unpack_15_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 15) {
        out[w +  0] = ((in[c +  0] & 0x0000000000007fffULL) >>  0);
        out[w +  1] = ((in[c +  0] & 0x000000003fff8000ULL) >> 15);
        out[w +  2] = ((in[c +  0] & 0x00001fffc0000000ULL) >> 30);
        out[w +  3] = ((in[c +  0] & 0x0fffe00000000000ULL) >> 45);
        out[w +  4] = (((in[c +  0] & 0xf000000000000000ULL) >> 60) | (in[c +  1] & 0x00000000000007ffULL) << 4);
        out[w +  5] = ((in[c +  1] & 0x0000000003fff800ULL) >> 11);
        out[w +  6] = ((in[c +  1] & 0x000001fffc000000ULL) >> 26);
        out[w +  7] = ((in[c +  1] & 0x00fffe0000000000ULL) >> 41);
        out[w +  8] = (((in[c +  1] & 0xff00000000000000ULL) >> 56) | (in[c +  2] & 0x000000000000007fULL) << 8);
        out[w +  9] = ((in[c +  2] & 0x00000000003fff80ULL) >>  7);
        out[w + 10] = ((in[c +  2] & 0x0000001fffc00000ULL) >> 22);
        out[w + 11] = ((in[c +  2] & 0x000fffe000000000ULL) >> 37);
        out[w + 12] = (((in[c +  2] & 0xfff0000000000000ULL) >> 52) | (in[c +  3] & 0x0000000000000007ULL) << 12);
        out[w + 13] = ((in[c +  3] & 0x000000000003fff8ULL) >>  3);
        out[w + 14] = ((in[c +  3] & 0x00000001fffc0000ULL) >> 18);
        out[w + 15] = ((in[c +  3] & 0x0000fffe00000000ULL) >> 33);
        out[w + 16] = ((in[c +  3] & 0x7fff000000000000ULL) >> 48);
        out[w + 17] = (((in[c +  3] & 0x8000000000000000ULL) >> 63) | (in[c +  4] & 0x0000000000003fffULL) << 1);
        out[w + 18] = ((in[c +  4] & 0x000000001fffc000ULL) >> 14);
        out[w + 19] = ((in[c +  4] & 0x00000fffe0000000ULL) >> 29);
        out[w + 20] = ((in[c +  4] & 0x07fff00000000000ULL) >> 44);
        out[w + 21] = (((in[c +  4] & 0xf800000000000000ULL) >> 59) | (in[c +  5] & 0x00000000000003ffULL) << 5);
        out[w + 22] = ((in[c +  5] & 0x0000000001fffc00ULL) >> 10);
        out[w + 23] = ((in[c +  5] & 0x000000fffe000000ULL) >> 25);
        out[w + 24] = ((in[c +  5] & 0x007fff0000000000ULL) >> 40);
        out[w + 25] = (((in[c +  5] & 0xff80000000000000ULL) >> 55) | (in[c +  6] & 0x000000000000003fULL) << 9);
        out[w + 26] = ((in[c +  6] & 0x00000000001fffc0ULL) >>  6);
        out[w + 27] = ((in[c +  6] & 0x0000000fffe00000ULL) >> 21);
        out[w + 28] = ((in[c +  6] & 0x0007fff000000000ULL) >> 36);
        out[w + 29] = (((in[c +  6] & 0xfff8000000000000ULL) >> 51) | (in[c +  7] & 0x0000000000000003ULL) << 13);
        out[w + 30] = ((in[c +  7] & 0x000000000001fffcULL) >>  2);
        out[w + 31] = ((in[c +  7] & 0x00000000fffe0000ULL) >> 17);
        out[w + 32] = ((in[c +  7] & 0x00007fff00000000ULL) >> 32);
        out[w + 33] = ((in[c +  7] & 0x3fff800000000000ULL) >> 47);
        out[w + 34] = (((in[c +  7] & 0xc000000000000000ULL) >> 62) | (in[c +  8] & 0x0000000000001fffULL) << 2);
        out[w + 35] = ((in[c +  8] & 0x000000000fffe000ULL) >> 13);
        out[w + 36] = ((in[c +  8] & 0x000007fff0000000ULL) >> 28);
        out[w + 37] = ((in[c +  8] & 0x03fff80000000000ULL) >> 43);
        out[w + 38] = (((in[c +  8] & 0xfc00000000000000ULL) >> 58) | (in[c +  9] & 0x00000000000001ffULL) << 6);
        out[w + 39] = ((in[c +  9] & 0x0000000000fffe00ULL) >>  9);
        out[w + 40] = ((in[c +  9] & 0x0000007fff000000ULL) >> 24);
        out[w + 41] = ((in[c +  9] & 0x003fff8000000000ULL) >> 39);
        out[w + 42] = (((in[c +  9] & 0xffc0000000000000ULL) >> 54) | (in[c + 10] & 0x000000000000001fULL) << 10);
        out[w + 43] = ((in[c + 10] & 0x00000000000fffe0ULL) >>  5);
        out[w + 44] = ((in[c + 10] & 0x00000007fff00000ULL) >> 20);
        out[w + 45] = ((in[c + 10] & 0x0003fff800000000ULL) >> 35);
        out[w + 46] = (((in[c + 10] & 0xfffc000000000000ULL) >> 50) | (in[c + 11] & 0x0000000000000001ULL) << 14);
        out[w + 47] = ((in[c + 11] & 0x000000000000fffeULL) >>  1);
        out[w + 48] = ((in[c + 11] & 0x000000007fff0000ULL) >> 16);
        out[w + 49] = ((in[c + 11] & 0x00003fff80000000ULL) >> 31);
        out[w + 50] = ((in[c + 11] & 0x1fffc00000000000ULL) >> 46);
        out[w + 51] = (((in[c + 11] & 0xe000000000000000ULL) >> 61) | (in[c + 12] & 0x0000000000000fffULL) << 3);
        out[w + 52] = ((in[c + 12] & 0x0000000007fff000ULL) >> 12);
        out[w + 53] = ((in[c + 12] & 0x000003fff8000000ULL) >> 27);
        out[w + 54] = ((in[c + 12] & 0x01fffc0000000000ULL) >> 42);
        out[w + 55] = (((in[c + 12] & 0xfe00000000000000ULL) >> 57) | (in[c + 13] & 0x00000000000000ffULL) << 7);
        out[w + 56] = ((in[c + 13] & 0x00000000007fff00ULL) >>  8);
        out[w + 57] = ((in[c + 13] & 0x0000003fff800000ULL) >> 23);
        out[w + 58] = ((in[c + 13] & 0x001fffc000000000ULL) >> 38);
        out[w + 59] = (((in[c + 13] & 0xffe0000000000000ULL) >> 53) | (in[c + 14] & 0x000000000000000fULL) << 11);
        out[w + 60] = ((in[c + 14] & 0x000000000007fff0ULL) >>  4);
        out[w + 61] = ((in[c + 14] & 0x00000003fff80000ULL) >> 19);
        out[w + 62] = ((in[c + 14] & 0x0001fffc00000000ULL) >> 34);
        out[w + 63] = ((in[c + 14] & 0xfffe000000000000ULL) >> 49);
    }
}
void
unpack_16_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 4, c += 1) {
        out[w + 0] = ((in[c + 0] & 0x000000000000ffffULL) >>  0);
        out[w + 1] = ((in[c + 0] & 0x00000000ffff0000ULL) >> 16);
        out[w + 2] = ((in[c + 0] & 0x0000ffff00000000ULL) >> 32);
        out[w + 3] = ((in[c + 0] & 0xffff000000000000ULL) >> 48);
    }
}
void
unpack_17_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 17) {
        out[w +  0] = ((in[c +  0] & 0x000000000001ffffULL) >>  0);
        out[w +  1] = ((in[c +  0] & 0x00000003fffe0000ULL) >> 17);
        out[w +  2] = ((in[c +  0] & 0x0007fffc00000000ULL) >> 34);
        out[w +  3] = (((in[c +  0] & 0xfff8000000000000ULL) >> 51) | (in[c +  1] & 0x000000000000000fULL) << 13);
        out[w +  4] = ((in[c +  1] & 0x00000000001ffff0ULL) >>  4);
        out[w +  5] = ((in[c +  1] & 0x0000003fffe00000ULL) >> 21);
        out[w +  6] = ((in[c +  1] & 0x007fffc000000000ULL) >> 38);
        out[w +  7] = (((in[c +  1] & 0xff80000000000000ULL) >> 55) | (in[c +  2] & 0x00000000000000ffULL) << 9);
        out[w +  8] = ((in[c +  2] & 0x0000000001ffff00ULL) >>  8);
        out[w +  9] = ((in[c +  2] & 0x000003fffe000000ULL) >> 25);
        out[w + 10] = ((in[c +  2] & 0x07fffc0000000000ULL) >> 42);
        out[w + 11] = (((in[c +  2] & 0xf800000000000000ULL) >> 59) | (in[c +  3] & 0x0000000000000fffULL) << 5);
        out[w + 12] = ((in[c +  3] & 0x000000001ffff000ULL) >> 12);
        out[w + 13] = ((in[c +  3] & 0x00003fffe0000000ULL) >> 29);
        out[w + 14] = ((in[c +  3] & 0x7fffc00000000000ULL) >> 46);
        out[w + 15] = (((in[c +  3] & 0x8000000000000000ULL) >> 63) | (in[c +  4] & 0x000000000000ffffULL) << 1);
        out[w + 16] = ((in[c +  4] & 0x00000001ffff0000ULL) >> 16);
        out[w + 17] = ((in[c +  4] & 0x0003fffe00000000ULL) >> 33);
        out[w + 18] = (((in[c +  4] & 0xfffc000000000000ULL) >> 50) | (in[c +  5] & 0x0000000000000007ULL) << 14);
        out[w + 19] = ((in[c +  5] & 0x00000000000ffff8ULL) >>  3);
        out[w + 20] = ((in[c +  5] & 0x0000001ffff00000ULL) >> 20);
        out[w + 21] = ((in[c +  5] & 0x003fffe000000000ULL) >> 37);
        out[w + 22] = (((in[c +  5] & 0xffc0000000000000ULL) >> 54) | (in[c +  6] & 0x000000000000007fULL) << 10);
        out[w + 23] = ((in[c +  6] & 0x0000000000ffff80ULL) >>  7);
        out[w + 24] = ((in[c +  6] & 0x000001ffff000000ULL) >> 24);
        out[w + 25] = ((in[c +  6] & 0x03fffe0000000000ULL) >> 41);
        out[w + 26] = (((in[c +  6] & 0xfc00000000000000ULL) >> 58) | (in[c +  7] & 0x00000000000007ffULL) << 6);
        out[w + 27] = ((in[c +  7] & 0x000000000ffff800ULL) >> 11);
        out[w + 28] = ((in[c +  7] & 0x00001ffff0000000ULL) >> 28);
        out[w + 29] = ((in[c +  7] & 0x3fffe00000000000ULL) >> 45);
        out[w + 30] = (((in[c +  7] & 0xc000000000000000ULL) >> 62) | (in[c +  8] & 0x0000000000007fffULL) << 2);
        out[w + 31] = ((in[c +  8] & 0x00000000ffff8000ULL) >> 15);
        out[w + 32] = ((in[c +  8] & 0x0001ffff00000000ULL) >> 32);
        out[w + 33] = (((in[c +  8] & 0xfffe000000000000ULL) >> 49) | (in[c +  9] & 0x0000000000000003ULL) << 15);
        out[w + 34] = ((in[c +  9] & 0x000000000007fffcULL) >>  2);
        out[w + 35] = ((in[c +  9] & 0x0000000ffff80000ULL) >> 19);
        out[w + 36] = ((in[c +  9] & 0x001ffff000000000ULL) >> 36);
        out[w + 37] = (((in[c +  9] & 0xffe0000000000000ULL) >> 53) | (in[c + 10] & 0x000000000000003fULL) << 11);
        out[w + 38] = ((in[c + 10] & 0x00000000007fffc0ULL) >>  6);
        out[w + 39] = ((in[c + 10] & 0x000000ffff800000ULL) >> 23);
        out[w + 40] = ((in[c + 10] & 0x01ffff0000000000ULL) >> 40);
        out[w + 41] = (((in[c + 10] & 0xfe00000000000000ULL) >> 57) | (in[c + 11] & 0x00000000000003ffULL) << 7);
        out[w + 42] = ((in[c + 11] & 0x0000000007fffc00ULL) >> 10);
        out[w + 43] = ((in[c + 11] & 0x00000ffff8000000ULL) >> 27);
        out[w + 44] = ((in[c + 11] & 0x1ffff00000000000ULL) >> 44);
        out[w + 45] = (((in[c + 11] & 0xe000000000000000ULL) >> 61) | (in[c + 12] & 0x0000000000003fffULL) << 3);
        out[w + 46] = ((in[c + 12] & 0x000000007fffc000ULL) >> 14);
        out[w + 47] = ((in[c + 12] & 0x0000ffff80000000ULL) >> 31);
        out[w + 48] = (((in[c + 12] & 0xffff000000000000ULL) >> 48) | (in[c + 13] & 0x0000000000000001ULL) << 16);
        out[w + 49] = ((in[c + 13] & 0x000000000003fffeULL) >>  1);
        out[w + 50] = ((in[c + 13] & 0x00000007fffc0000ULL) >> 18);
        out[w + 51] = ((in[c + 13] & 0x000ffff800000000ULL) >> 35);
        out[w + 52] = (((in[c + 13] & 0xfff0000000000000ULL) >> 52) | (in[c + 14] & 0x000000000000001fULL) << 12);
        out[w + 53] = ((in[c + 14] & 0x00000000003fffe0ULL) >>  5);
        out[w + 54] = ((in[c + 14] & 0x0000007fffc00000ULL) >> 22);
        out[w + 55] = ((in[c + 14] & 0x00ffff8000000000ULL) >> 39);
        out[w + 56] = (((in[c + 14] & 0xff00000000000000ULL) >> 56) | (in[c + 15] & 0x00000000000001ffULL) << 8);
        out[w + 57] = ((in[c + 15] & 0x0000000003fffe00ULL) >>  9);
        out[w + 58] = ((in[c + 15] & 0x000007fffc000000ULL) >> 26);
        out[w + 59] = ((in[c + 15] & 0x0ffff80000000000ULL) >> 43);
        out[w + 60] = (((in[c + 15] & 0xf000000000000000ULL) >> 60) | (in[c + 16] & 0x0000000000001fffULL) << 4);
        out[w + 61] = ((in[c + 16] & 0x000000003fffe000ULL) >> 13);
        out[w + 62] = ((in[c + 16] & 0x00007fffc0000000ULL) >> 30);
        out[w + 63] = ((in[c + 16] & 0xffff800000000000ULL) >> 47);
    }
}
void
unpack_18_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 9) {
        out[w +  0] = ((in[c + 0] & 0x000000000003ffffULL) >>  0);
        out[w +  1] = ((in[c + 0] & 0x0000000ffffc0000ULL) >> 18);
        out[w +  2] = ((in[c + 0] & 0x003ffff000000000ULL) >> 36);
        out[w +  3] = (((in[c + 0] & 0xffc0000000000000ULL) >> 54) | (in[c + 1] & 0x00000000000000ffULL) << 10);
        out[w +  4] = ((in[c + 1] & 0x0000000003ffff00ULL) >>  8);
        out[w +  5] = ((in[c + 1] & 0x00000ffffc000000ULL) >> 26);
        out[w +  6] = ((in[c + 1] & 0x3ffff00000000000ULL) >> 44);
        out[w +  7] = (((in[c + 1] & 0xc000000000000000ULL) >> 62) | (in[c + 2] & 0x000000000000ffffULL) << 2);
        out[w +  8] = ((in[c + 2] & 0x00000003ffff0000ULL) >> 16);
        out[w +  9] = ((in[c + 2] & 0x000ffffc00000000ULL) >> 34);
        out[w + 10] = (((in[c + 2] & 0xfff0000000000000ULL) >> 52) | (in[c + 3] & 0x000000000000003fULL) << 12);
        out[w + 11] = ((in[c + 3] & 0x0000000000ffffc0ULL) >>  6);
        out[w + 12] = ((in[c + 3] & 0x000003ffff000000ULL) >> 24);
        out[w + 13] = ((in[c + 3] & 0x0ffffc0000000000ULL) >> 42);
        out[w + 14] = (((in[c + 3] & 0xf000000000000000ULL) >> 60) | (in[c + 4] & 0x0000000000003fffULL) << 4);
        out[w + 15] = ((in[c + 4] & 0x00000000ffffc000ULL) >> 14);
        out[w + 16] = ((in[c + 4] & 0x0003ffff00000000ULL) >> 32);
        out[w + 17] = (((in[c + 4] & 0xfffc000000000000ULL) >> 50) | (in[c + 5] & 0x000000000000000fULL) << 14);
        out[w + 18] = ((in[c + 5] & 0x00000000003ffff0ULL) >>  4);
        out[w + 19] = ((in[c + 5] & 0x000000ffffc00000ULL) >> 22);
        out[w + 20] = ((in[c + 5] & 0x03ffff0000000000ULL) >> 40);
        out[w + 21] = (((in[c + 5] & 0xfc00000000000000ULL) >> 58) | (in[c + 6] & 0x0000000000000fffULL) << 6);
        out[w + 22] = ((in[c + 6] & 0x000000003ffff000ULL) >> 12);
        out[w + 23] = ((in[c + 6] & 0x0000ffffc0000000ULL) >> 30);
        out[w + 24] = (((in[c + 6] & 0xffff000000000000ULL) >> 48) | (in[c + 7] & 0x0000000000000003ULL) << 16);
        out[w + 25] = ((in[c + 7] & 0x00000000000ffffcULL) >>  2);
        out[w + 26] = ((in[c + 7] & 0x0000003ffff00000ULL) >> 20);
        out[w + 27] = ((in[c + 7] & 0x00ffffc000000000ULL) >> 38);
        out[w + 28] = (((in[c + 7] & 0xff00000000000000ULL) >> 56) | (in[c + 8] & 0x00000000000003ffULL) << 8);
        out[w + 29] = ((in[c + 8] & 0x000000000ffffc00ULL) >> 10);
        out[w + 30] = ((in[c + 8] & 0x00003ffff0000000ULL) >> 28);
        out[w + 31] = ((in[c + 8] & 0xffffc00000000000ULL) >> 46);
    }
}
void
unpack_19_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 19) {
        out[w +  0] = ((in[c +  0] & 0x000000000007ffffULL) >>  0);
        out[w +  1] = ((in[c +  0] & 0x0000003ffff80000ULL) >> 19);
        out[w +  2] = ((in[c +  0] & 0x01ffffc000000000ULL) >> 38);
        out[w +  3] = (((in[c +  0] & 0xfe00000000000000ULL) >> 57) | (in[c +  1] & 0x0000000000000fffULL) << 7);
        out[w +  4] = ((in[c +  1] & 0x000000007ffff000ULL) >> 12);
        out[w +  5] = ((in[c +  1] & 0x0003ffff80000000ULL) >> 31);
        out[w +  6] = (((in[c +  1] & 0xfffc000000000000ULL) >> 50) | (in[c +  2] & 0x000000000000001fULL) << 14);
        out[w +  7] = ((in[c +  2] & 0x0000000000ffffe0ULL) >>  5);
        out[w +  8] = ((in[c +  2] & 0x000007ffff000000ULL) >> 24);
        out[w +  9] = ((in[c +  2] & 0x3ffff80000000000ULL) >> 43);
        out[w + 10] = (((in[c +  2] & 0xc000000000000000ULL) >> 62) | (in[c +  3] & 0x000000000001ffffULL) << 2);
        out[w + 11] = ((in[c +  3] & 0x0000000ffffe0000ULL) >> 17);
        out[w + 12] = ((in[c +  3] & 0x007ffff000000000ULL) >> 36);
        out[w + 13] = (((in[c +  3] & 0xff80000000000000ULL) >> 55) | (in[c +  4] & 0x00000000000003ffULL) << 9);
        out[w + 14] = ((in[c +  4] & 0x000000001ffffc00ULL) >> 10);
        out[w + 15] = ((in[c +  4] & 0x0000ffffe0000000ULL) >> 29);
        out[w + 16] = (((in[c +  4] & 0xffff000000000000ULL) >> 48) | (in[c +  5] & 0x0000000000000007ULL) << 16);
        out[w + 17] = ((in[c +  5] & 0x00000000003ffff8ULL) >>  3);
        out[w + 18] = ((in[c +  5] & 0x000001ffffc00000ULL) >> 22);
        out[w + 19] = ((in[c +  5] & 0x0ffffe0000000000ULL) >> 41);
        out[w + 20] = (((in[c +  5] & 0xf000000000000000ULL) >> 60) | (in[c +  6] & 0x0000000000007fffULL) << 4);
        out[w + 21] = ((in[c +  6] & 0x00000003ffff8000ULL) >> 15);
        out[w + 22] = ((in[c +  6] & 0x001ffffc00000000ULL) >> 34);
        out[w + 23] = (((in[c +  6] & 0xffe0000000000000ULL) >> 53) | (in[c +  7] & 0x00000000000000ffULL) << 11);
        out[w + 24] = ((in[c +  7] & 0x0000000007ffff00ULL) >>  8);
        out[w + 25] = ((in[c +  7] & 0x00003ffff8000000ULL) >> 27);
        out[w + 26] = (((in[c +  7] & 0xffffc00000000000ULL) >> 46) | (in[c +  8] & 0x0000000000000001ULL) << 18);
        out[w + 27] = ((in[c +  8] & 0x00000000000ffffeULL) >>  1);
        out[w + 28] = ((in[c +  8] & 0x0000007ffff00000ULL) >> 20);
        out[w + 29] = ((in[c +  8] & 0x03ffff8000000000ULL) >> 39);
        out[w + 30] = (((in[c +  8] & 0xfc00000000000000ULL) >> 58) | (in[c +  9] & 0x0000000000001fffULL) << 6);
        out[w + 31] = ((in[c +  9] & 0x00000000ffffe000ULL) >> 13);
        out[w + 32] = ((in[c +  9] & 0x0007ffff00000000ULL) >> 32);
        out[w + 33] = (((in[c +  9] & 0xfff8000000000000ULL) >> 51) | (in[c + 10] & 0x000000000000003fULL) << 13);
        out[w + 34] = ((in[c + 10] & 0x0000000001ffffc0ULL) >>  6);
        out[w + 35] = ((in[c + 10] & 0x00000ffffe000000ULL) >> 25);
        out[w + 36] = ((in[c + 10] & 0x7ffff00000000000ULL) >> 44);
        out[w + 37] = (((in[c + 10] & 0x8000000000000000ULL) >> 63) | (in[c + 11] & 0x000000000003ffffULL) << 1);
        out[w + 38] = ((in[c + 11] & 0x0000001ffffc0000ULL) >> 18);
        out[w + 39] = ((in[c + 11] & 0x00ffffe000000000ULL) >> 37);
        out[w + 40] = (((in[c + 11] & 0xff00000000000000ULL) >> 56) | (in[c + 12] & 0x00000000000007ffULL) << 8);
        out[w + 41] = ((in[c + 12] & 0x000000003ffff800ULL) >> 11);
        out[w + 42] = ((in[c + 12] & 0x0001ffffc0000000ULL) >> 30);
        out[w + 43] = (((in[c + 12] & 0xfffe000000000000ULL) >> 49) | (in[c + 13] & 0x000000000000000fULL) << 15);
        out[w + 44] = ((in[c + 13] & 0x00000000007ffff0ULL) >>  4);
        out[w + 45] = ((in[c + 13] & 0x000003ffff800000ULL) >> 23);
        out[w + 46] = ((in[c + 13] & 0x1ffffc0000000000ULL) >> 42);
        out[w + 47] = (((in[c + 13] & 0xe000000000000000ULL) >> 61) | (in[c + 14] & 0x000000000000ffffULL) << 3);
        out[w + 48] = ((in[c + 14] & 0x00000007ffff0000ULL) >> 16);
        out[w + 49] = ((in[c + 14] & 0x003ffff800000000ULL) >> 35);
        out[w + 50] = (((in[c + 14] & 0xffc0000000000000ULL) >> 54) | (in[c + 15] & 0x00000000000001ffULL) << 10);
        out[w + 51] = ((in[c + 15] & 0x000000000ffffe00ULL) >>  9);
        out[w + 52] = ((in[c + 15] & 0x00007ffff0000000ULL) >> 28);
        out[w + 53] = (((in[c + 15] & 0xffff800000000000ULL) >> 47) | (in[c + 16] & 0x0000000000000003ULL) << 17);
        out[w + 54] = ((in[c + 16] & 0x00000000001ffffcULL) >>  2);
        out[w + 55] = ((in[c + 16] & 0x000000ffffe00000ULL) >> 21);
        out[w + 56] = ((in[c + 16] & 0x07ffff0000000000ULL) >> 40);
        out[w + 57] = (((in[c + 16] & 0xf800000000000000ULL) >> 59) | (in[c + 17] & 0x0000000000003fffULL) << 5);
        out[w + 58] = ((in[c + 17] & 0x00000001ffffc000ULL) >> 14);
        out[w + 59] = ((in[c + 17] & 0x000ffffe00000000ULL) >> 33);
        out[w + 60] = (((in[c + 17] & 0xfff0000000000000ULL) >> 52) | (in[c + 18] & 0x000000000000007fULL) << 12);
        out[w + 61] = ((in[c + 18] & 0x0000000003ffff80ULL) >>  7);
        out[w + 62] = ((in[c + 18] & 0x00001ffffc000000ULL) >> 26);
        out[w + 63] = ((in[c + 18] & 0xffffe00000000000ULL) >> 45);
    }
}
void
unpack_20_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 16, c += 5) {
        out[w +  0] = ((in[c + 0] & 0x00000000000fffffULL) >>  0);
        out[w +  1] = ((in[c + 0] & 0x000000fffff00000ULL) >> 20);
        out[w +  2] = ((in[c + 0] & 0x0fffff0000000000ULL) >> 40);
        out[w +  3] = (((in[c + 0] & 0xf000000000000000ULL) >> 60) | (in[c + 1] & 0x000000000000ffffULL) << 4);
        out[w +  4] = ((in[c + 1] & 0x0000000fffff0000ULL) >> 16);
        out[w +  5] = ((in[c + 1] & 0x00fffff000000000ULL) >> 36);
        out[w +  6] = (((in[c + 1] & 0xff00000000000000ULL) >> 56) | (in[c + 2] & 0x0000000000000fffULL) << 8);
        out[w +  7] = ((in[c + 2] & 0x00000000fffff000ULL) >> 12);
        out[w +  8] = ((in[c + 2] & 0x000fffff00000000ULL) >> 32);
        out[w +  9] = (((in[c + 2] & 0xfff0000000000000ULL) >> 52) | (in[c + 3] & 0x00000000000000ffULL) << 12);
        out[w + 10] = ((in[c + 3] & 0x000000000fffff00ULL) >>  8);
        out[w + 11] = ((in[c + 3] & 0x0000fffff0000000ULL) >> 28);
        out[w + 12] = (((in[c + 3] & 0xffff000000000000ULL) >> 48) | (in[c + 4] & 0x000000000000000fULL) << 16);
        out[w + 13] = ((in[c + 4] & 0x0000000000fffff0ULL) >>  4);
        out[w + 14] = ((in[c + 4] & 0x00000fffff000000ULL) >> 24);
        out[w + 15] = ((in[c + 4] & 0xfffff00000000000ULL) >> 44);
    }
}
void
unpack_21_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 21) {
        out[w +  0] = ((in[c +  0] & 0x00000000001fffffULL) >>  0);
        out[w +  1] = ((in[c +  0] & 0x000003ffffe00000ULL) >> 21);
        out[w +  2] = ((in[c +  0] & 0x7ffffc0000000000ULL) >> 42);
        out[w +  3] = (((in[c +  0] & 0x8000000000000000ULL) >> 63) | (in[c +  1] & 0x00000000000fffffULL) << 1);
        out[w +  4] = ((in[c +  1] & 0x000001fffff00000ULL) >> 20);
        out[w +  5] = ((in[c +  1] & 0x3ffffe0000000000ULL) >> 41);
        out[w +  6] = (((in[c +  1] & 0xc000000000000000ULL) >> 62) | (in[c +  2] & 0x000000000007ffffULL) << 2);
        out[w +  7] = ((in[c +  2] & 0x000000fffff80000ULL) >> 19);
        out[w +  8] = ((in[c +  2] & 0x1fffff0000000000ULL) >> 40);
        out[w +  9] = (((in[c +  2] & 0xe000000000000000ULL) >> 61) | (in[c +  3] & 0x000000000003ffffULL) << 3);
        out[w + 10] = ((in[c +  3] & 0x0000007ffffc0000ULL) >> 18);
        out[w + 11] = ((in[c +  3] & 0x0fffff8000000000ULL) >> 39);
        out[w + 12] = (((in[c +  3] & 0xf000000000000000ULL) >> 60) | (in[c +  4] & 0x000000000001ffffULL) << 4);
        out[w + 13] = ((in[c +  4] & 0x0000003ffffe0000ULL) >> 17);
        out[w + 14] = ((in[c +  4] & 0x07ffffc000000000ULL) >> 38);
        out[w + 15] = (((in[c +  4] & 0xf800000000000000ULL) >> 59) | (in[c +  5] & 0x000000000000ffffULL) << 5);
        out[w + 16] = ((in[c +  5] & 0x0000001fffff0000ULL) >> 16);
        out[w + 17] = ((in[c +  5] & 0x03ffffe000000000ULL) >> 37);
        out[w + 18] = (((in[c +  5] & 0xfc00000000000000ULL) >> 58) | (in[c +  6] & 0x0000000000007fffULL) << 6);
        out[w + 19] = ((in[c +  6] & 0x0000000fffff8000ULL) >> 15);
        out[w + 20] = ((in[c +  6] & 0x01fffff000000000ULL) >> 36);
        out[w + 21] = (((in[c +  6] & 0xfe00000000000000ULL) >> 57) | (in[c +  7] & 0x0000000000003fffULL) << 7);
        out[w + 22] = ((in[c +  7] & 0x00000007ffffc000ULL) >> 14);
        out[w + 23] = ((in[c +  7] & 0x00fffff800000000ULL) >> 35);
        out[w + 24] = (((in[c +  7] & 0xff00000000000000ULL) >> 56) | (in[c +  8] & 0x0000000000001fffULL) << 8);
        out[w + 25] = ((in[c +  8] & 0x00000003ffffe000ULL) >> 13);
        out[w + 26] = ((in[c +  8] & 0x007ffffc00000000ULL) >> 34);
        out[w + 27] = (((in[c +  8] & 0xff80000000000000ULL) >> 55) | (in[c +  9] & 0x0000000000000fffULL) << 9);
        out[w + 28] = ((in[c +  9] & 0x00000001fffff000ULL) >> 12);
        out[w + 29] = ((in[c +  9] & 0x003ffffe00000000ULL) >> 33);
        out[w + 30] = (((in[c +  9] & 0xffc0000000000000ULL) >> 54) | (in[c + 10] & 0x00000000000007ffULL) << 10);
        out[w + 31] = ((in[c + 10] & 0x00000000fffff800ULL) >> 11);
        out[w + 32] = ((in[c + 10] & 0x001fffff00000000ULL) >> 32);
        out[w + 33] = (((in[c + 10] & 0xffe0000000000000ULL) >> 53) | (in[c + 11] & 0x00000000000003ffULL) << 11);
        out[w + 34] = ((in[c + 11] & 0x000000007ffffc00ULL) >> 10);
        out[w + 35] = ((in[c + 11] & 0x000fffff80000000ULL) >> 31);
        out[w + 36] = (((in[c + 11] & 0xfff0000000000000ULL) >> 52) | (in[c + 12] & 0x00000000000001ffULL) << 12);
        out[w + 37] = ((in[c + 12] & 0x000000003ffffe00ULL) >>  9);
        out[w + 38] = ((in[c + 12] & 0x0007ffffc0000000ULL) >> 30);
        out[w + 39] = (((in[c + 12] & 0xfff8000000000000ULL) >> 51) | (in[c + 13] & 0x00000000000000ffULL) << 13);
        out[w + 40] = ((in[c + 13] & 0x000000001fffff00ULL) >>  8);
        out[w + 41] = ((in[c + 13] & 0x0003ffffe0000000ULL) >> 29);
        out[w + 42] = (((in[c + 13] & 0xfffc000000000000ULL) >> 50) | (in[c + 14] & 0x000000000000007fULL) << 14);
        out[w + 43] = ((in[c + 14] & 0x000000000fffff80ULL) >>  7);
        out[w + 44] = ((in[c + 14] & 0x0001fffff0000000ULL) >> 28);
        out[w + 45] = (((in[c + 14] & 0xfffe000000000000ULL) >> 49) | (in[c + 15] & 0x000000000000003fULL) << 15);
        out[w + 46] = ((in[c + 15] & 0x0000000007ffffc0ULL) >>  6);
        out[w + 47] = ((in[c + 15] & 0x0000fffff8000000ULL) >> 27);
        out[w + 48] = (((in[c + 15] & 0xffff000000000000ULL) >> 48) | (in[c + 16] & 0x000000000000001fULL) << 16);
        out[w + 49] = ((in[c + 16] & 0x0000000003ffffe0ULL) >>  5);
        out[w + 50] = ((in[c + 16] & 0x00007ffffc000000ULL) >> 26);
        out[w + 51] = (((in[c + 16] & 0xffff800000000000ULL) >> 47) | (in[c + 17] & 0x000000000000000fULL) << 17);
        out[w + 52] = ((in[c + 17] & 0x0000000001fffff0ULL) >>  4);
        out[w + 53] = ((in[c + 17] & 0x00003ffffe000000ULL) >> 25);
        out[w + 54] = (((in[c + 17] & 0xffffc00000000000ULL) >> 46) | (in[c + 18] & 0x0000000000000007ULL) << 18);
        out[w + 55] = ((in[c + 18] & 0x0000000000fffff8ULL) >>  3);
        out[w + 56] = ((in[c + 18] & 0x00001fffff000000ULL) >> 24);
        out[w + 57] = (((in[c + 18] & 0xffffe00000000000ULL) >> 45) | (in[c + 19] & 0x0000000000000003ULL) << 19);
        out[w + 58] = ((in[c + 19] & 0x00000000007ffffcULL) >>  2);
        out[w + 59] = ((in[c + 19] & 0x00000fffff800000ULL) >> 23);
        out[w + 60] = (((in[c + 19] & 0xfffff00000000000ULL) >> 44) | (in[c + 20] & 0x0000000000000001ULL) << 20);
        out[w + 61] = ((in[c + 20] & 0x00000000003ffffeULL) >>  1);
        out[w + 62] = ((in[c + 20] & 0x000007ffffc00000ULL) >> 22);
        out[w + 63] = ((in[c + 20] & 0xfffff80000000000ULL) >> 43);
    }
}
void
unpack_22_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 11) {
        out[w +  0] = ((in[c +  0] & 0x00000000003fffffULL) >>  0);
        out[w +  1] = ((in[c +  0] & 0x00000fffffc00000ULL) >> 22);
        out[w +  2] = (((in[c +  0] & 0xfffff00000000000ULL) >> 44) | (in[c +  1] & 0x0000000000000003ULL) << 20);
        out[w +  3] = ((in[c +  1] & 0x0000000000fffffcULL) >>  2);
        out[w +  4] = ((in[c +  1] & 0x00003fffff000000ULL) >> 24);
        out[w +  5] = (((in[c +  1] & 0xffffc00000000000ULL) >> 46) | (in[c +  2] & 0x000000000000000fULL) << 18);
        out[w +  6] = ((in[c +  2] & 0x0000000003fffff0ULL) >>  4);
        out[w +  7] = ((in[c +  2] & 0x0000fffffc000000ULL) >> 26);
        out[w +  8] = (((in[c +  2] & 0xffff000000000000ULL) >> 48) | (in[c +  3] & 0x000000000000003fULL) << 16);
        out[w +  9] = ((in[c +  3] & 0x000000000fffffc0ULL) >>  6);
        out[w + 10] = ((in[c +  3] & 0x0003fffff0000000ULL) >> 28);
        out[w + 11] = (((in[c +  3] & 0xfffc000000000000ULL) >> 50) | (in[c +  4] & 0x00000000000000ffULL) << 14);
        out[w + 12] = ((in[c +  4] & 0x000000003fffff00ULL) >>  8);
        out[w + 13] = ((in[c +  4] & 0x000fffffc0000000ULL) >> 30);
        out[w + 14] = (((in[c +  4] & 0xfff0000000000000ULL) >> 52) | (in[c +  5] & 0x00000000000003ffULL) << 12);
        out[w + 15] = ((in[c +  5] & 0x00000000fffffc00ULL) >> 10);
        out[w + 16] = ((in[c +  5] & 0x003fffff00000000ULL) >> 32);
        out[w + 17] = (((in[c +  5] & 0xffc0000000000000ULL) >> 54) | (in[c +  6] & 0x0000000000000fffULL) << 10);
        out[w + 18] = ((in[c +  6] & 0x00000003fffff000ULL) >> 12);
        out[w + 19] = ((in[c +  6] & 0x00fffffc00000000ULL) >> 34);
        out[w + 20] = (((in[c +  6] & 0xff00000000000000ULL) >> 56) | (in[c +  7] & 0x0000000000003fffULL) << 8);
        out[w + 21] = ((in[c +  7] & 0x0000000fffffc000ULL) >> 14);
        out[w + 22] = ((in[c +  7] & 0x03fffff000000000ULL) >> 36);
        out[w + 23] = (((in[c +  7] & 0xfc00000000000000ULL) >> 58) | (in[c +  8] & 0x000000000000ffffULL) << 6);
        out[w + 24] = ((in[c +  8] & 0x0000003fffff0000ULL) >> 16);
        out[w + 25] = ((in[c +  8] & 0x0fffffc000000000ULL) >> 38);
        out[w + 26] = (((in[c +  8] & 0xf000000000000000ULL) >> 60) | (in[c +  9] & 0x000000000003ffffULL) << 4);
        out[w + 27] = ((in[c +  9] & 0x000000fffffc0000ULL) >> 18);
        out[w + 28] = ((in[c +  9] & 0x3fffff0000000000ULL) >> 40);
        out[w + 29] = (((in[c +  9] & 0xc000000000000000ULL) >> 62) | (in[c + 10] & 0x00000000000fffffULL) << 2);
        out[w + 30] = ((in[c + 10] & 0x000003fffff00000ULL) >> 20);
        out[w + 31] = ((in[c + 10] & 0xfffffc0000000000ULL) >> 42);
    }
}
void
unpack_23_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 23) {
        out[w +  0] = ((in[c +  0] & 0x00000000007fffffULL) >>  0);
        out[w +  1] = ((in[c +  0] & 0x00003fffff800000ULL) >> 23);
        out[w +  2] = (((in[c +  0] & 0xffffc00000000000ULL) >> 46) | (in[c +  1] & 0x000000000000001fULL) << 18);
        out[w +  3] = ((in[c +  1] & 0x000000000fffffe0ULL) >>  5);
        out[w +  4] = ((in[c +  1] & 0x0007fffff0000000ULL) >> 28);
        out[w +  5] = (((in[c +  1] & 0xfff8000000000000ULL) >> 51) | (in[c +  2] & 0x00000000000003ffULL) << 13);
        out[w +  6] = ((in[c +  2] & 0x00000001fffffc00ULL) >> 10);
        out[w +  7] = ((in[c +  2] & 0x00fffffe00000000ULL) >> 33);
        out[w +  8] = (((in[c +  2] & 0xff00000000000000ULL) >> 56) | (in[c +  3] & 0x0000000000007fffULL) << 8);
        out[w +  9] = ((in[c +  3] & 0x0000003fffff8000ULL) >> 15);
        out[w + 10] = ((in[c +  3] & 0x1fffffc000000000ULL) >> 38);
        out[w + 11] = (((in[c +  3] & 0xe000000000000000ULL) >> 61) | (in[c +  4] & 0x00000000000fffffULL) << 3);
        out[w + 12] = ((in[c +  4] & 0x000007fffff00000ULL) >> 20);
        out[w + 13] = (((in[c +  4] & 0xfffff80000000000ULL) >> 43) | (in[c +  5] & 0x0000000000000003ULL) << 21);
        out[w + 14] = ((in[c +  5] & 0x0000000001fffffcULL) >>  2);
        out[w + 15] = ((in[c +  5] & 0x0000fffffe000000ULL) >> 25);
        out[w + 16] = (((in[c +  5] & 0xffff000000000000ULL) >> 48) | (in[c +  6] & 0x000000000000007fULL) << 16);
        out[w + 17] = ((in[c +  6] & 0x000000003fffff80ULL) >>  7);
        out[w + 18] = ((in[c +  6] & 0x001fffffc0000000ULL) >> 30);
        out[w + 19] = (((in[c +  6] & 0xffe0000000000000ULL) >> 53) | (in[c +  7] & 0x0000000000000fffULL) << 11);
        out[w + 20] = ((in[c +  7] & 0x00000007fffff000ULL) >> 12);
        out[w + 21] = ((in[c +  7] & 0x03fffff800000000ULL) >> 35);
        out[w + 22] = (((in[c +  7] & 0xfc00000000000000ULL) >> 58) | (in[c +  8] & 0x000000000001ffffULL) << 6);
        out[w + 23] = ((in[c +  8] & 0x000000fffffe0000ULL) >> 17);
        out[w + 24] = ((in[c +  8] & 0x7fffff0000000000ULL) >> 40);
        out[w + 25] = (((in[c +  8] & 0x8000000000000000ULL) >> 63) | (in[c +  9] & 0x00000000003fffffULL) << 1);
        out[w + 26] = ((in[c +  9] & 0x00001fffffc00000ULL) >> 22);
        out[w + 27] = (((in[c +  9] & 0xffffe00000000000ULL) >> 45) | (in[c + 10] & 0x000000000000000fULL) << 19);
        out[w + 28] = ((in[c + 10] & 0x0000000007fffff0ULL) >>  4);
        out[w + 29] = ((in[c + 10] & 0x0003fffff8000000ULL) >> 27);
        out[w + 30] = (((in[c + 10] & 0xfffc000000000000ULL) >> 50) | (in[c + 11] & 0x00000000000001ffULL) << 14);
        out[w + 31] = ((in[c + 11] & 0x00000000fffffe00ULL) >>  9);
        out[w + 32] = ((in[c + 11] & 0x007fffff00000000ULL) >> 32);
        out[w + 33] = (((in[c + 11] & 0xff80000000000000ULL) >> 55) | (in[c + 12] & 0x0000000000003fffULL) << 9);
        out[w + 34] = ((in[c + 12] & 0x0000001fffffc000ULL) >> 14);
        out[w + 35] = ((in[c + 12] & 0x0fffffe000000000ULL) >> 37);
        out[w + 36] = (((in[c + 12] & 0xf000000000000000ULL) >> 60) | (in[c + 13] & 0x000000000007ffffULL) << 4);
        out[w + 37] = ((in[c + 13] & 0x000003fffff80000ULL) >> 19);
        out[w + 38] = (((in[c + 13] & 0xfffffc0000000000ULL) >> 42) | (in[c + 14] & 0x0000000000000001ULL) << 22);
        out[w + 39] = ((in[c + 14] & 0x0000000000fffffeULL) >>  1);
        out[w + 40] = ((in[c + 14] & 0x00007fffff000000ULL) >> 24);
        out[w + 41] = (((in[c + 14] & 0xffff800000000000ULL) >> 47) | (in[c + 15] & 0x000000000000003fULL) << 17);
        out[w + 42] = ((in[c + 15] & 0x000000001fffffc0ULL) >>  6);
        out[w + 43] = ((in[c + 15] & 0x000fffffe0000000ULL) >> 29);
        out[w + 44] = (((in[c + 15] & 0xfff0000000000000ULL) >> 52) | (in[c + 16] & 0x00000000000007ffULL) << 12);
        out[w + 45] = ((in[c + 16] & 0x00000003fffff800ULL) >> 11);
        out[w + 46] = ((in[c + 16] & 0x01fffffc00000000ULL) >> 34);
        out[w + 47] = (((in[c + 16] & 0xfe00000000000000ULL) >> 57) | (in[c + 17] & 0x000000000000ffffULL) << 7);
        out[w + 48] = ((in[c + 17] & 0x0000007fffff0000ULL) >> 16);
        out[w + 49] = ((in[c + 17] & 0x3fffff8000000000ULL) >> 39);
        out[w + 50] = (((in[c + 17] & 0xc000000000000000ULL) >> 62) | (in[c + 18] & 0x00000000001fffffULL) << 2);
        out[w + 51] = ((in[c + 18] & 0x00000fffffe00000ULL) >> 21);
        out[w + 52] = (((in[c + 18] & 0xfffff00000000000ULL) >> 44) | (in[c + 19] & 0x0000000000000007ULL) << 20);
        out[w + 53] = ((in[c + 19] & 0x0000000003fffff8ULL) >>  3);
        out[w + 54] = ((in[c + 19] & 0x0001fffffc000000ULL) >> 26);
        out[w + 55] = (((in[c + 19] & 0xfffe000000000000ULL) >> 49) | (in[c + 20] & 0x00000000000000ffULL) << 15);
        out[w + 56] = ((in[c + 20] & 0x000000007fffff00ULL) >>  8);
        out[w + 57] = ((in[c + 20] & 0x003fffff80000000ULL) >> 31);
        out[w + 58] = (((in[c + 20] & 0xffc0000000000000ULL) >> 54) | (in[c + 21] & 0x0000000000001fffULL) << 10);
        out[w + 59] = ((in[c + 21] & 0x0000000fffffe000ULL) >> 13);
        out[w + 60] = ((in[c + 21] & 0x07fffff000000000ULL) >> 36);
        out[w + 61] = (((in[c + 21] & 0xf800000000000000ULL) >> 59) | (in[c + 22] & 0x000000000003ffffULL) << 5);
        out[w + 62] = ((in[c + 22] & 0x000001fffffc0000ULL) >> 18);
        out[w + 63] = ((in[c + 22] & 0xfffffe0000000000ULL) >> 41);
    }
}
void
unpack_24_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 8, c += 3) {
        out[w + 0] = ((in[c + 0] & 0x0000000000ffffffULL) >>  0);
        out[w + 1] = ((in[c + 0] & 0x0000ffffff000000ULL) >> 24);
        out[w + 2] = (((in[c + 0] & 0xffff000000000000ULL) >> 48) | (in[c + 1] & 0x00000000000000ffULL) << 16);
        out[w + 3] = ((in[c + 1] & 0x00000000ffffff00ULL) >>  8);
        out[w + 4] = ((in[c + 1] & 0x00ffffff00000000ULL) >> 32);
        out[w + 5] = (((in[c + 1] & 0xff00000000000000ULL) >> 56) | (in[c + 2] & 0x000000000000ffffULL) << 8);
        out[w + 6] = ((in[c + 2] & 0x000000ffffff0000ULL) >> 16);
        out[w + 7] = ((in[c + 2] & 0xffffff0000000000ULL) >> 40);
    }
}
void
unpack_25_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 25) {
        out[w +  0] = ((in[c +  0] & 0x0000000001ffffffULL) >>  0);
        out[w +  1] = ((in[c +  0] & 0x0003fffffe000000ULL) >> 25);
        out[w +  2] = (((in[c +  0] & 0xfffc000000000000ULL) >> 50) | (in[c +  1] & 0x00000000000007ffULL) << 14);
        out[w +  3] = ((in[c +  1] & 0x0000000ffffff800ULL) >> 11);
        out[w +  4] = ((in[c +  1] & 0x1ffffff000000000ULL) >> 36);
        out[w +  5] = (((in[c +  1] & 0xe000000000000000ULL) >> 61) | (in[c +  2] & 0x00000000003fffffULL) << 3);
        out[w +  6] = ((in[c +  2] & 0x00007fffffc00000ULL) >> 22);
        out[w +  7] = (((in[c +  2] & 0xffff800000000000ULL) >> 47) | (in[c +  3] & 0x00000000000000ffULL) << 17);
        out[w +  8] = ((in[c +  3] & 0x00000001ffffff00ULL) >>  8);
        out[w +  9] = ((in[c +  3] & 0x03fffffe00000000ULL) >> 33);
        out[w + 10] = (((in[c +  3] & 0xfc00000000000000ULL) >> 58) | (in[c +  4] & 0x000000000007ffffULL) << 6);
        out[w + 11] = ((in[c +  4] & 0x00000ffffff80000ULL) >> 19);
        out[w + 12] = (((in[c +  4] & 0xfffff00000000000ULL) >> 44) | (in[c +  5] & 0x000000000000001fULL) << 20);
        out[w + 13] = ((in[c +  5] & 0x000000003fffffe0ULL) >>  5);
        out[w + 14] = ((in[c +  5] & 0x007fffffc0000000ULL) >> 30);
        out[w + 15] = (((in[c +  5] & 0xff80000000000000ULL) >> 55) | (in[c +  6] & 0x000000000000ffffULL) << 9);
        out[w + 16] = ((in[c +  6] & 0x000001ffffff0000ULL) >> 16);
        out[w + 17] = (((in[c +  6] & 0xfffffe0000000000ULL) >> 41) | (in[c +  7] & 0x0000000000000003ULL) << 23);
        out[w + 18] = ((in[c +  7] & 0x0000000007fffffcULL) >>  2);
        out[w + 19] = ((in[c +  7] & 0x000ffffff8000000ULL) >> 27);
        out[w + 20] = (((in[c +  7] & 0xfff0000000000000ULL) >> 52) | (in[c +  8] & 0x0000000000001fffULL) << 12);
        out[w + 21] = ((in[c +  8] & 0x0000003fffffe000ULL) >> 13);
        out[w + 22] = ((in[c +  8] & 0x7fffffc000000000ULL) >> 38);
        out[w + 23] = (((in[c +  8] & 0x8000000000000000ULL) >> 63) | (in[c +  9] & 0x0000000000ffffffULL) << 1);
        out[w + 24] = ((in[c +  9] & 0x0001ffffff000000ULL) >> 24);
        out[w + 25] = (((in[c +  9] & 0xfffe000000000000ULL) >> 49) | (in[c + 10] & 0x00000000000003ffULL) << 15);
        out[w + 26] = ((in[c + 10] & 0x00000007fffffc00ULL) >> 10);
        out[w + 27] = ((in[c + 10] & 0x0ffffff800000000ULL) >> 35);
        out[w + 28] = (((in[c + 10] & 0xf000000000000000ULL) >> 60) | (in[c + 11] & 0x00000000001fffffULL) << 4);
        out[w + 29] = ((in[c + 11] & 0x00003fffffe00000ULL) >> 21);
        out[w + 30] = (((in[c + 11] & 0xffffc00000000000ULL) >> 46) | (in[c + 12] & 0x000000000000007fULL) << 18);
        out[w + 31] = ((in[c + 12] & 0x00000000ffffff80ULL) >>  7);
        out[w + 32] = ((in[c + 12] & 0x01ffffff00000000ULL) >> 32);
        out[w + 33] = (((in[c + 12] & 0xfe00000000000000ULL) >> 57) | (in[c + 13] & 0x000000000003ffffULL) << 7);
        out[w + 34] = ((in[c + 13] & 0x000007fffffc0000ULL) >> 18);
        out[w + 35] = (((in[c + 13] & 0xfffff80000000000ULL) >> 43) | (in[c + 14] & 0x000000000000000fULL) << 21);
        out[w + 36] = ((in[c + 14] & 0x000000001ffffff0ULL) >>  4);
        out[w + 37] = ((in[c + 14] & 0x003fffffe0000000ULL) >> 29);
        out[w + 38] = (((in[c + 14] & 0xffc0000000000000ULL) >> 54) | (in[c + 15] & 0x0000000000007fffULL) << 10);
        out[w + 39] = ((in[c + 15] & 0x000000ffffff8000ULL) >> 15);
        out[w + 40] = (((in[c + 15] & 0xffffff0000000000ULL) >> 40) | (in[c + 16] & 0x0000000000000001ULL) << 24);
        out[w + 41] = ((in[c + 16] & 0x0000000003fffffeULL) >>  1);
        out[w + 42] = ((in[c + 16] & 0x0007fffffc000000ULL) >> 26);
        out[w + 43] = (((in[c + 16] & 0xfff8000000000000ULL) >> 51) | (in[c + 17] & 0x0000000000000fffULL) << 13);
        out[w + 44] = ((in[c + 17] & 0x0000001ffffff000ULL) >> 12);
        out[w + 45] = ((in[c + 17] & 0x3fffffe000000000ULL) >> 37);
        out[w + 46] = (((in[c + 17] & 0xc000000000000000ULL) >> 62) | (in[c + 18] & 0x00000000007fffffULL) << 2);
        out[w + 47] = ((in[c + 18] & 0x0000ffffff800000ULL) >> 23);
        out[w + 48] = (((in[c + 18] & 0xffff000000000000ULL) >> 48) | (in[c + 19] & 0x00000000000001ffULL) << 16);
        out[w + 49] = ((in[c + 19] & 0x00000003fffffe00ULL) >>  9);
        out[w + 50] = ((in[c + 19] & 0x07fffffc00000000ULL) >> 34);
        out[w + 51] = (((in[c + 19] & 0xf800000000000000ULL) >> 59) | (in[c + 20] & 0x00000000000fffffULL) << 5);
        out[w + 52] = ((in[c + 20] & 0x00001ffffff00000ULL) >> 20);
        out[w + 53] = (((in[c + 20] & 0xffffe00000000000ULL) >> 45) | (in[c + 21] & 0x000000000000003fULL) << 19);
        out[w + 54] = ((in[c + 21] & 0x000000007fffffc0ULL) >>  6);
        out[w + 55] = ((in[c + 21] & 0x00ffffff80000000ULL) >> 31);
        out[w + 56] = (((in[c + 21] & 0xff00000000000000ULL) >> 56) | (in[c + 22] & 0x000000000001ffffULL) << 8);
        out[w + 57] = ((in[c + 22] & 0x000003fffffe0000ULL) >> 17);
        out[w + 58] = (((in[c + 22] & 0xfffffc0000000000ULL) >> 42) | (in[c + 23] & 0x0000000000000007ULL) << 22);
        out[w + 59] = ((in[c + 23] & 0x000000000ffffff8ULL) >>  3);
        out[w + 60] = ((in[c + 23] & 0x001ffffff0000000ULL) >> 28);
        out[w + 61] = (((in[c + 23] & 0xffe0000000000000ULL) >> 53) | (in[c + 24] & 0x0000000000003fffULL) << 11);
        out[w + 62] = ((in[c + 24] & 0x0000007fffffc000ULL) >> 14);
        out[w + 63] = ((in[c + 24] & 0xffffff8000000000ULL) >> 39);
    }
}
void
unpack_26_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 13) {
        out[w +  0] = ((in[c +  0] & 0x0000000003ffffffULL) >>  0);
        out[w +  1] = ((in[c +  0] & 0x000ffffffc000000ULL) >> 26);
        out[w +  2] = (((in[c +  0] & 0xfff0000000000000ULL) >> 52) | (in[c +  1] & 0x0000000000003fffULL) << 12);
        out[w +  3] = ((in[c +  1] & 0x000000ffffffc000ULL) >> 14);
        out[w +  4] = (((in[c +  1] & 0xffffff0000000000ULL) >> 40) | (in[c +  2] & 0x0000000000000003ULL) << 24);
        out[w +  5] = ((in[c +  2] & 0x000000000ffffffcULL) >>  2);
        out[w +  6] = ((in[c +  2] & 0x003ffffff0000000ULL) >> 28);
        out[w +  7] = (((in[c +  2] & 0xffc0000000000000ULL) >> 54) | (in[c +  3] & 0x000000000000ffffULL) << 10);
        out[w +  8] = ((in[c +  3] & 0x000003ffffff0000ULL) >> 16);
        out[w +  9] = (((in[c +  3] & 0xfffffc0000000000ULL) >> 42) | (in[c +  4] & 0x000000000000000fULL) << 22);
        out[w + 10] = ((in[c +  4] & 0x000000003ffffff0ULL) >>  4);
        out[w + 11] = ((in[c +  4] & 0x00ffffffc0000000ULL) >> 30);
        out[w + 12] = (((in[c +  4] & 0xff00000000000000ULL) >> 56) | (in[c +  5] & 0x000000000003ffffULL) << 8);
        out[w + 13] = ((in[c +  5] & 0x00000ffffffc0000ULL) >> 18);
        out[w + 14] = (((in[c +  5] & 0xfffff00000000000ULL) >> 44) | (in[c +  6] & 0x000000000000003fULL) << 20);
        out[w + 15] = ((in[c +  6] & 0x00000000ffffffc0ULL) >>  6);
        out[w + 16] = ((in[c +  6] & 0x03ffffff00000000ULL) >> 32);
        out[w + 17] = (((in[c +  6] & 0xfc00000000000000ULL) >> 58) | (in[c +  7] & 0x00000000000fffffULL) << 6);
        out[w + 18] = ((in[c +  7] & 0x00003ffffff00000ULL) >> 20);
        out[w + 19] = (((in[c +  7] & 0xffffc00000000000ULL) >> 46) | (in[c +  8] & 0x00000000000000ffULL) << 18);
        out[w + 20] = ((in[c +  8] & 0x00000003ffffff00ULL) >>  8);
        out[w + 21] = ((in[c +  8] & 0x0ffffffc00000000ULL) >> 34);
        out[w + 22] = (((in[c +  8] & 0xf000000000000000ULL) >> 60) | (in[c +  9] & 0x00000000003fffffULL) << 4);
        out[w + 23] = ((in[c +  9] & 0x0000ffffffc00000ULL) >> 22);
        out[w + 24] = (((in[c +  9] & 0xffff000000000000ULL) >> 48) | (in[c + 10] & 0x00000000000003ffULL) << 16);
        out[w + 25] = ((in[c + 10] & 0x0000000ffffffc00ULL) >> 10);
        out[w + 26] = ((in[c + 10] & 0x3ffffff000000000ULL) >> 36);
        out[w + 27] = (((in[c + 10] & 0xc000000000000000ULL) >> 62) | (in[c + 11] & 0x0000000000ffffffULL) << 2);
        out[w + 28] = ((in[c + 11] & 0x0003ffffff000000ULL) >> 24);
        out[w + 29] = (((in[c + 11] & 0xfffc000000000000ULL) >> 50) | (in[c + 12] & 0x0000000000000fffULL) << 14);
        out[w + 30] = ((in[c + 12] & 0x0000003ffffff000ULL) >> 12);
        out[w + 31] = ((in[c + 12] & 0xffffffc000000000ULL) >> 38);
    }
}
void
unpack_27_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 27) {
        out[w +  0] = ((in[c +  0] & 0x0000000007ffffffULL) >>  0);
        out[w +  1] = ((in[c +  0] & 0x003ffffff8000000ULL) >> 27);
        out[w +  2] = (((in[c +  0] & 0xffc0000000000000ULL) >> 54) | (in[c +  1] & 0x000000000001ffffULL) << 10);
        out[w +  3] = ((in[c +  1] & 0x00000ffffffe0000ULL) >> 17);
        out[w +  4] = (((in[c +  1] & 0xfffff00000000000ULL) >> 44) | (in[c +  2] & 0x000000000000007fULL) << 20);
        out[w +  5] = ((in[c +  2] & 0x00000003ffffff80ULL) >>  7);
        out[w +  6] = ((in[c +  2] & 0x1ffffffc00000000ULL) >> 34);
        out[w +  7] = (((in[c +  2] & 0xe000000000000000ULL) >> 61) | (in[c +  3] & 0x0000000000ffffffULL) << 3);
        out[w +  8] = ((in[c +  3] & 0x0007ffffff000000ULL) >> 24);
        out[w +  9] = (((in[c +  3] & 0xfff8000000000000ULL) >> 51) | (in[c +  4] & 0x0000000000003fffULL) << 13);
        out[w + 10] = ((in[c +  4] & 0x000001ffffffc000ULL) >> 14);
        out[w + 11] = (((in[c +  4] & 0xfffffe0000000000ULL) >> 41) | (in[c +  5] & 0x000000000000000fULL) << 23);
        out[w + 12] = ((in[c +  5] & 0x000000007ffffff0ULL) >>  4);
        out[w + 13] = ((in[c +  5] & 0x03ffffff80000000ULL) >> 31);
        out[w + 14] = (((in[c +  5] & 0xfc00000000000000ULL) >> 58) | (in[c +  6] & 0x00000000001fffffULL) << 6);
        out[w + 15] = ((in[c +  6] & 0x0000ffffffe00000ULL) >> 21);
        out[w + 16] = (((in[c +  6] & 0xffff000000000000ULL) >> 48) | (in[c +  7] & 0x00000000000007ffULL) << 16);
        out[w + 17] = ((in[c +  7] & 0x0000003ffffff800ULL) >> 11);
        out[w + 18] = (((in[c +  7] & 0xffffffc000000000ULL) >> 38) | (in[c +  8] & 0x0000000000000001ULL) << 26);
        out[w + 19] = ((in[c +  8] & 0x000000000ffffffeULL) >>  1);
        out[w + 20] = ((in[c +  8] & 0x007ffffff0000000ULL) >> 28);
        out[w + 21] = (((in[c +  8] & 0xff80000000000000ULL) >> 55) | (in[c +  9] & 0x000000000003ffffULL) << 9);
        out[w + 22] = ((in[c +  9] & 0x00001ffffffc0000ULL) >> 18);
        out[w + 23] = (((in[c +  9] & 0xffffe00000000000ULL) >> 45) | (in[c + 10] & 0x00000000000000ffULL) << 19);
        out[w + 24] = ((in[c + 10] & 0x00000007ffffff00ULL) >>  8);
        out[w + 25] = ((in[c + 10] & 0x3ffffff800000000ULL) >> 35);
        out[w + 26] = (((in[c + 10] & 0xc000000000000000ULL) >> 62) | (in[c + 11] & 0x0000000001ffffffULL) << 2);
        out[w + 27] = ((in[c + 11] & 0x000ffffffe000000ULL) >> 25);
        out[w + 28] = (((in[c + 11] & 0xfff0000000000000ULL) >> 52) | (in[c + 12] & 0x0000000000007fffULL) << 12);
        out[w + 29] = ((in[c + 12] & 0x000003ffffff8000ULL) >> 15);
        out[w + 30] = (((in[c + 12] & 0xfffffc0000000000ULL) >> 42) | (in[c + 13] & 0x000000000000001fULL) << 22);
        out[w + 31] = ((in[c + 13] & 0x00000000ffffffe0ULL) >>  5);
        out[w + 32] = ((in[c + 13] & 0x07ffffff00000000ULL) >> 32);
        out[w + 33] = (((in[c + 13] & 0xf800000000000000ULL) >> 59) | (in[c + 14] & 0x00000000003fffffULL) << 5);
        out[w + 34] = ((in[c + 14] & 0x0001ffffffc00000ULL) >> 22);
        out[w + 35] = (((in[c + 14] & 0xfffe000000000000ULL) >> 49) | (in[c + 15] & 0x0000000000000fffULL) << 15);
        out[w + 36] = ((in[c + 15] & 0x0000007ffffff000ULL) >> 12);
        out[w + 37] = (((in[c + 15] & 0xffffff8000000000ULL) >> 39) | (in[c + 16] & 0x0000000000000003ULL) << 25);
        out[w + 38] = ((in[c + 16] & 0x000000001ffffffcULL) >>  2);
        out[w + 39] = ((in[c + 16] & 0x00ffffffe0000000ULL) >> 29);
        out[w + 40] = (((in[c + 16] & 0xff00000000000000ULL) >> 56) | (in[c + 17] & 0x000000000007ffffULL) << 8);
        out[w + 41] = ((in[c + 17] & 0x00003ffffff80000ULL) >> 19);
        out[w + 42] = (((in[c + 17] & 0xffffc00000000000ULL) >> 46) | (in[c + 18] & 0x00000000000001ffULL) << 18);
        out[w + 43] = ((in[c + 18] & 0x0000000ffffffe00ULL) >>  9);
        out[w + 44] = ((in[c + 18] & 0x7ffffff000000000ULL) >> 36);
        out[w + 45] = (((in[c + 18] & 0x8000000000000000ULL) >> 63) | (in[c + 19] & 0x0000000003ffffffULL) << 1);
        out[w + 46] = ((in[c + 19] & 0x001ffffffc000000ULL) >> 26);
        out[w + 47] = (((in[c + 19] & 0xffe0000000000000ULL) >> 53) | (in[c + 20] & 0x000000000000ffffULL) << 11);
        out[w + 48] = ((in[c + 20] & 0x000007ffffff0000ULL) >> 16);
        out[w + 49] = (((in[c + 20] & 0xfffff80000000000ULL) >> 43) | (in[c + 21] & 0x000000000000003fULL) << 21);
        out[w + 50] = ((in[c + 21] & 0x00000001ffffffc0ULL) >>  6);
        out[w + 51] = ((in[c + 21] & 0x0ffffffe00000000ULL) >> 33);
        out[w + 52] = (((in[c + 21] & 0xf000000000000000ULL) >> 60) | (in[c + 22] & 0x00000000007fffffULL) << 4);
        out[w + 53] = ((in[c + 22] & 0x0003ffffff800000ULL) >> 23);
        out[w + 54] = (((in[c + 22] & 0xfffc000000000000ULL) >> 50) | (in[c + 23] & 0x0000000000001fffULL) << 14);
        out[w + 55] = ((in[c + 23] & 0x000000ffffffe000ULL) >> 13);
        out[w + 56] = (((in[c + 23] & 0xffffff0000000000ULL) >> 40) | (in[c + 24] & 0x0000000000000007ULL) << 24);
        out[w + 57] = ((in[c + 24] & 0x000000003ffffff8ULL) >>  3);
        out[w + 58] = ((in[c + 24] & 0x01ffffffc0000000ULL) >> 30);
        out[w + 59] = (((in[c + 24] & 0xfe00000000000000ULL) >> 57) | (in[c + 25] & 0x00000000000fffffULL) << 7);
        out[w + 60] = ((in[c + 25] & 0x00007ffffff00000ULL) >> 20);
        out[w + 61] = (((in[c + 25] & 0xffff800000000000ULL) >> 47) | (in[c + 26] & 0x00000000000003ffULL) << 17);
        out[w + 62] = ((in[c + 26] & 0x0000001ffffffc00ULL) >> 10);
        out[w + 63] = ((in[c + 26] & 0xffffffe000000000ULL) >> 37);
    }
}
void
unpack_28_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 16, c += 7) {
        out[w +  0] = ((in[c + 0] & 0x000000000fffffffULL) >>  0);
        out[w +  1] = ((in[c + 0] & 0x00fffffff0000000ULL) >> 28);
        out[w +  2] = (((in[c + 0] & 0xff00000000000000ULL) >> 56) | (in[c + 1] & 0x00000000000fffffULL) << 8);
        out[w +  3] = ((in[c + 1] & 0x0000fffffff00000ULL) >> 20);
        out[w +  4] = (((in[c + 1] & 0xffff000000000000ULL) >> 48) | (in[c + 2] & 0x0000000000000fffULL) << 16);
        out[w +  5] = ((in[c + 2] & 0x000000fffffff000ULL) >> 12);
        out[w +  6] = (((in[c + 2] & 0xffffff0000000000ULL) >> 40) | (in[c + 3] & 0x000000000000000fULL) << 24);
        out[w +  7] = ((in[c + 3] & 0x00000000fffffff0ULL) >>  4);
        out[w +  8] = ((in[c + 3] & 0x0fffffff00000000ULL) >> 32);
        out[w +  9] = (((in[c + 3] & 0xf000000000000000ULL) >> 60) | (in[c + 4] & 0x0000000000ffffffULL) << 4);
        out[w + 10] = ((in[c + 4] & 0x000fffffff000000ULL) >> 24);
        out[w + 11] = (((in[c + 4] & 0xfff0000000000000ULL) >> 52) | (in[c + 5] & 0x000000000000ffffULL) << 12);
        out[w + 12] = ((in[c + 5] & 0x00000fffffff0000ULL) >> 16);
        out[w + 13] = (((in[c + 5] & 0xfffff00000000000ULL) >> 44) | (in[c + 6] & 0x00000000000000ffULL) << 20);
        out[w + 14] = ((in[c + 6] & 0x0000000fffffff00ULL) >>  8);
        out[w + 15] = ((in[c + 6] & 0xfffffff000000000ULL) >> 36);
    }
}
void
unpack_29_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 29) {
        out[w +  0] = ((in[c +  0] & 0x000000001fffffffULL) >>  0);
        out[w +  1] = ((in[c +  0] & 0x03ffffffe0000000ULL) >> 29);
        out[w +  2] = (((in[c +  0] & 0xfc00000000000000ULL) >> 58) | (in[c +  1] & 0x00000000007fffffULL) << 6);
        out[w +  3] = ((in[c +  1] & 0x000fffffff800000ULL) >> 23);
        out[w +  4] = (((in[c +  1] & 0xfff0000000000000ULL) >> 52) | (in[c +  2] & 0x000000000001ffffULL) << 12);
        out[w +  5] = ((in[c +  2] & 0x00003ffffffe0000ULL) >> 17);
        out[w +  6] = (((in[c +  2] & 0xffffc00000000000ULL) >> 46) | (in[c +  3] & 0x00000000000007ffULL) << 18);
        out[w +  7] = ((in[c +  3] & 0x000000fffffff800ULL) >> 11);
        out[w +  8] = (((in[c +  3] & 0xffffff0000000000ULL) >> 40) | (in[c +  4] & 0x000000000000001fULL) << 24);
        out[w +  9] = ((in[c +  4] & 0x00000003ffffffe0ULL) >>  5);
        out[w + 10] = ((in[c +  4] & 0x7ffffffc00000000ULL) >> 34);
        out[w + 11] = (((in[c +  4] & 0x8000000000000000ULL) >> 63) | (in[c +  5] & 0x000000000fffffffULL) << 1);
        out[w + 12] = ((in[c +  5] & 0x01fffffff0000000ULL) >> 28);
        out[w + 13] = (((in[c +  5] & 0xfe00000000000000ULL) >> 57) | (in[c +  6] & 0x00000000003fffffULL) << 7);
        out[w + 14] = ((in[c +  6] & 0x0007ffffffc00000ULL) >> 22);
        out[w + 15] = (((in[c +  6] & 0xfff8000000000000ULL) >> 51) | (in[c +  7] & 0x000000000000ffffULL) << 13);
        out[w + 16] = ((in[c +  7] & 0x00001fffffff0000ULL) >> 16);
        out[w + 17] = (((in[c +  7] & 0xffffe00000000000ULL) >> 45) | (in[c +  8] & 0x00000000000003ffULL) << 19);
        out[w + 18] = ((in[c +  8] & 0x0000007ffffffc00ULL) >> 10);
        out[w + 19] = (((in[c +  8] & 0xffffff8000000000ULL) >> 39) | (in[c +  9] & 0x000000000000000fULL) << 25);
        out[w + 20] = ((in[c +  9] & 0x00000001fffffff0ULL) >>  4);
        out[w + 21] = ((in[c +  9] & 0x3ffffffe00000000ULL) >> 33);
        out[w + 22] = (((in[c +  9] & 0xc000000000000000ULL) >> 62) | (in[c + 10] & 0x0000000007ffffffULL) << 2);
        out[w + 23] = ((in[c + 10] & 0x00fffffff8000000ULL) >> 27);
        out[w + 24] = (((in[c + 10] & 0xff00000000000000ULL) >> 56) | (in[c + 11] & 0x00000000001fffffULL) << 8);
        out[w + 25] = ((in[c + 11] & 0x0003ffffffe00000ULL) >> 21);
        out[w + 26] = (((in[c + 11] & 0xfffc000000000000ULL) >> 50) | (in[c + 12] & 0x0000000000007fffULL) << 14);
        out[w + 27] = ((in[c + 12] & 0x00000fffffff8000ULL) >> 15);
        out[w + 28] = (((in[c + 12] & 0xfffff00000000000ULL) >> 44) | (in[c + 13] & 0x00000000000001ffULL) << 20);
        out[w + 29] = ((in[c + 13] & 0x0000003ffffffe00ULL) >>  9);
        out[w + 30] = (((in[c + 13] & 0xffffffc000000000ULL) >> 38) | (in[c + 14] & 0x0000000000000007ULL) << 26);
        out[w + 31] = ((in[c + 14] & 0x00000000fffffff8ULL) >>  3);
        out[w + 32] = ((in[c + 14] & 0x1fffffff00000000ULL) >> 32);
        out[w + 33] = (((in[c + 14] & 0xe000000000000000ULL) >> 61) | (in[c + 15] & 0x0000000003ffffffULL) << 3);
        out[w + 34] = ((in[c + 15] & 0x007ffffffc000000ULL) >> 26);
        out[w + 35] = (((in[c + 15] & 0xff80000000000000ULL) >> 55) | (in[c + 16] & 0x00000000000fffffULL) << 9);
        out[w + 36] = ((in[c + 16] & 0x0001fffffff00000ULL) >> 20);
        out[w + 37] = (((in[c + 16] & 0xfffe000000000000ULL) >> 49) | (in[c + 17] & 0x0000000000003fffULL) << 15);
        out[w + 38] = ((in[c + 17] & 0x000007ffffffc000ULL) >> 14);
        out[w + 39] = (((in[c + 17] & 0xfffff80000000000ULL) >> 43) | (in[c + 18] & 0x00000000000000ffULL) << 21);
        out[w + 40] = ((in[c + 18] & 0x0000001fffffff00ULL) >>  8);
        out[w + 41] = (((in[c + 18] & 0xffffffe000000000ULL) >> 37) | (in[c + 19] & 0x0000000000000003ULL) << 27);
        out[w + 42] = ((in[c + 19] & 0x000000007ffffffcULL) >>  2);
        out[w + 43] = ((in[c + 19] & 0x0fffffff80000000ULL) >> 31);
        out[w + 44] = (((in[c + 19] & 0xf000000000000000ULL) >> 60) | (in[c + 20] & 0x0000000001ffffffULL) << 4);
        out[w + 45] = ((in[c + 20] & 0x003ffffffe000000ULL) >> 25);
        out[w + 46] = (((in[c + 20] & 0xffc0000000000000ULL) >> 54) | (in[c + 21] & 0x000000000007ffffULL) << 10);
        out[w + 47] = ((in[c + 21] & 0x0000fffffff80000ULL) >> 19);
        out[w + 48] = (((in[c + 21] & 0xffff000000000000ULL) >> 48) | (in[c + 22] & 0x0000000000001fffULL) << 16);
        out[w + 49] = ((in[c + 22] & 0x000003ffffffe000ULL) >> 13);
        out[w + 50] = (((in[c + 22] & 0xfffffc0000000000ULL) >> 42) | (in[c + 23] & 0x000000000000007fULL) << 22);
        out[w + 51] = ((in[c + 23] & 0x0000000fffffff80ULL) >>  7);
        out[w + 52] = (((in[c + 23] & 0xfffffff000000000ULL) >> 36) | (in[c + 24] & 0x0000000000000001ULL) << 28);
        out[w + 53] = ((in[c + 24] & 0x000000003ffffffeULL) >>  1);
        out[w + 54] = ((in[c + 24] & 0x07ffffffc0000000ULL) >> 30);
        out[w + 55] = (((in[c + 24] & 0xf800000000000000ULL) >> 59) | (in[c + 25] & 0x0000000000ffffffULL) << 5);
        out[w + 56] = ((in[c + 25] & 0x001fffffff000000ULL) >> 24);
        out[w + 57] = (((in[c + 25] & 0xffe0000000000000ULL) >> 53) | (in[c + 26] & 0x000000000003ffffULL) << 11);
        out[w + 58] = ((in[c + 26] & 0x00007ffffffc0000ULL) >> 18);
        out[w + 59] = (((in[c + 26] & 0xffff800000000000ULL) >> 47) | (in[c + 27] & 0x0000000000000fffULL) << 17);
        out[w + 60] = ((in[c + 27] & 0x000001fffffff000ULL) >> 12);
        out[w + 61] = (((in[c + 27] & 0xfffffe0000000000ULL) >> 41) | (in[c + 28] & 0x000000000000003fULL) << 23);
        out[w + 62] = ((in[c + 28] & 0x00000007ffffffc0ULL) >>  6);
        out[w + 63] = ((in[c + 28] & 0xfffffff800000000ULL) >> 35);
    }
}
void
unpack_30_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 15) {
        out[w +  0] = ((in[c +  0] & 0x000000003fffffffULL) >>  0);
        out[w +  1] = ((in[c +  0] & 0x0fffffffc0000000ULL) >> 30);
        out[w +  2] = (((in[c +  0] & 0xf000000000000000ULL) >> 60) | (in[c +  1] & 0x0000000003ffffffULL) << 4);
        out[w +  3] = ((in[c +  1] & 0x00fffffffc000000ULL) >> 26);
        out[w +  4] = (((in[c +  1] & 0xff00000000000000ULL) >> 56) | (in[c +  2] & 0x00000000003fffffULL) << 8);
        out[w +  5] = ((in[c +  2] & 0x000fffffffc00000ULL) >> 22);
        out[w +  6] = (((in[c +  2] & 0xfff0000000000000ULL) >> 52) | (in[c +  3] & 0x000000000003ffffULL) << 12);
        out[w +  7] = ((in[c +  3] & 0x0000fffffffc0000ULL) >> 18);
        out[w +  8] = (((in[c +  3] & 0xffff000000000000ULL) >> 48) | (in[c +  4] & 0x0000000000003fffULL) << 16);
        out[w +  9] = ((in[c +  4] & 0x00000fffffffc000ULL) >> 14);
        out[w + 10] = (((in[c +  4] & 0xfffff00000000000ULL) >> 44) | (in[c +  5] & 0x00000000000003ffULL) << 20);
        out[w + 11] = ((in[c +  5] & 0x000000fffffffc00ULL) >> 10);
        out[w + 12] = (((in[c +  5] & 0xffffff0000000000ULL) >> 40) | (in[c +  6] & 0x000000000000003fULL) << 24);
        out[w + 13] = ((in[c +  6] & 0x0000000fffffffc0ULL) >>  6);
        out[w + 14] = (((in[c +  6] & 0xfffffff000000000ULL) >> 36) | (in[c +  7] & 0x0000000000000003ULL) << 28);
        out[w + 15] = ((in[c +  7] & 0x00000000fffffffcULL) >>  2);
        out[w + 16] = ((in[c +  7] & 0x3fffffff00000000ULL) >> 32);
        out[w + 17] = (((in[c +  7] & 0xc000000000000000ULL) >> 62) | (in[c +  8] & 0x000000000fffffffULL) << 2);
        out[w + 18] = ((in[c +  8] & 0x03fffffff0000000ULL) >> 28);
        out[w + 19] = (((in[c +  8] & 0xfc00000000000000ULL) >> 58) | (in[c +  9] & 0x0000000000ffffffULL) << 6);
        out[w + 20] = ((in[c +  9] & 0x003fffffff000000ULL) >> 24);
        out[w + 21] = (((in[c +  9] & 0xffc0000000000000ULL) >> 54) | (in[c + 10] & 0x00000000000fffffULL) << 10);
        out[w + 22] = ((in[c + 10] & 0x0003fffffff00000ULL) >> 20);
        out[w + 23] = (((in[c + 10] & 0xfffc000000000000ULL) >> 50) | (in[c + 11] & 0x000000000000ffffULL) << 14);
        out[w + 24] = ((in[c + 11] & 0x00003fffffff0000ULL) >> 16);
        out[w + 25] = (((in[c + 11] & 0xffffc00000000000ULL) >> 46) | (in[c + 12] & 0x0000000000000fffULL) << 18);
        out[w + 26] = ((in[c + 12] & 0x000003fffffff000ULL) >> 12);
        out[w + 27] = (((in[c + 12] & 0xfffffc0000000000ULL) >> 42) | (in[c + 13] & 0x00000000000000ffULL) << 22);
        out[w + 28] = ((in[c + 13] & 0x0000003fffffff00ULL) >>  8);
        out[w + 29] = (((in[c + 13] & 0xffffffc000000000ULL) >> 38) | (in[c + 14] & 0x000000000000000fULL) << 26);
        out[w + 30] = ((in[c + 14] & 0x00000003fffffff0ULL) >>  4);
        out[w + 31] = ((in[c + 14] & 0xfffffffc00000000ULL) >> 34);
    }
}
void
unpack_31_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 31) {
        out[w +  0] = ((in[c +  0] & 0x000000007fffffffULL) >>  0);
        out[w +  1] = ((in[c +  0] & 0x3fffffff80000000ULL) >> 31);
        out[w +  2] = (((in[c +  0] & 0xc000000000000000ULL) >> 62) | (in[c +  1] & 0x000000001fffffffULL) << 2);
        out[w +  3] = ((in[c +  1] & 0x0fffffffe0000000ULL) >> 29);
        out[w +  4] = (((in[c +  1] & 0xf000000000000000ULL) >> 60) | (in[c +  2] & 0x0000000007ffffffULL) << 4);
        out[w +  5] = ((in[c +  2] & 0x03fffffff8000000ULL) >> 27);
        out[w +  6] = (((in[c +  2] & 0xfc00000000000000ULL) >> 58) | (in[c +  3] & 0x0000000001ffffffULL) << 6);
        out[w +  7] = ((in[c +  3] & 0x00fffffffe000000ULL) >> 25);
        out[w +  8] = (((in[c +  3] & 0xff00000000000000ULL) >> 56) | (in[c +  4] & 0x00000000007fffffULL) << 8);
        out[w +  9] = ((in[c +  4] & 0x003fffffff800000ULL) >> 23);
        out[w + 10] = (((in[c +  4] & 0xffc0000000000000ULL) >> 54) | (in[c +  5] & 0x00000000001fffffULL) << 10);
        out[w + 11] = ((in[c +  5] & 0x000fffffffe00000ULL) >> 21);
        out[w + 12] = (((in[c +  5] & 0xfff0000000000000ULL) >> 52) | (in[c +  6] & 0x000000000007ffffULL) << 12);
        out[w + 13] = ((in[c +  6] & 0x0003fffffff80000ULL) >> 19);
        out[w + 14] = (((in[c +  6] & 0xfffc000000000000ULL) >> 50) | (in[c +  7] & 0x000000000001ffffULL) << 14);
        out[w + 15] = ((in[c +  7] & 0x0000fffffffe0000ULL) >> 17);
        out[w + 16] = (((in[c +  7] & 0xffff000000000000ULL) >> 48) | (in[c +  8] & 0x0000000000007fffULL) << 16);
        out[w + 17] = ((in[c +  8] & 0x00003fffffff8000ULL) >> 15);
        out[w + 18] = (((in[c +  8] & 0xffffc00000000000ULL) >> 46) | (in[c +  9] & 0x0000000000001fffULL) << 18);
        out[w + 19] = ((in[c +  9] & 0x00000fffffffe000ULL) >> 13);
        out[w + 20] = (((in[c +  9] & 0xfffff00000000000ULL) >> 44) | (in[c + 10] & 0x00000000000007ffULL) << 20);
        out[w + 21] = ((in[c + 10] & 0x000003fffffff800ULL) >> 11);
        out[w + 22] = (((in[c + 10] & 0xfffffc0000000000ULL) >> 42) | (in[c + 11] & 0x00000000000001ffULL) << 22);
        out[w + 23] = ((in[c + 11] & 0x000000fffffffe00ULL) >>  9);
        out[w + 24] = (((in[c + 11] & 0xffffff0000000000ULL) >> 40) | (in[c + 12] & 0x000000000000007fULL) << 24);
        out[w + 25] = ((in[c + 12] & 0x0000003fffffff80ULL) >>  7);
        out[w + 26] = (((in[c + 12] & 0xffffffc000000000ULL) >> 38) | (in[c + 13] & 0x000000000000001fULL) << 26);
        out[w + 27] = ((in[c + 13] & 0x0000000fffffffe0ULL) >>  5);
        out[w + 28] = (((in[c + 13] & 0xfffffff000000000ULL) >> 36) | (in[c + 14] & 0x0000000000000007ULL) << 28);
        out[w + 29] = ((in[c + 14] & 0x00000003fffffff8ULL) >>  3);
        out[w + 30] = (((in[c + 14] & 0xfffffffc00000000ULL) >> 34) | (in[c + 15] & 0x0000000000000001ULL) << 30);
        out[w + 31] = ((in[c + 15] & 0x00000000fffffffeULL) >>  1);
        out[w + 32] = ((in[c + 15] & 0x7fffffff00000000ULL) >> 32);
        out[w + 33] = (((in[c + 15] & 0x8000000000000000ULL) >> 63) | (in[c + 16] & 0x000000003fffffffULL) << 1);
        out[w + 34] = ((in[c + 16] & 0x1fffffffc0000000ULL) >> 30);
        out[w + 35] = (((in[c + 16] & 0xe000000000000000ULL) >> 61) | (in[c + 17] & 0x000000000fffffffULL) << 3);
        out[w + 36] = ((in[c + 17] & 0x07fffffff0000000ULL) >> 28);
        out[w + 37] = (((in[c + 17] & 0xf800000000000000ULL) >> 59) | (in[c + 18] & 0x0000000003ffffffULL) << 5);
        out[w + 38] = ((in[c + 18] & 0x01fffffffc000000ULL) >> 26);
        out[w + 39] = (((in[c + 18] & 0xfe00000000000000ULL) >> 57) | (in[c + 19] & 0x0000000000ffffffULL) << 7);
        out[w + 40] = ((in[c + 19] & 0x007fffffff000000ULL) >> 24);
        out[w + 41] = (((in[c + 19] & 0xff80000000000000ULL) >> 55) | (in[c + 20] & 0x00000000003fffffULL) << 9);
        out[w + 42] = ((in[c + 20] & 0x001fffffffc00000ULL) >> 22);
        out[w + 43] = (((in[c + 20] & 0xffe0000000000000ULL) >> 53) | (in[c + 21] & 0x00000000000fffffULL) << 11);
        out[w + 44] = ((in[c + 21] & 0x0007fffffff00000ULL) >> 20);
        out[w + 45] = (((in[c + 21] & 0xfff8000000000000ULL) >> 51) | (in[c + 22] & 0x000000000003ffffULL) << 13);
        out[w + 46] = ((in[c + 22] & 0x0001fffffffc0000ULL) >> 18);
        out[w + 47] = (((in[c + 22] & 0xfffe000000000000ULL) >> 49) | (in[c + 23] & 0x000000000000ffffULL) << 15);
        out[w + 48] = ((in[c + 23] & 0x00007fffffff0000ULL) >> 16);
        out[w + 49] = (((in[c + 23] & 0xffff800000000000ULL) >> 47) | (in[c + 24] & 0x0000000000003fffULL) << 17);
        out[w + 50] = ((in[c + 24] & 0x00001fffffffc000ULL) >> 14);
        out[w + 51] = (((in[c + 24] & 0xffffe00000000000ULL) >> 45) | (in[c + 25] & 0x0000000000000fffULL) << 19);
        out[w + 52] = ((in[c + 25] & 0x000007fffffff000ULL) >> 12);
        out[w + 53] = (((in[c + 25] & 0xfffff80000000000ULL) >> 43) | (in[c + 26] & 0x00000000000003ffULL) << 21);
        out[w + 54] = ((in[c + 26] & 0x000001fffffffc00ULL) >> 10);
        out[w + 55] = (((in[c + 26] & 0xfffffe0000000000ULL) >> 41) | (in[c + 27] & 0x00000000000000ffULL) << 23);
        out[w + 56] = ((in[c + 27] & 0x0000007fffffff00ULL) >>  8);
        out[w + 57] = (((in[c + 27] & 0xffffff8000000000ULL) >> 39) | (in[c + 28] & 0x000000000000003fULL) << 25);
        out[w + 58] = ((in[c + 28] & 0x0000001fffffffc0ULL) >>  6);
        out[w + 59] = (((in[c + 28] & 0xffffffe000000000ULL) >> 37) | (in[c + 29] & 0x000000000000000fULL) << 27);
        out[w + 60] = ((in[c + 29] & 0x00000007fffffff0ULL) >>  4);
        out[w + 61] = (((in[c + 29] & 0xfffffff800000000ULL) >> 35) | (in[c + 30] & 0x0000000000000003ULL) << 29);
        out[w + 62] = ((in[c + 30] & 0x00000001fffffffcULL) >>  2);
        out[w + 63] = ((in[c + 30] & 0xfffffffe00000000ULL) >> 33);
    }
}
void
unpack_32_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 2, c += 1) {
        out[w + 0] = ((in[c + 0] & 0x00000000ffffffffULL) >>  0);
        out[w + 1] = ((in[c + 0] & 0xffffffff00000000ULL) >> 32);
    }
}
void
unpack_33_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 33) {
        out[w +  0] = ((in[c +  0] & 0x00000001ffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xfffffffe00000000ULL) >> 33) | (in[c +  1] & 0x0000000000000003ULL) << 31);
        out[w +  2] = ((in[c +  1] & 0x00000007fffffffcULL) >>  2);
        out[w +  3] = (((in[c +  1] & 0xfffffff800000000ULL) >> 35) | (in[c +  2] & 0x000000000000000fULL) << 29);
        out[w +  4] = ((in[c +  2] & 0x0000001ffffffff0ULL) >>  4);
        out[w +  5] = (((in[c +  2] & 0xffffffe000000000ULL) >> 37) | (in[c +  3] & 0x000000000000003fULL) << 27);
        out[w +  6] = ((in[c +  3] & 0x0000007fffffffc0ULL) >>  6);
        out[w +  7] = (((in[c +  3] & 0xffffff8000000000ULL) >> 39) | (in[c +  4] & 0x00000000000000ffULL) << 25);
        out[w +  8] = ((in[c +  4] & 0x000001ffffffff00ULL) >>  8);
        out[w +  9] = (((in[c +  4] & 0xfffffe0000000000ULL) >> 41) | (in[c +  5] & 0x00000000000003ffULL) << 23);
        out[w + 10] = ((in[c +  5] & 0x000007fffffffc00ULL) >> 10);
        out[w + 11] = (((in[c +  5] & 0xfffff80000000000ULL) >> 43) | (in[c +  6] & 0x0000000000000fffULL) << 21);
        out[w + 12] = ((in[c +  6] & 0x00001ffffffff000ULL) >> 12);
        out[w + 13] = (((in[c +  6] & 0xffffe00000000000ULL) >> 45) | (in[c +  7] & 0x0000000000003fffULL) << 19);
        out[w + 14] = ((in[c +  7] & 0x00007fffffffc000ULL) >> 14);
        out[w + 15] = (((in[c +  7] & 0xffff800000000000ULL) >> 47) | (in[c +  8] & 0x000000000000ffffULL) << 17);
        out[w + 16] = ((in[c +  8] & 0x0001ffffffff0000ULL) >> 16);
        out[w + 17] = (((in[c +  8] & 0xfffe000000000000ULL) >> 49) | (in[c +  9] & 0x000000000003ffffULL) << 15);
        out[w + 18] = ((in[c +  9] & 0x0007fffffffc0000ULL) >> 18);
        out[w + 19] = (((in[c +  9] & 0xfff8000000000000ULL) >> 51) | (in[c + 10] & 0x00000000000fffffULL) << 13);
        out[w + 20] = ((in[c + 10] & 0x001ffffffff00000ULL) >> 20);
        out[w + 21] = (((in[c + 10] & 0xffe0000000000000ULL) >> 53) | (in[c + 11] & 0x00000000003fffffULL) << 11);
        out[w + 22] = ((in[c + 11] & 0x007fffffffc00000ULL) >> 22);
        out[w + 23] = (((in[c + 11] & 0xff80000000000000ULL) >> 55) | (in[c + 12] & 0x0000000000ffffffULL) << 9);
        out[w + 24] = ((in[c + 12] & 0x01ffffffff000000ULL) >> 24);
        out[w + 25] = (((in[c + 12] & 0xfe00000000000000ULL) >> 57) | (in[c + 13] & 0x0000000003ffffffULL) << 7);
        out[w + 26] = ((in[c + 13] & 0x07fffffffc000000ULL) >> 26);
        out[w + 27] = (((in[c + 13] & 0xf800000000000000ULL) >> 59) | (in[c + 14] & 0x000000000fffffffULL) << 5);
        out[w + 28] = ((in[c + 14] & 0x1ffffffff0000000ULL) >> 28);
        out[w + 29] = (((in[c + 14] & 0xe000000000000000ULL) >> 61) | (in[c + 15] & 0x000000003fffffffULL) << 3);
        out[w + 30] = ((in[c + 15] & 0x7fffffffc0000000ULL) >> 30);
        out[w + 31] = (((in[c + 15] & 0x8000000000000000ULL) >> 63) | (in[c + 16] & 0x00000000ffffffffULL) << 1);
        out[w + 32] = (((in[c + 16] & 0xffffffff00000000ULL) >> 32) | (in[c + 17] & 0x0000000000000001ULL) << 32);
        out[w + 33] = ((in[c + 17] & 0x00000003fffffffeULL) >>  1);
        out[w + 34] = (((in[c + 17] & 0xfffffffc00000000ULL) >> 34) | (in[c + 18] & 0x0000000000000007ULL) << 30);
        out[w + 35] = ((in[c + 18] & 0x0000000ffffffff8ULL) >>  3);
        out[w + 36] = (((in[c + 18] & 0xfffffff000000000ULL) >> 36) | (in[c + 19] & 0x000000000000001fULL) << 28);
        out[w + 37] = ((in[c + 19] & 0x0000003fffffffe0ULL) >>  5);
        out[w + 38] = (((in[c + 19] & 0xffffffc000000000ULL) >> 38) | (in[c + 20] & 0x000000000000007fULL) << 26);
        out[w + 39] = ((in[c + 20] & 0x000000ffffffff80ULL) >>  7);
        out[w + 40] = (((in[c + 20] & 0xffffff0000000000ULL) >> 40) | (in[c + 21] & 0x00000000000001ffULL) << 24);
        out[w + 41] = ((in[c + 21] & 0x000003fffffffe00ULL) >>  9);
        out[w + 42] = (((in[c + 21] & 0xfffffc0000000000ULL) >> 42) | (in[c + 22] & 0x00000000000007ffULL) << 22);
        out[w + 43] = ((in[c + 22] & 0x00000ffffffff800ULL) >> 11);
        out[w + 44] = (((in[c + 22] & 0xfffff00000000000ULL) >> 44) | (in[c + 23] & 0x0000000000001fffULL) << 20);
        out[w + 45] = ((in[c + 23] & 0x00003fffffffe000ULL) >> 13);
        out[w + 46] = (((in[c + 23] & 0xffffc00000000000ULL) >> 46) | (in[c + 24] & 0x0000000000007fffULL) << 18);
        out[w + 47] = ((in[c + 24] & 0x0000ffffffff8000ULL) >> 15);
        out[w + 48] = (((in[c + 24] & 0xffff000000000000ULL) >> 48) | (in[c + 25] & 0x000000000001ffffULL) << 16);
        out[w + 49] = ((in[c + 25] & 0x0003fffffffe0000ULL) >> 17);
        out[w + 50] = (((in[c + 25] & 0xfffc000000000000ULL) >> 50) | (in[c + 26] & 0x000000000007ffffULL) << 14);
        out[w + 51] = ((in[c + 26] & 0x000ffffffff80000ULL) >> 19);
        out[w + 52] = (((in[c + 26] & 0xfff0000000000000ULL) >> 52) | (in[c + 27] & 0x00000000001fffffULL) << 12);
        out[w + 53] = ((in[c + 27] & 0x003fffffffe00000ULL) >> 21);
        out[w + 54] = (((in[c + 27] & 0xffc0000000000000ULL) >> 54) | (in[c + 28] & 0x00000000007fffffULL) << 10);
        out[w + 55] = ((in[c + 28] & 0x00ffffffff800000ULL) >> 23);
        out[w + 56] = (((in[c + 28] & 0xff00000000000000ULL) >> 56) | (in[c + 29] & 0x0000000001ffffffULL) << 8);
        out[w + 57] = ((in[c + 29] & 0x03fffffffe000000ULL) >> 25);
        out[w + 58] = (((in[c + 29] & 0xfc00000000000000ULL) >> 58) | (in[c + 30] & 0x0000000007ffffffULL) << 6);
        out[w + 59] = ((in[c + 30] & 0x0ffffffff8000000ULL) >> 27);
        out[w + 60] = (((in[c + 30] & 0xf000000000000000ULL) >> 60) | (in[c + 31] & 0x000000001fffffffULL) << 4);
        out[w + 61] = ((in[c + 31] & 0x3fffffffe0000000ULL) >> 29);
        out[w + 62] = (((in[c + 31] & 0xc000000000000000ULL) >> 62) | (in[c + 32] & 0x000000007fffffffULL) << 2);
        out[w + 63] = ((in[c + 32] & 0xffffffff80000000ULL) >> 31);
    }
}
void
unpack_34_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 17) {
        out[w +  0] = ((in[c +  0] & 0x00000003ffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xfffffffc00000000ULL) >> 34) | (in[c +  1] & 0x000000000000000fULL) << 30);
        out[w +  2] = ((in[c +  1] & 0x0000003ffffffff0ULL) >>  4);
        out[w +  3] = (((in[c +  1] & 0xffffffc000000000ULL) >> 38) | (in[c +  2] & 0x00000000000000ffULL) << 26);
        out[w +  4] = ((in[c +  2] & 0x000003ffffffff00ULL) >>  8);
        out[w +  5] = (((in[c +  2] & 0xfffffc0000000000ULL) >> 42) | (in[c +  3] & 0x0000000000000fffULL) << 22);
        out[w +  6] = ((in[c +  3] & 0x00003ffffffff000ULL) >> 12);
        out[w +  7] = (((in[c +  3] & 0xffffc00000000000ULL) >> 46) | (in[c +  4] & 0x000000000000ffffULL) << 18);
        out[w +  8] = ((in[c +  4] & 0x0003ffffffff0000ULL) >> 16);
        out[w +  9] = (((in[c +  4] & 0xfffc000000000000ULL) >> 50) | (in[c +  5] & 0x00000000000fffffULL) << 14);
        out[w + 10] = ((in[c +  5] & 0x003ffffffff00000ULL) >> 20);
        out[w + 11] = (((in[c +  5] & 0xffc0000000000000ULL) >> 54) | (in[c +  6] & 0x0000000000ffffffULL) << 10);
        out[w + 12] = ((in[c +  6] & 0x03ffffffff000000ULL) >> 24);
        out[w + 13] = (((in[c +  6] & 0xfc00000000000000ULL) >> 58) | (in[c +  7] & 0x000000000fffffffULL) << 6);
        out[w + 14] = ((in[c +  7] & 0x3ffffffff0000000ULL) >> 28);
        out[w + 15] = (((in[c +  7] & 0xc000000000000000ULL) >> 62) | (in[c +  8] & 0x00000000ffffffffULL) << 2);
        out[w + 16] = (((in[c +  8] & 0xffffffff00000000ULL) >> 32) | (in[c +  9] & 0x0000000000000003ULL) << 32);
        out[w + 17] = ((in[c +  9] & 0x0000000ffffffffcULL) >>  2);
        out[w + 18] = (((in[c +  9] & 0xfffffff000000000ULL) >> 36) | (in[c + 10] & 0x000000000000003fULL) << 28);
        out[w + 19] = ((in[c + 10] & 0x000000ffffffffc0ULL) >>  6);
        out[w + 20] = (((in[c + 10] & 0xffffff0000000000ULL) >> 40) | (in[c + 11] & 0x00000000000003ffULL) << 24);
        out[w + 21] = ((in[c + 11] & 0x00000ffffffffc00ULL) >> 10);
        out[w + 22] = (((in[c + 11] & 0xfffff00000000000ULL) >> 44) | (in[c + 12] & 0x0000000000003fffULL) << 20);
        out[w + 23] = ((in[c + 12] & 0x0000ffffffffc000ULL) >> 14);
        out[w + 24] = (((in[c + 12] & 0xffff000000000000ULL) >> 48) | (in[c + 13] & 0x000000000003ffffULL) << 16);
        out[w + 25] = ((in[c + 13] & 0x000ffffffffc0000ULL) >> 18);
        out[w + 26] = (((in[c + 13] & 0xfff0000000000000ULL) >> 52) | (in[c + 14] & 0x00000000003fffffULL) << 12);
        out[w + 27] = ((in[c + 14] & 0x00ffffffffc00000ULL) >> 22);
        out[w + 28] = (((in[c + 14] & 0xff00000000000000ULL) >> 56) | (in[c + 15] & 0x0000000003ffffffULL) << 8);
        out[w + 29] = ((in[c + 15] & 0x0ffffffffc000000ULL) >> 26);
        out[w + 30] = (((in[c + 15] & 0xf000000000000000ULL) >> 60) | (in[c + 16] & 0x000000003fffffffULL) << 4);
        out[w + 31] = ((in[c + 16] & 0xffffffffc0000000ULL) >> 30);
    }
}
void
unpack_35_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 35) {
        out[w +  0] = ((in[c +  0] & 0x00000007ffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xfffffff800000000ULL) >> 35) | (in[c +  1] & 0x000000000000003fULL) << 29);
        out[w +  2] = ((in[c +  1] & 0x000001ffffffffc0ULL) >>  6);
        out[w +  3] = (((in[c +  1] & 0xfffffe0000000000ULL) >> 41) | (in[c +  2] & 0x0000000000000fffULL) << 23);
        out[w +  4] = ((in[c +  2] & 0x00007ffffffff000ULL) >> 12);
        out[w +  5] = (((in[c +  2] & 0xffff800000000000ULL) >> 47) | (in[c +  3] & 0x000000000003ffffULL) << 17);
        out[w +  6] = ((in[c +  3] & 0x001ffffffffc0000ULL) >> 18);
        out[w +  7] = (((in[c +  3] & 0xffe0000000000000ULL) >> 53) | (in[c +  4] & 0x0000000000ffffffULL) << 11);
        out[w +  8] = ((in[c +  4] & 0x07ffffffff000000ULL) >> 24);
        out[w +  9] = (((in[c +  4] & 0xf800000000000000ULL) >> 59) | (in[c +  5] & 0x000000003fffffffULL) << 5);
        out[w + 10] = (((in[c +  5] & 0xffffffffc0000000ULL) >> 30) | (in[c +  6] & 0x0000000000000001ULL) << 34);
        out[w + 11] = ((in[c +  6] & 0x0000000ffffffffeULL) >>  1);
        out[w + 12] = (((in[c +  6] & 0xfffffff000000000ULL) >> 36) | (in[c +  7] & 0x000000000000007fULL) << 28);
        out[w + 13] = ((in[c +  7] & 0x000003ffffffff80ULL) >>  7);
        out[w + 14] = (((in[c +  7] & 0xfffffc0000000000ULL) >> 42) | (in[c +  8] & 0x0000000000001fffULL) << 22);
        out[w + 15] = ((in[c +  8] & 0x0000ffffffffe000ULL) >> 13);
        out[w + 16] = (((in[c +  8] & 0xffff000000000000ULL) >> 48) | (in[c +  9] & 0x000000000007ffffULL) << 16);
        out[w + 17] = ((in[c +  9] & 0x003ffffffff80000ULL) >> 19);
        out[w + 18] = (((in[c +  9] & 0xffc0000000000000ULL) >> 54) | (in[c + 10] & 0x0000000001ffffffULL) << 10);
        out[w + 19] = ((in[c + 10] & 0x0ffffffffe000000ULL) >> 25);
        out[w + 20] = (((in[c + 10] & 0xf000000000000000ULL) >> 60) | (in[c + 11] & 0x000000007fffffffULL) << 4);
        out[w + 21] = (((in[c + 11] & 0xffffffff80000000ULL) >> 31) | (in[c + 12] & 0x0000000000000003ULL) << 33);
        out[w + 22] = ((in[c + 12] & 0x0000001ffffffffcULL) >>  2);
        out[w + 23] = (((in[c + 12] & 0xffffffe000000000ULL) >> 37) | (in[c + 13] & 0x00000000000000ffULL) << 27);
        out[w + 24] = ((in[c + 13] & 0x000007ffffffff00ULL) >>  8);
        out[w + 25] = (((in[c + 13] & 0xfffff80000000000ULL) >> 43) | (in[c + 14] & 0x0000000000003fffULL) << 21);
        out[w + 26] = ((in[c + 14] & 0x0001ffffffffc000ULL) >> 14);
        out[w + 27] = (((in[c + 14] & 0xfffe000000000000ULL) >> 49) | (in[c + 15] & 0x00000000000fffffULL) << 15);
        out[w + 28] = ((in[c + 15] & 0x007ffffffff00000ULL) >> 20);
        out[w + 29] = (((in[c + 15] & 0xff80000000000000ULL) >> 55) | (in[c + 16] & 0x0000000003ffffffULL) << 9);
        out[w + 30] = ((in[c + 16] & 0x1ffffffffc000000ULL) >> 26);
        out[w + 31] = (((in[c + 16] & 0xe000000000000000ULL) >> 61) | (in[c + 17] & 0x00000000ffffffffULL) << 3);
        out[w + 32] = (((in[c + 17] & 0xffffffff00000000ULL) >> 32) | (in[c + 18] & 0x0000000000000007ULL) << 32);
        out[w + 33] = ((in[c + 18] & 0x0000003ffffffff8ULL) >>  3);
        out[w + 34] = (((in[c + 18] & 0xffffffc000000000ULL) >> 38) | (in[c + 19] & 0x00000000000001ffULL) << 26);
        out[w + 35] = ((in[c + 19] & 0x00000ffffffffe00ULL) >>  9);
        out[w + 36] = (((in[c + 19] & 0xfffff00000000000ULL) >> 44) | (in[c + 20] & 0x0000000000007fffULL) << 20);
        out[w + 37] = ((in[c + 20] & 0x0003ffffffff8000ULL) >> 15);
        out[w + 38] = (((in[c + 20] & 0xfffc000000000000ULL) >> 50) | (in[c + 21] & 0x00000000001fffffULL) << 14);
        out[w + 39] = ((in[c + 21] & 0x00ffffffffe00000ULL) >> 21);
        out[w + 40] = (((in[c + 21] & 0xff00000000000000ULL) >> 56) | (in[c + 22] & 0x0000000007ffffffULL) << 8);
        out[w + 41] = ((in[c + 22] & 0x3ffffffff8000000ULL) >> 27);
        out[w + 42] = (((in[c + 22] & 0xc000000000000000ULL) >> 62) | (in[c + 23] & 0x00000001ffffffffULL) << 2);
        out[w + 43] = (((in[c + 23] & 0xfffffffe00000000ULL) >> 33) | (in[c + 24] & 0x000000000000000fULL) << 31);
        out[w + 44] = ((in[c + 24] & 0x0000007ffffffff0ULL) >>  4);
        out[w + 45] = (((in[c + 24] & 0xffffff8000000000ULL) >> 39) | (in[c + 25] & 0x00000000000003ffULL) << 25);
        out[w + 46] = ((in[c + 25] & 0x00001ffffffffc00ULL) >> 10);
        out[w + 47] = (((in[c + 25] & 0xffffe00000000000ULL) >> 45) | (in[c + 26] & 0x000000000000ffffULL) << 19);
        out[w + 48] = ((in[c + 26] & 0x0007ffffffff0000ULL) >> 16);
        out[w + 49] = (((in[c + 26] & 0xfff8000000000000ULL) >> 51) | (in[c + 27] & 0x00000000003fffffULL) << 13);
        out[w + 50] = ((in[c + 27] & 0x01ffffffffc00000ULL) >> 22);
        out[w + 51] = (((in[c + 27] & 0xfe00000000000000ULL) >> 57) | (in[c + 28] & 0x000000000fffffffULL) << 7);
        out[w + 52] = ((in[c + 28] & 0x7ffffffff0000000ULL) >> 28);
        out[w + 53] = (((in[c + 28] & 0x8000000000000000ULL) >> 63) | (in[c + 29] & 0x00000003ffffffffULL) << 1);
        out[w + 54] = (((in[c + 29] & 0xfffffffc00000000ULL) >> 34) | (in[c + 30] & 0x000000000000001fULL) << 30);
        out[w + 55] = ((in[c + 30] & 0x000000ffffffffe0ULL) >>  5);
        out[w + 56] = (((in[c + 30] & 0xffffff0000000000ULL) >> 40) | (in[c + 31] & 0x00000000000007ffULL) << 24);
        out[w + 57] = ((in[c + 31] & 0x00003ffffffff800ULL) >> 11);
        out[w + 58] = (((in[c + 31] & 0xffffc00000000000ULL) >> 46) | (in[c + 32] & 0x000000000001ffffULL) << 18);
        out[w + 59] = ((in[c + 32] & 0x000ffffffffe0000ULL) >> 17);
        out[w + 60] = (((in[c + 32] & 0xfff0000000000000ULL) >> 52) | (in[c + 33] & 0x00000000007fffffULL) << 12);
        out[w + 61] = ((in[c + 33] & 0x03ffffffff800000ULL) >> 23);
        out[w + 62] = (((in[c + 33] & 0xfc00000000000000ULL) >> 58) | (in[c + 34] & 0x000000001fffffffULL) << 6);
        out[w + 63] = ((in[c + 34] & 0xffffffffe0000000ULL) >> 29);
    }
}
void
unpack_36_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 16, c += 9) {
        out[w +  0] = ((in[c + 0] & 0x0000000fffffffffULL) >>  0);
        out[w +  1] = (((in[c + 0] & 0xfffffff000000000ULL) >> 36) | (in[c + 1] & 0x00000000000000ffULL) << 28);
        out[w +  2] = ((in[c + 1] & 0x00000fffffffff00ULL) >>  8);
        out[w +  3] = (((in[c + 1] & 0xfffff00000000000ULL) >> 44) | (in[c + 2] & 0x000000000000ffffULL) << 20);
        out[w +  4] = ((in[c + 2] & 0x000fffffffff0000ULL) >> 16);
        out[w +  5] = (((in[c + 2] & 0xfff0000000000000ULL) >> 52) | (in[c + 3] & 0x0000000000ffffffULL) << 12);
        out[w +  6] = ((in[c + 3] & 0x0fffffffff000000ULL) >> 24);
        out[w +  7] = (((in[c + 3] & 0xf000000000000000ULL) >> 60) | (in[c + 4] & 0x00000000ffffffffULL) << 4);
        out[w +  8] = (((in[c + 4] & 0xffffffff00000000ULL) >> 32) | (in[c + 5] & 0x000000000000000fULL) << 32);
        out[w +  9] = ((in[c + 5] & 0x000000fffffffff0ULL) >>  4);
        out[w + 10] = (((in[c + 5] & 0xffffff0000000000ULL) >> 40) | (in[c + 6] & 0x0000000000000fffULL) << 24);
        out[w + 11] = ((in[c + 6] & 0x0000fffffffff000ULL) >> 12);
        out[w + 12] = (((in[c + 6] & 0xffff000000000000ULL) >> 48) | (in[c + 7] & 0x00000000000fffffULL) << 16);
        out[w + 13] = ((in[c + 7] & 0x00fffffffff00000ULL) >> 20);
        out[w + 14] = (((in[c + 7] & 0xff00000000000000ULL) >> 56) | (in[c + 8] & 0x000000000fffffffULL) << 8);
        out[w + 15] = ((in[c + 8] & 0xfffffffff0000000ULL) >> 28);
    }
}
void
unpack_37_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 37) {
        out[w +  0] = ((in[c +  0] & 0x0000001fffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xffffffe000000000ULL) >> 37) | (in[c +  1] & 0x00000000000003ffULL) << 27);
        out[w +  2] = ((in[c +  1] & 0x00007ffffffffc00ULL) >> 10);
        out[w +  3] = (((in[c +  1] & 0xffff800000000000ULL) >> 47) | (in[c +  2] & 0x00000000000fffffULL) << 17);
        out[w +  4] = ((in[c +  2] & 0x01fffffffff00000ULL) >> 20);
        out[w +  5] = (((in[c +  2] & 0xfe00000000000000ULL) >> 57) | (in[c +  3] & 0x000000003fffffffULL) << 7);
        out[w +  6] = (((in[c +  3] & 0xffffffffc0000000ULL) >> 30) | (in[c +  4] & 0x0000000000000007ULL) << 34);
        out[w +  7] = ((in[c +  4] & 0x000000fffffffff8ULL) >>  3);
        out[w +  8] = (((in[c +  4] & 0xffffff0000000000ULL) >> 40) | (in[c +  5] & 0x0000000000001fffULL) << 24);
        out[w +  9] = ((in[c +  5] & 0x0003ffffffffe000ULL) >> 13);
        out[w + 10] = (((in[c +  5] & 0xfffc000000000000ULL) >> 50) | (in[c +  6] & 0x00000000007fffffULL) << 14);
        out[w + 11] = ((in[c +  6] & 0x0fffffffff800000ULL) >> 23);
        out[w + 12] = (((in[c +  6] & 0xf000000000000000ULL) >> 60) | (in[c +  7] & 0x00000001ffffffffULL) << 4);
        out[w + 13] = (((in[c +  7] & 0xfffffffe00000000ULL) >> 33) | (in[c +  8] & 0x000000000000003fULL) << 31);
        out[w + 14] = ((in[c +  8] & 0x000007ffffffffc0ULL) >>  6);
        out[w + 15] = (((in[c +  8] & 0xfffff80000000000ULL) >> 43) | (in[c +  9] & 0x000000000000ffffULL) << 21);
        out[w + 16] = ((in[c +  9] & 0x001fffffffff0000ULL) >> 16);
        out[w + 17] = (((in[c +  9] & 0xffe0000000000000ULL) >> 53) | (in[c + 10] & 0x0000000003ffffffULL) << 11);
        out[w + 18] = ((in[c + 10] & 0x7ffffffffc000000ULL) >> 26);
        out[w + 19] = (((in[c + 10] & 0x8000000000000000ULL) >> 63) | (in[c + 11] & 0x0000000fffffffffULL) << 1);
        out[w + 20] = (((in[c + 11] & 0xfffffff000000000ULL) >> 36) | (in[c + 12] & 0x00000000000001ffULL) << 28);
        out[w + 21] = ((in[c + 12] & 0x00003ffffffffe00ULL) >>  9);
        out[w + 22] = (((in[c + 12] & 0xffffc00000000000ULL) >> 46) | (in[c + 13] & 0x000000000007ffffULL) << 18);
        out[w + 23] = ((in[c + 13] & 0x00fffffffff80000ULL) >> 19);
        out[w + 24] = (((in[c + 13] & 0xff00000000000000ULL) >> 56) | (in[c + 14] & 0x000000001fffffffULL) << 8);
        out[w + 25] = (((in[c + 14] & 0xffffffffe0000000ULL) >> 29) | (in[c + 15] & 0x0000000000000003ULL) << 35);
        out[w + 26] = ((in[c + 15] & 0x0000007ffffffffcULL) >>  2);
        out[w + 27] = (((in[c + 15] & 0xffffff8000000000ULL) >> 39) | (in[c + 16] & 0x0000000000000fffULL) << 25);
        out[w + 28] = ((in[c + 16] & 0x0001fffffffff000ULL) >> 12);
        out[w + 29] = (((in[c + 16] & 0xfffe000000000000ULL) >> 49) | (in[c + 17] & 0x00000000003fffffULL) << 15);
        out[w + 30] = ((in[c + 17] & 0x07ffffffffc00000ULL) >> 22);
        out[w + 31] = (((in[c + 17] & 0xf800000000000000ULL) >> 59) | (in[c + 18] & 0x00000000ffffffffULL) << 5);
        out[w + 32] = (((in[c + 18] & 0xffffffff00000000ULL) >> 32) | (in[c + 19] & 0x000000000000001fULL) << 32);
        out[w + 33] = ((in[c + 19] & 0x000003ffffffffe0ULL) >>  5);
        out[w + 34] = (((in[c + 19] & 0xfffffc0000000000ULL) >> 42) | (in[c + 20] & 0x0000000000007fffULL) << 22);
        out[w + 35] = ((in[c + 20] & 0x000fffffffff8000ULL) >> 15);
        out[w + 36] = (((in[c + 20] & 0xfff0000000000000ULL) >> 52) | (in[c + 21] & 0x0000000001ffffffULL) << 12);
        out[w + 37] = ((in[c + 21] & 0x3ffffffffe000000ULL) >> 25);
        out[w + 38] = (((in[c + 21] & 0xc000000000000000ULL) >> 62) | (in[c + 22] & 0x00000007ffffffffULL) << 2);
        out[w + 39] = (((in[c + 22] & 0xfffffff800000000ULL) >> 35) | (in[c + 23] & 0x00000000000000ffULL) << 29);
        out[w + 40] = ((in[c + 23] & 0x00001fffffffff00ULL) >>  8);
        out[w + 41] = (((in[c + 23] & 0xffffe00000000000ULL) >> 45) | (in[c + 24] & 0x000000000003ffffULL) << 19);
        out[w + 42] = ((in[c + 24] & 0x007ffffffffc0000ULL) >> 18);
        out[w + 43] = (((in[c + 24] & 0xff80000000000000ULL) >> 55) | (in[c + 25] & 0x000000000fffffffULL) << 9);
        out[w + 44] = (((in[c + 25] & 0xfffffffff0000000ULL) >> 28) | (in[c + 26] & 0x0000000000000001ULL) << 36);
        out[w + 45] = ((in[c + 26] & 0x0000003ffffffffeULL) >>  1);
        out[w + 46] = (((in[c + 26] & 0xffffffc000000000ULL) >> 38) | (in[c + 27] & 0x00000000000007ffULL) << 26);
        out[w + 47] = ((in[c + 27] & 0x0000fffffffff800ULL) >> 11);
        out[w + 48] = (((in[c + 27] & 0xffff000000000000ULL) >> 48) | (in[c + 28] & 0x00000000001fffffULL) << 16);
        out[w + 49] = ((in[c + 28] & 0x03ffffffffe00000ULL) >> 21);
        out[w + 50] = (((in[c + 28] & 0xfc00000000000000ULL) >> 58) | (in[c + 29] & 0x000000007fffffffULL) << 6);
        out[w + 51] = (((in[c + 29] & 0xffffffff80000000ULL) >> 31) | (in[c + 30] & 0x000000000000000fULL) << 33);
        out[w + 52] = ((in[c + 30] & 0x000001fffffffff0ULL) >>  4);
        out[w + 53] = (((in[c + 30] & 0xfffffe0000000000ULL) >> 41) | (in[c + 31] & 0x0000000000003fffULL) << 23);
        out[w + 54] = ((in[c + 31] & 0x0007ffffffffc000ULL) >> 14);
        out[w + 55] = (((in[c + 31] & 0xfff8000000000000ULL) >> 51) | (in[c + 32] & 0x0000000000ffffffULL) << 13);
        out[w + 56] = ((in[c + 32] & 0x1fffffffff000000ULL) >> 24);
        out[w + 57] = (((in[c + 32] & 0xe000000000000000ULL) >> 61) | (in[c + 33] & 0x00000003ffffffffULL) << 3);
        out[w + 58] = (((in[c + 33] & 0xfffffffc00000000ULL) >> 34) | (in[c + 34] & 0x000000000000007fULL) << 30);
        out[w + 59] = ((in[c + 34] & 0x00000fffffffff80ULL) >>  7);
        out[w + 60] = (((in[c + 34] & 0xfffff00000000000ULL) >> 44) | (in[c + 35] & 0x000000000001ffffULL) << 20);
        out[w + 61] = ((in[c + 35] & 0x003ffffffffe0000ULL) >> 17);
        out[w + 62] = (((in[c + 35] & 0xffc0000000000000ULL) >> 54) | (in[c + 36] & 0x0000000007ffffffULL) << 10);
        out[w + 63] = ((in[c + 36] & 0xfffffffff8000000ULL) >> 27);
    }
}
void
unpack_38_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 19) {
        out[w +  0] = ((in[c +  0] & 0x0000003fffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xffffffc000000000ULL) >> 38) | (in[c +  1] & 0x0000000000000fffULL) << 26);
        out[w +  2] = ((in[c +  1] & 0x0003fffffffff000ULL) >> 12);
        out[w +  3] = (((in[c +  1] & 0xfffc000000000000ULL) >> 50) | (in[c +  2] & 0x0000000000ffffffULL) << 14);
        out[w +  4] = ((in[c +  2] & 0x3fffffffff000000ULL) >> 24);
        out[w +  5] = (((in[c +  2] & 0xc000000000000000ULL) >> 62) | (in[c +  3] & 0x0000000fffffffffULL) << 2);
        out[w +  6] = (((in[c +  3] & 0xfffffff000000000ULL) >> 36) | (in[c +  4] & 0x00000000000003ffULL) << 28);
        out[w +  7] = ((in[c +  4] & 0x0000fffffffffc00ULL) >> 10);
        out[w +  8] = (((in[c +  4] & 0xffff000000000000ULL) >> 48) | (in[c +  5] & 0x00000000003fffffULL) << 16);
        out[w +  9] = ((in[c +  5] & 0x0fffffffffc00000ULL) >> 22);
        out[w + 10] = (((in[c +  5] & 0xf000000000000000ULL) >> 60) | (in[c +  6] & 0x00000003ffffffffULL) << 4);
        out[w + 11] = (((in[c +  6] & 0xfffffffc00000000ULL) >> 34) | (in[c +  7] & 0x00000000000000ffULL) << 30);
        out[w + 12] = ((in[c +  7] & 0x00003fffffffff00ULL) >>  8);
        out[w + 13] = (((in[c +  7] & 0xffffc00000000000ULL) >> 46) | (in[c +  8] & 0x00000000000fffffULL) << 18);
        out[w + 14] = ((in[c +  8] & 0x03fffffffff00000ULL) >> 20);
        out[w + 15] = (((in[c +  8] & 0xfc00000000000000ULL) >> 58) | (in[c +  9] & 0x00000000ffffffffULL) << 6);
        out[w + 16] = (((in[c +  9] & 0xffffffff00000000ULL) >> 32) | (in[c + 10] & 0x000000000000003fULL) << 32);
        out[w + 17] = ((in[c + 10] & 0x00000fffffffffc0ULL) >>  6);
        out[w + 18] = (((in[c + 10] & 0xfffff00000000000ULL) >> 44) | (in[c + 11] & 0x000000000003ffffULL) << 20);
        out[w + 19] = ((in[c + 11] & 0x00fffffffffc0000ULL) >> 18);
        out[w + 20] = (((in[c + 11] & 0xff00000000000000ULL) >> 56) | (in[c + 12] & 0x000000003fffffffULL) << 8);
        out[w + 21] = (((in[c + 12] & 0xffffffffc0000000ULL) >> 30) | (in[c + 13] & 0x000000000000000fULL) << 34);
        out[w + 22] = ((in[c + 13] & 0x000003fffffffff0ULL) >>  4);
        out[w + 23] = (((in[c + 13] & 0xfffffc0000000000ULL) >> 42) | (in[c + 14] & 0x000000000000ffffULL) << 22);
        out[w + 24] = ((in[c + 14] & 0x003fffffffff0000ULL) >> 16);
        out[w + 25] = (((in[c + 14] & 0xffc0000000000000ULL) >> 54) | (in[c + 15] & 0x000000000fffffffULL) << 10);
        out[w + 26] = (((in[c + 15] & 0xfffffffff0000000ULL) >> 28) | (in[c + 16] & 0x0000000000000003ULL) << 36);
        out[w + 27] = ((in[c + 16] & 0x000000fffffffffcULL) >>  2);
        out[w + 28] = (((in[c + 16] & 0xffffff0000000000ULL) >> 40) | (in[c + 17] & 0x0000000000003fffULL) << 24);
        out[w + 29] = ((in[c + 17] & 0x000fffffffffc000ULL) >> 14);
        out[w + 30] = (((in[c + 17] & 0xfff0000000000000ULL) >> 52) | (in[c + 18] & 0x0000000003ffffffULL) << 12);
        out[w + 31] = ((in[c + 18] & 0xfffffffffc000000ULL) >> 26);
    }
}
void
unpack_39_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 39) {
        out[w +  0] = ((in[c +  0] & 0x0000007fffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xffffff8000000000ULL) >> 39) | (in[c +  1] & 0x0000000000003fffULL) << 25);
        out[w +  2] = ((in[c +  1] & 0x001fffffffffc000ULL) >> 14);
        out[w +  3] = (((in[c +  1] & 0xffe0000000000000ULL) >> 53) | (in[c +  2] & 0x000000000fffffffULL) << 11);
        out[w +  4] = (((in[c +  2] & 0xfffffffff0000000ULL) >> 28) | (in[c +  3] & 0x0000000000000007ULL) << 36);
        out[w +  5] = ((in[c +  3] & 0x000003fffffffff8ULL) >>  3);
        out[w +  6] = (((in[c +  3] & 0xfffffc0000000000ULL) >> 42) | (in[c +  4] & 0x000000000001ffffULL) << 22);
        out[w +  7] = ((in[c +  4] & 0x00fffffffffe0000ULL) >> 17);
        out[w +  8] = (((in[c +  4] & 0xff00000000000000ULL) >> 56) | (in[c +  5] & 0x000000007fffffffULL) << 8);
        out[w +  9] = (((in[c +  5] & 0xffffffff80000000ULL) >> 31) | (in[c +  6] & 0x000000000000003fULL) << 33);
        out[w + 10] = ((in[c +  6] & 0x00001fffffffffc0ULL) >>  6);
        out[w + 11] = (((in[c +  6] & 0xffffe00000000000ULL) >> 45) | (in[c +  7] & 0x00000000000fffffULL) << 19);
        out[w + 12] = ((in[c +  7] & 0x07fffffffff00000ULL) >> 20);
        out[w + 13] = (((in[c +  7] & 0xf800000000000000ULL) >> 59) | (in[c +  8] & 0x00000003ffffffffULL) << 5);
        out[w + 14] = (((in[c +  8] & 0xfffffffc00000000ULL) >> 34) | (in[c +  9] & 0x00000000000001ffULL) << 30);
        out[w + 15] = ((in[c +  9] & 0x0000fffffffffe00ULL) >>  9);
        out[w + 16] = (((in[c +  9] & 0xffff000000000000ULL) >> 48) | (in[c + 10] & 0x00000000007fffffULL) << 16);
        out[w + 17] = ((in[c + 10] & 0x3fffffffff800000ULL) >> 23);
        out[w + 18] = (((in[c + 10] & 0xc000000000000000ULL) >> 62) | (in[c + 11] & 0x0000001fffffffffULL) << 2);
        out[w + 19] = (((in[c + 11] & 0xffffffe000000000ULL) >> 37) | (in[c + 12] & 0x0000000000000fffULL) << 27);
        out[w + 20] = ((in[c + 12] & 0x0007fffffffff000ULL) >> 12);
        out[w + 21] = (((in[c + 12] & 0xfff8000000000000ULL) >> 51) | (in[c + 13] & 0x0000000003ffffffULL) << 13);
        out[w + 22] = (((in[c + 13] & 0xfffffffffc000000ULL) >> 26) | (in[c + 14] & 0x0000000000000001ULL) << 38);
        out[w + 23] = ((in[c + 14] & 0x000000fffffffffeULL) >>  1);
        out[w + 24] = (((in[c + 14] & 0xffffff0000000000ULL) >> 40) | (in[c + 15] & 0x0000000000007fffULL) << 24);
        out[w + 25] = ((in[c + 15] & 0x003fffffffff8000ULL) >> 15);
        out[w + 26] = (((in[c + 15] & 0xffc0000000000000ULL) >> 54) | (in[c + 16] & 0x000000001fffffffULL) << 10);
        out[w + 27] = (((in[c + 16] & 0xffffffffe0000000ULL) >> 29) | (in[c + 17] & 0x000000000000000fULL) << 35);
        out[w + 28] = ((in[c + 17] & 0x000007fffffffff0ULL) >>  4);
        out[w + 29] = (((in[c + 17] & 0xfffff80000000000ULL) >> 43) | (in[c + 18] & 0x000000000003ffffULL) << 21);
        out[w + 30] = ((in[c + 18] & 0x01fffffffffc0000ULL) >> 18);
        out[w + 31] = (((in[c + 18] & 0xfe00000000000000ULL) >> 57) | (in[c + 19] & 0x00000000ffffffffULL) << 7);
        out[w + 32] = (((in[c + 19] & 0xffffffff00000000ULL) >> 32) | (in[c + 20] & 0x000000000000007fULL) << 32);
        out[w + 33] = ((in[c + 20] & 0x00003fffffffff80ULL) >>  7);
        out[w + 34] = (((in[c + 20] & 0xffffc00000000000ULL) >> 46) | (in[c + 21] & 0x00000000001fffffULL) << 18);
        out[w + 35] = ((in[c + 21] & 0x0fffffffffe00000ULL) >> 21);
        out[w + 36] = (((in[c + 21] & 0xf000000000000000ULL) >> 60) | (in[c + 22] & 0x00000007ffffffffULL) << 4);
        out[w + 37] = (((in[c + 22] & 0xfffffff800000000ULL) >> 35) | (in[c + 23] & 0x00000000000003ffULL) << 29);
        out[w + 38] = ((in[c + 23] & 0x0001fffffffffc00ULL) >> 10);
        out[w + 39] = (((in[c + 23] & 0xfffe000000000000ULL) >> 49) | (in[c + 24] & 0x0000000000ffffffULL) << 15);
        out[w + 40] = ((in[c + 24] & 0x7fffffffff000000ULL) >> 24);
        out[w + 41] = (((in[c + 24] & 0x8000000000000000ULL) >> 63) | (in[c + 25] & 0x0000003fffffffffULL) << 1);
        out[w + 42] = (((in[c + 25] & 0xffffffc000000000ULL) >> 38) | (in[c + 26] & 0x0000000000001fffULL) << 26);
        out[w + 43] = ((in[c + 26] & 0x000fffffffffe000ULL) >> 13);
        out[w + 44] = (((in[c + 26] & 0xfff0000000000000ULL) >> 52) | (in[c + 27] & 0x0000000007ffffffULL) << 12);
        out[w + 45] = (((in[c + 27] & 0xfffffffff8000000ULL) >> 27) | (in[c + 28] & 0x0000000000000003ULL) << 37);
        out[w + 46] = ((in[c + 28] & 0x000001fffffffffcULL) >>  2);
        out[w + 47] = (((in[c + 28] & 0xfffffe0000000000ULL) >> 41) | (in[c + 29] & 0x000000000000ffffULL) << 23);
        out[w + 48] = ((in[c + 29] & 0x007fffffffff0000ULL) >> 16);
        out[w + 49] = (((in[c + 29] & 0xff80000000000000ULL) >> 55) | (in[c + 30] & 0x000000003fffffffULL) << 9);
        out[w + 50] = (((in[c + 30] & 0xffffffffc0000000ULL) >> 30) | (in[c + 31] & 0x000000000000001fULL) << 34);
        out[w + 51] = ((in[c + 31] & 0x00000fffffffffe0ULL) >>  5);
        out[w + 52] = (((in[c + 31] & 0xfffff00000000000ULL) >> 44) | (in[c + 32] & 0x000000000007ffffULL) << 20);
        out[w + 53] = ((in[c + 32] & 0x03fffffffff80000ULL) >> 19);
        out[w + 54] = (((in[c + 32] & 0xfc00000000000000ULL) >> 58) | (in[c + 33] & 0x00000001ffffffffULL) << 6);
        out[w + 55] = (((in[c + 33] & 0xfffffffe00000000ULL) >> 33) | (in[c + 34] & 0x00000000000000ffULL) << 31);
        out[w + 56] = ((in[c + 34] & 0x00007fffffffff00ULL) >>  8);
        out[w + 57] = (((in[c + 34] & 0xffff800000000000ULL) >> 47) | (in[c + 35] & 0x00000000003fffffULL) << 17);
        out[w + 58] = ((in[c + 35] & 0x1fffffffffc00000ULL) >> 22);
        out[w + 59] = (((in[c + 35] & 0xe000000000000000ULL) >> 61) | (in[c + 36] & 0x0000000fffffffffULL) << 3);
        out[w + 60] = (((in[c + 36] & 0xfffffff000000000ULL) >> 36) | (in[c + 37] & 0x00000000000007ffULL) << 28);
        out[w + 61] = ((in[c + 37] & 0x0003fffffffff800ULL) >> 11);
        out[w + 62] = (((in[c + 37] & 0xfffc000000000000ULL) >> 50) | (in[c + 38] & 0x0000000001ffffffULL) << 14);
        out[w + 63] = ((in[c + 38] & 0xfffffffffe000000ULL) >> 25);
    }
}
void
unpack_40_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 8, c += 5) {
        out[w + 0] = ((in[c + 0] & 0x000000ffffffffffULL) >>  0);
        out[w + 1] = (((in[c + 0] & 0xffffff0000000000ULL) >> 40) | (in[c + 1] & 0x000000000000ffffULL) << 24);
        out[w + 2] = ((in[c + 1] & 0x00ffffffffff0000ULL) >> 16);
        out[w + 3] = (((in[c + 1] & 0xff00000000000000ULL) >> 56) | (in[c + 2] & 0x00000000ffffffffULL) << 8);
        out[w + 4] = (((in[c + 2] & 0xffffffff00000000ULL) >> 32) | (in[c + 3] & 0x00000000000000ffULL) << 32);
        out[w + 5] = ((in[c + 3] & 0x0000ffffffffff00ULL) >>  8);
        out[w + 6] = (((in[c + 3] & 0xffff000000000000ULL) >> 48) | (in[c + 4] & 0x0000000000ffffffULL) << 16);
        out[w + 7] = ((in[c + 4] & 0xffffffffff000000ULL) >> 24);
    }
}
void
unpack_41_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 41) {
        out[w +  0] = ((in[c +  0] & 0x000001ffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xfffffe0000000000ULL) >> 41) | (in[c +  1] & 0x000000000003ffffULL) << 23);
        out[w +  2] = ((in[c +  1] & 0x07fffffffffc0000ULL) >> 18);
        out[w +  3] = (((in[c +  1] & 0xf800000000000000ULL) >> 59) | (in[c +  2] & 0x0000000fffffffffULL) << 5);
        out[w +  4] = (((in[c +  2] & 0xfffffff000000000ULL) >> 36) | (in[c +  3] & 0x0000000000001fffULL) << 28);
        out[w +  5] = ((in[c +  3] & 0x003fffffffffe000ULL) >> 13);
        out[w +  6] = (((in[c +  3] & 0xffc0000000000000ULL) >> 54) | (in[c +  4] & 0x000000007fffffffULL) << 10);
        out[w +  7] = (((in[c +  4] & 0xffffffff80000000ULL) >> 31) | (in[c +  5] & 0x00000000000000ffULL) << 33);
        out[w +  8] = ((in[c +  5] & 0x0001ffffffffff00ULL) >>  8);
        out[w +  9] = (((in[c +  5] & 0xfffe000000000000ULL) >> 49) | (in[c +  6] & 0x0000000003ffffffULL) << 15);
        out[w + 10] = (((in[c +  6] & 0xfffffffffc000000ULL) >> 26) | (in[c +  7] & 0x0000000000000007ULL) << 38);
        out[w + 11] = ((in[c +  7] & 0x00000ffffffffff8ULL) >>  3);
        out[w + 12] = (((in[c +  7] & 0xfffff00000000000ULL) >> 44) | (in[c +  8] & 0x00000000001fffffULL) << 20);
        out[w + 13] = ((in[c +  8] & 0x3fffffffffe00000ULL) >> 21);
        out[w + 14] = (((in[c +  8] & 0xc000000000000000ULL) >> 62) | (in[c +  9] & 0x0000007fffffffffULL) << 2);
        out[w + 15] = (((in[c +  9] & 0xffffff8000000000ULL) >> 39) | (in[c + 10] & 0x000000000000ffffULL) << 25);
        out[w + 16] = ((in[c + 10] & 0x01ffffffffff0000ULL) >> 16);
        out[w + 17] = (((in[c + 10] & 0xfe00000000000000ULL) >> 57) | (in[c + 11] & 0x00000003ffffffffULL) << 7);
        out[w + 18] = (((in[c + 11] & 0xfffffffc00000000ULL) >> 34) | (in[c + 12] & 0x00000000000007ffULL) << 30);
        out[w + 19] = ((in[c + 12] & 0x000ffffffffff800ULL) >> 11);
        out[w + 20] = (((in[c + 12] & 0xfff0000000000000ULL) >> 52) | (in[c + 13] & 0x000000001fffffffULL) << 12);
        out[w + 21] = (((in[c + 13] & 0xffffffffe0000000ULL) >> 29) | (in[c + 14] & 0x000000000000003fULL) << 35);
        out[w + 22] = ((in[c + 14] & 0x00007fffffffffc0ULL) >>  6);
        out[w + 23] = (((in[c + 14] & 0xffff800000000000ULL) >> 47) | (in[c + 15] & 0x0000000000ffffffULL) << 17);
        out[w + 24] = (((in[c + 15] & 0xffffffffff000000ULL) >> 24) | (in[c + 16] & 0x0000000000000001ULL) << 40);
        out[w + 25] = ((in[c + 16] & 0x000003fffffffffeULL) >>  1);
        out[w + 26] = (((in[c + 16] & 0xfffffc0000000000ULL) >> 42) | (in[c + 17] & 0x000000000007ffffULL) << 22);
        out[w + 27] = ((in[c + 17] & 0x0ffffffffff80000ULL) >> 19);
        out[w + 28] = (((in[c + 17] & 0xf000000000000000ULL) >> 60) | (in[c + 18] & 0x0000001fffffffffULL) << 4);
        out[w + 29] = (((in[c + 18] & 0xffffffe000000000ULL) >> 37) | (in[c + 19] & 0x0000000000003fffULL) << 27);
        out[w + 30] = ((in[c + 19] & 0x007fffffffffc000ULL) >> 14);
        out[w + 31] = (((in[c + 19] & 0xff80000000000000ULL) >> 55) | (in[c + 20] & 0x00000000ffffffffULL) << 9);
        out[w + 32] = (((in[c + 20] & 0xffffffff00000000ULL) >> 32) | (in[c + 21] & 0x00000000000001ffULL) << 32);
        out[w + 33] = ((in[c + 21] & 0x0003fffffffffe00ULL) >>  9);
        out[w + 34] = (((in[c + 21] & 0xfffc000000000000ULL) >> 50) | (in[c + 22] & 0x0000000007ffffffULL) << 14);
        out[w + 35] = (((in[c + 22] & 0xfffffffff8000000ULL) >> 27) | (in[c + 23] & 0x000000000000000fULL) << 37);
        out[w + 36] = ((in[c + 23] & 0x00001ffffffffff0ULL) >>  4);
        out[w + 37] = (((in[c + 23] & 0xffffe00000000000ULL) >> 45) | (in[c + 24] & 0x00000000003fffffULL) << 19);
        out[w + 38] = ((in[c + 24] & 0x7fffffffffc00000ULL) >> 22);
        out[w + 39] = (((in[c + 24] & 0x8000000000000000ULL) >> 63) | (in[c + 25] & 0x000000ffffffffffULL) << 1);
        out[w + 40] = (((in[c + 25] & 0xffffff0000000000ULL) >> 40) | (in[c + 26] & 0x000000000001ffffULL) << 24);
        out[w + 41] = ((in[c + 26] & 0x03fffffffffe0000ULL) >> 17);
        out[w + 42] = (((in[c + 26] & 0xfc00000000000000ULL) >> 58) | (in[c + 27] & 0x00000007ffffffffULL) << 6);
        out[w + 43] = (((in[c + 27] & 0xfffffff800000000ULL) >> 35) | (in[c + 28] & 0x0000000000000fffULL) << 29);
        out[w + 44] = ((in[c + 28] & 0x001ffffffffff000ULL) >> 12);
        out[w + 45] = (((in[c + 28] & 0xffe0000000000000ULL) >> 53) | (in[c + 29] & 0x000000003fffffffULL) << 11);
        out[w + 46] = (((in[c + 29] & 0xffffffffc0000000ULL) >> 30) | (in[c + 30] & 0x000000000000007fULL) << 34);
        out[w + 47] = ((in[c + 30] & 0x0000ffffffffff80ULL) >>  7);
        out[w + 48] = (((in[c + 30] & 0xffff000000000000ULL) >> 48) | (in[c + 31] & 0x0000000001ffffffULL) << 16);
        out[w + 49] = (((in[c + 31] & 0xfffffffffe000000ULL) >> 25) | (in[c + 32] & 0x0000000000000003ULL) << 39);
        out[w + 50] = ((in[c + 32] & 0x000007fffffffffcULL) >>  2);
        out[w + 51] = (((in[c + 32] & 0xfffff80000000000ULL) >> 43) | (in[c + 33] & 0x00000000000fffffULL) << 21);
        out[w + 52] = ((in[c + 33] & 0x1ffffffffff00000ULL) >> 20);
        out[w + 53] = (((in[c + 33] & 0xe000000000000000ULL) >> 61) | (in[c + 34] & 0x0000003fffffffffULL) << 3);
        out[w + 54] = (((in[c + 34] & 0xffffffc000000000ULL) >> 38) | (in[c + 35] & 0x0000000000007fffULL) << 26);
        out[w + 55] = ((in[c + 35] & 0x00ffffffffff8000ULL) >> 15);
        out[w + 56] = (((in[c + 35] & 0xff00000000000000ULL) >> 56) | (in[c + 36] & 0x00000001ffffffffULL) << 8);
        out[w + 57] = (((in[c + 36] & 0xfffffffe00000000ULL) >> 33) | (in[c + 37] & 0x00000000000003ffULL) << 31);
        out[w + 58] = ((in[c + 37] & 0x0007fffffffffc00ULL) >> 10);
        out[w + 59] = (((in[c + 37] & 0xfff8000000000000ULL) >> 51) | (in[c + 38] & 0x000000000fffffffULL) << 13);
        out[w + 60] = (((in[c + 38] & 0xfffffffff0000000ULL) >> 28) | (in[c + 39] & 0x000000000000001fULL) << 36);
        out[w + 61] = ((in[c + 39] & 0x00003fffffffffe0ULL) >>  5);
        out[w + 62] = (((in[c + 39] & 0xffffc00000000000ULL) >> 46) | (in[c + 40] & 0x00000000007fffffULL) << 18);
        out[w + 63] = ((in[c + 40] & 0xffffffffff800000ULL) >> 23);
    }
}
void
unpack_42_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 21) {
        out[w +  0] = ((in[c +  0] & 0x000003ffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xfffffc0000000000ULL) >> 42) | (in[c +  1] & 0x00000000000fffffULL) << 22);
        out[w +  2] = ((in[c +  1] & 0x3ffffffffff00000ULL) >> 20);
        out[w +  3] = (((in[c +  1] & 0xc000000000000000ULL) >> 62) | (in[c +  2] & 0x000000ffffffffffULL) << 2);
        out[w +  4] = (((in[c +  2] & 0xffffff0000000000ULL) >> 40) | (in[c +  3] & 0x000000000003ffffULL) << 24);
        out[w +  5] = ((in[c +  3] & 0x0ffffffffffc0000ULL) >> 18);
        out[w +  6] = (((in[c +  3] & 0xf000000000000000ULL) >> 60) | (in[c +  4] & 0x0000003fffffffffULL) << 4);
        out[w +  7] = (((in[c +  4] & 0xffffffc000000000ULL) >> 38) | (in[c +  5] & 0x000000000000ffffULL) << 26);
        out[w +  8] = ((in[c +  5] & 0x03ffffffffff0000ULL) >> 16);
        out[w +  9] = (((in[c +  5] & 0xfc00000000000000ULL) >> 58) | (in[c +  6] & 0x0000000fffffffffULL) << 6);
        out[w + 10] = (((in[c +  6] & 0xfffffff000000000ULL) >> 36) | (in[c +  7] & 0x0000000000003fffULL) << 28);
        out[w + 11] = ((in[c +  7] & 0x00ffffffffffc000ULL) >> 14);
        out[w + 12] = (((in[c +  7] & 0xff00000000000000ULL) >> 56) | (in[c +  8] & 0x00000003ffffffffULL) << 8);
        out[w + 13] = (((in[c +  8] & 0xfffffffc00000000ULL) >> 34) | (in[c +  9] & 0x0000000000000fffULL) << 30);
        out[w + 14] = ((in[c +  9] & 0x003ffffffffff000ULL) >> 12);
        out[w + 15] = (((in[c +  9] & 0xffc0000000000000ULL) >> 54) | (in[c + 10] & 0x00000000ffffffffULL) << 10);
        out[w + 16] = (((in[c + 10] & 0xffffffff00000000ULL) >> 32) | (in[c + 11] & 0x00000000000003ffULL) << 32);
        out[w + 17] = ((in[c + 11] & 0x000ffffffffffc00ULL) >> 10);
        out[w + 18] = (((in[c + 11] & 0xfff0000000000000ULL) >> 52) | (in[c + 12] & 0x000000003fffffffULL) << 12);
        out[w + 19] = (((in[c + 12] & 0xffffffffc0000000ULL) >> 30) | (in[c + 13] & 0x00000000000000ffULL) << 34);
        out[w + 20] = ((in[c + 13] & 0x0003ffffffffff00ULL) >>  8);
        out[w + 21] = (((in[c + 13] & 0xfffc000000000000ULL) >> 50) | (in[c + 14] & 0x000000000fffffffULL) << 14);
        out[w + 22] = (((in[c + 14] & 0xfffffffff0000000ULL) >> 28) | (in[c + 15] & 0x000000000000003fULL) << 36);
        out[w + 23] = ((in[c + 15] & 0x0000ffffffffffc0ULL) >>  6);
        out[w + 24] = (((in[c + 15] & 0xffff000000000000ULL) >> 48) | (in[c + 16] & 0x0000000003ffffffULL) << 16);
        out[w + 25] = (((in[c + 16] & 0xfffffffffc000000ULL) >> 26) | (in[c + 17] & 0x000000000000000fULL) << 38);
        out[w + 26] = ((in[c + 17] & 0x00003ffffffffff0ULL) >>  4);
        out[w + 27] = (((in[c + 17] & 0xffffc00000000000ULL) >> 46) | (in[c + 18] & 0x0000000000ffffffULL) << 18);
        out[w + 28] = (((in[c + 18] & 0xffffffffff000000ULL) >> 24) | (in[c + 19] & 0x0000000000000003ULL) << 40);
        out[w + 29] = ((in[c + 19] & 0x00000ffffffffffcULL) >>  2);
        out[w + 30] = (((in[c + 19] & 0xfffff00000000000ULL) >> 44) | (in[c + 20] & 0x00000000003fffffULL) << 20);
        out[w + 31] = ((in[c + 20] & 0xffffffffffc00000ULL) >> 22);
    }
}
void
unpack_43_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 43) {
        out[w +  0] = ((in[c +  0] & 0x000007ffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xfffff80000000000ULL) >> 43) | (in[c +  1] & 0x00000000003fffffULL) << 21);
        out[w +  2] = (((in[c +  1] & 0xffffffffffc00000ULL) >> 22) | (in[c +  2] & 0x0000000000000001ULL) << 42);
        out[w +  3] = ((in[c +  2] & 0x00000ffffffffffeULL) >>  1);
        out[w +  4] = (((in[c +  2] & 0xfffff00000000000ULL) >> 44) | (in[c +  3] & 0x00000000007fffffULL) << 20);
        out[w +  5] = (((in[c +  3] & 0xffffffffff800000ULL) >> 23) | (in[c +  4] & 0x0000000000000003ULL) << 41);
        out[w +  6] = ((in[c +  4] & 0x00001ffffffffffcULL) >>  2);
        out[w +  7] = (((in[c +  4] & 0xffffe00000000000ULL) >> 45) | (in[c +  5] & 0x0000000000ffffffULL) << 19);
        out[w +  8] = (((in[c +  5] & 0xffffffffff000000ULL) >> 24) | (in[c +  6] & 0x0000000000000007ULL) << 40);
        out[w +  9] = ((in[c +  6] & 0x00003ffffffffff8ULL) >>  3);
        out[w + 10] = (((in[c +  6] & 0xffffc00000000000ULL) >> 46) | (in[c +  7] & 0x0000000001ffffffULL) << 18);
        out[w + 11] = (((in[c +  7] & 0xfffffffffe000000ULL) >> 25) | (in[c +  8] & 0x000000000000000fULL) << 39);
        out[w + 12] = ((in[c +  8] & 0x00007ffffffffff0ULL) >>  4);
        out[w + 13] = (((in[c +  8] & 0xffff800000000000ULL) >> 47) | (in[c +  9] & 0x0000000003ffffffULL) << 17);
        out[w + 14] = (((in[c +  9] & 0xfffffffffc000000ULL) >> 26) | (in[c + 10] & 0x000000000000001fULL) << 38);
        out[w + 15] = ((in[c + 10] & 0x0000ffffffffffe0ULL) >>  5);
        out[w + 16] = (((in[c + 10] & 0xffff000000000000ULL) >> 48) | (in[c + 11] & 0x0000000007ffffffULL) << 16);
        out[w + 17] = (((in[c + 11] & 0xfffffffff8000000ULL) >> 27) | (in[c + 12] & 0x000000000000003fULL) << 37);
        out[w + 18] = ((in[c + 12] & 0x0001ffffffffffc0ULL) >>  6);
        out[w + 19] = (((in[c + 12] & 0xfffe000000000000ULL) >> 49) | (in[c + 13] & 0x000000000fffffffULL) << 15);
        out[w + 20] = (((in[c + 13] & 0xfffffffff0000000ULL) >> 28) | (in[c + 14] & 0x000000000000007fULL) << 36);
        out[w + 21] = ((in[c + 14] & 0x0003ffffffffff80ULL) >>  7);
        out[w + 22] = (((in[c + 14] & 0xfffc000000000000ULL) >> 50) | (in[c + 15] & 0x000000001fffffffULL) << 14);
        out[w + 23] = (((in[c + 15] & 0xffffffffe0000000ULL) >> 29) | (in[c + 16] & 0x00000000000000ffULL) << 35);
        out[w + 24] = ((in[c + 16] & 0x0007ffffffffff00ULL) >>  8);
        out[w + 25] = (((in[c + 16] & 0xfff8000000000000ULL) >> 51) | (in[c + 17] & 0x000000003fffffffULL) << 13);
        out[w + 26] = (((in[c + 17] & 0xffffffffc0000000ULL) >> 30) | (in[c + 18] & 0x00000000000001ffULL) << 34);
        out[w + 27] = ((in[c + 18] & 0x000ffffffffffe00ULL) >>  9);
        out[w + 28] = (((in[c + 18] & 0xfff0000000000000ULL) >> 52) | (in[c + 19] & 0x000000007fffffffULL) << 12);
        out[w + 29] = (((in[c + 19] & 0xffffffff80000000ULL) >> 31) | (in[c + 20] & 0x00000000000003ffULL) << 33);
        out[w + 30] = ((in[c + 20] & 0x001ffffffffffc00ULL) >> 10);
        out[w + 31] = (((in[c + 20] & 0xffe0000000000000ULL) >> 53) | (in[c + 21] & 0x00000000ffffffffULL) << 11);
        out[w + 32] = (((in[c + 21] & 0xffffffff00000000ULL) >> 32) | (in[c + 22] & 0x00000000000007ffULL) << 32);
        out[w + 33] = ((in[c + 22] & 0x003ffffffffff800ULL) >> 11);
        out[w + 34] = (((in[c + 22] & 0xffc0000000000000ULL) >> 54) | (in[c + 23] & 0x00000001ffffffffULL) << 10);
        out[w + 35] = (((in[c + 23] & 0xfffffffe00000000ULL) >> 33) | (in[c + 24] & 0x0000000000000fffULL) << 31);
        out[w + 36] = ((in[c + 24] & 0x007ffffffffff000ULL) >> 12);
        out[w + 37] = (((in[c + 24] & 0xff80000000000000ULL) >> 55) | (in[c + 25] & 0x00000003ffffffffULL) << 9);
        out[w + 38] = (((in[c + 25] & 0xfffffffc00000000ULL) >> 34) | (in[c + 26] & 0x0000000000001fffULL) << 30);
        out[w + 39] = ((in[c + 26] & 0x00ffffffffffe000ULL) >> 13);
        out[w + 40] = (((in[c + 26] & 0xff00000000000000ULL) >> 56) | (in[c + 27] & 0x00000007ffffffffULL) << 8);
        out[w + 41] = (((in[c + 27] & 0xfffffff800000000ULL) >> 35) | (in[c + 28] & 0x0000000000003fffULL) << 29);
        out[w + 42] = ((in[c + 28] & 0x01ffffffffffc000ULL) >> 14);
        out[w + 43] = (((in[c + 28] & 0xfe00000000000000ULL) >> 57) | (in[c + 29] & 0x0000000fffffffffULL) << 7);
        out[w + 44] = (((in[c + 29] & 0xfffffff000000000ULL) >> 36) | (in[c + 30] & 0x0000000000007fffULL) << 28);
        out[w + 45] = ((in[c + 30] & 0x03ffffffffff8000ULL) >> 15);
        out[w + 46] = (((in[c + 30] & 0xfc00000000000000ULL) >> 58) | (in[c + 31] & 0x0000001fffffffffULL) << 6);
        out[w + 47] = (((in[c + 31] & 0xffffffe000000000ULL) >> 37) | (in[c + 32] & 0x000000000000ffffULL) << 27);
        out[w + 48] = ((in[c + 32] & 0x07ffffffffff0000ULL) >> 16);
        out[w + 49] = (((in[c + 32] & 0xf800000000000000ULL) >> 59) | (in[c + 33] & 0x0000003fffffffffULL) << 5);
        out[w + 50] = (((in[c + 33] & 0xffffffc000000000ULL) >> 38) | (in[c + 34] & 0x000000000001ffffULL) << 26);
        out[w + 51] = ((in[c + 34] & 0x0ffffffffffe0000ULL) >> 17);
        out[w + 52] = (((in[c + 34] & 0xf000000000000000ULL) >> 60) | (in[c + 35] & 0x0000007fffffffffULL) << 4);
        out[w + 53] = (((in[c + 35] & 0xffffff8000000000ULL) >> 39) | (in[c + 36] & 0x000000000003ffffULL) << 25);
        out[w + 54] = ((in[c + 36] & 0x1ffffffffffc0000ULL) >> 18);
        out[w + 55] = (((in[c + 36] & 0xe000000000000000ULL) >> 61) | (in[c + 37] & 0x000000ffffffffffULL) << 3);
        out[w + 56] = (((in[c + 37] & 0xffffff0000000000ULL) >> 40) | (in[c + 38] & 0x000000000007ffffULL) << 24);
        out[w + 57] = ((in[c + 38] & 0x3ffffffffff80000ULL) >> 19);
        out[w + 58] = (((in[c + 38] & 0xc000000000000000ULL) >> 62) | (in[c + 39] & 0x000001ffffffffffULL) << 2);
        out[w + 59] = (((in[c + 39] & 0xfffffe0000000000ULL) >> 41) | (in[c + 40] & 0x00000000000fffffULL) << 23);
        out[w + 60] = ((in[c + 40] & 0x7ffffffffff00000ULL) >> 20);
        out[w + 61] = (((in[c + 40] & 0x8000000000000000ULL) >> 63) | (in[c + 41] & 0x000003ffffffffffULL) << 1);
        out[w + 62] = (((in[c + 41] & 0xfffffc0000000000ULL) >> 42) | (in[c + 42] & 0x00000000001fffffULL) << 22);
        out[w + 63] = ((in[c + 42] & 0xffffffffffe00000ULL) >> 21);
    }
}
void
unpack_44_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 16, c += 11) {
        out[w +  0] = ((in[c +  0] & 0x00000fffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xfffff00000000000ULL) >> 44) | (in[c +  1] & 0x0000000000ffffffULL) << 20);
        out[w +  2] = (((in[c +  1] & 0xffffffffff000000ULL) >> 24) | (in[c +  2] & 0x000000000000000fULL) << 40);
        out[w +  3] = ((in[c +  2] & 0x0000fffffffffff0ULL) >>  4);
        out[w +  4] = (((in[c +  2] & 0xffff000000000000ULL) >> 48) | (in[c +  3] & 0x000000000fffffffULL) << 16);
        out[w +  5] = (((in[c +  3] & 0xfffffffff0000000ULL) >> 28) | (in[c +  4] & 0x00000000000000ffULL) << 36);
        out[w +  6] = ((in[c +  4] & 0x000fffffffffff00ULL) >>  8);
        out[w +  7] = (((in[c +  4] & 0xfff0000000000000ULL) >> 52) | (in[c +  5] & 0x00000000ffffffffULL) << 12);
        out[w +  8] = (((in[c +  5] & 0xffffffff00000000ULL) >> 32) | (in[c +  6] & 0x0000000000000fffULL) << 32);
        out[w +  9] = ((in[c +  6] & 0x00fffffffffff000ULL) >> 12);
        out[w + 10] = (((in[c +  6] & 0xff00000000000000ULL) >> 56) | (in[c +  7] & 0x0000000fffffffffULL) << 8);
        out[w + 11] = (((in[c +  7] & 0xfffffff000000000ULL) >> 36) | (in[c +  8] & 0x000000000000ffffULL) << 28);
        out[w + 12] = ((in[c +  8] & 0x0fffffffffff0000ULL) >> 16);
        out[w + 13] = (((in[c +  8] & 0xf000000000000000ULL) >> 60) | (in[c +  9] & 0x000000ffffffffffULL) << 4);
        out[w + 14] = (((in[c +  9] & 0xffffff0000000000ULL) >> 40) | (in[c + 10] & 0x00000000000fffffULL) << 24);
        out[w + 15] = ((in[c + 10] & 0xfffffffffff00000ULL) >> 20);
    }
}
void
unpack_45_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 45) {
        out[w +  0] = ((in[c +  0] & 0x00001fffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xffffe00000000000ULL) >> 45) | (in[c +  1] & 0x0000000003ffffffULL) << 19);
        out[w +  2] = (((in[c +  1] & 0xfffffffffc000000ULL) >> 26) | (in[c +  2] & 0x000000000000007fULL) << 38);
        out[w +  3] = ((in[c +  2] & 0x000fffffffffff80ULL) >>  7);
        out[w +  4] = (((in[c +  2] & 0xfff0000000000000ULL) >> 52) | (in[c +  3] & 0x00000001ffffffffULL) << 12);
        out[w +  5] = (((in[c +  3] & 0xfffffffe00000000ULL) >> 33) | (in[c +  4] & 0x0000000000003fffULL) << 31);
        out[w +  6] = ((in[c +  4] & 0x07ffffffffffc000ULL) >> 14);
        out[w +  7] = (((in[c +  4] & 0xf800000000000000ULL) >> 59) | (in[c +  5] & 0x000000ffffffffffULL) << 5);
        out[w +  8] = (((in[c +  5] & 0xffffff0000000000ULL) >> 40) | (in[c +  6] & 0x00000000001fffffULL) << 24);
        out[w +  9] = (((in[c +  6] & 0xffffffffffe00000ULL) >> 21) | (in[c +  7] & 0x0000000000000003ULL) << 43);
        out[w + 10] = ((in[c +  7] & 0x00007ffffffffffcULL) >>  2);
        out[w + 11] = (((in[c +  7] & 0xffff800000000000ULL) >> 47) | (in[c +  8] & 0x000000000fffffffULL) << 17);
        out[w + 12] = (((in[c +  8] & 0xfffffffff0000000ULL) >> 28) | (in[c +  9] & 0x00000000000001ffULL) << 36);
        out[w + 13] = ((in[c +  9] & 0x003ffffffffffe00ULL) >>  9);
        out[w + 14] = (((in[c +  9] & 0xffc0000000000000ULL) >> 54) | (in[c + 10] & 0x00000007ffffffffULL) << 10);
        out[w + 15] = (((in[c + 10] & 0xfffffff800000000ULL) >> 35) | (in[c + 11] & 0x000000000000ffffULL) << 29);
        out[w + 16] = ((in[c + 11] & 0x1fffffffffff0000ULL) >> 16);
        out[w + 17] = (((in[c + 11] & 0xe000000000000000ULL) >> 61) | (in[c + 12] & 0x000003ffffffffffULL) << 3);
        out[w + 18] = (((in[c + 12] & 0xfffffc0000000000ULL) >> 42) | (in[c + 13] & 0x00000000007fffffULL) << 22);
        out[w + 19] = (((in[c + 13] & 0xffffffffff800000ULL) >> 23) | (in[c + 14] & 0x000000000000000fULL) << 41);
        out[w + 20] = ((in[c + 14] & 0x0001fffffffffff0ULL) >>  4);
        out[w + 21] = (((in[c + 14] & 0xfffe000000000000ULL) >> 49) | (in[c + 15] & 0x000000003fffffffULL) << 15);
        out[w + 22] = (((in[c + 15] & 0xffffffffc0000000ULL) >> 30) | (in[c + 16] & 0x00000000000007ffULL) << 34);
        out[w + 23] = ((in[c + 16] & 0x00fffffffffff800ULL) >> 11);
        out[w + 24] = (((in[c + 16] & 0xff00000000000000ULL) >> 56) | (in[c + 17] & 0x0000001fffffffffULL) << 8);
        out[w + 25] = (((in[c + 17] & 0xffffffe000000000ULL) >> 37) | (in[c + 18] & 0x000000000003ffffULL) << 27);
        out[w + 26] = ((in[c + 18] & 0x7ffffffffffc0000ULL) >> 18);
        out[w + 27] = (((in[c + 18] & 0x8000000000000000ULL) >> 63) | (in[c + 19] & 0x00000fffffffffffULL) << 1);
        out[w + 28] = (((in[c + 19] & 0xfffff00000000000ULL) >> 44) | (in[c + 20] & 0x0000000001ffffffULL) << 20);
        out[w + 29] = (((in[c + 20] & 0xfffffffffe000000ULL) >> 25) | (in[c + 21] & 0x000000000000003fULL) << 39);
        out[w + 30] = ((in[c + 21] & 0x0007ffffffffffc0ULL) >>  6);
        out[w + 31] = (((in[c + 21] & 0xfff8000000000000ULL) >> 51) | (in[c + 22] & 0x00000000ffffffffULL) << 13);
        out[w + 32] = (((in[c + 22] & 0xffffffff00000000ULL) >> 32) | (in[c + 23] & 0x0000000000001fffULL) << 32);
        out[w + 33] = ((in[c + 23] & 0x03ffffffffffe000ULL) >> 13);
        out[w + 34] = (((in[c + 23] & 0xfc00000000000000ULL) >> 58) | (in[c + 24] & 0x0000007fffffffffULL) << 6);
        out[w + 35] = (((in[c + 24] & 0xffffff8000000000ULL) >> 39) | (in[c + 25] & 0x00000000000fffffULL) << 25);
        out[w + 36] = (((in[c + 25] & 0xfffffffffff00000ULL) >> 20) | (in[c + 26] & 0x0000000000000001ULL) << 44);
        out[w + 37] = ((in[c + 26] & 0x00003ffffffffffeULL) >>  1);
        out[w + 38] = (((in[c + 26] & 0xffffc00000000000ULL) >> 46) | (in[c + 27] & 0x0000000007ffffffULL) << 18);
        out[w + 39] = (((in[c + 27] & 0xfffffffff8000000ULL) >> 27) | (in[c + 28] & 0x00000000000000ffULL) << 37);
        out[w + 40] = ((in[c + 28] & 0x001fffffffffff00ULL) >>  8);
        out[w + 41] = (((in[c + 28] & 0xffe0000000000000ULL) >> 53) | (in[c + 29] & 0x00000003ffffffffULL) << 11);
        out[w + 42] = (((in[c + 29] & 0xfffffffc00000000ULL) >> 34) | (in[c + 30] & 0x0000000000007fffULL) << 30);
        out[w + 43] = ((in[c + 30] & 0x0fffffffffff8000ULL) >> 15);
        out[w + 44] = (((in[c + 30] & 0xf000000000000000ULL) >> 60) | (in[c + 31] & 0x000001ffffffffffULL) << 4);
        out[w + 45] = (((in[c + 31] & 0xfffffe0000000000ULL) >> 41) | (in[c + 32] & 0x00000000003fffffULL) << 23);
        out[w + 46] = (((in[c + 32] & 0xffffffffffc00000ULL) >> 22) | (in[c + 33] & 0x0000000000000007ULL) << 42);
        out[w + 47] = ((in[c + 33] & 0x0000fffffffffff8ULL) >>  3);
        out[w + 48] = (((in[c + 33] & 0xffff000000000000ULL) >> 48) | (in[c + 34] & 0x000000001fffffffULL) << 16);
        out[w + 49] = (((in[c + 34] & 0xffffffffe0000000ULL) >> 29) | (in[c + 35] & 0x00000000000003ffULL) << 35);
        out[w + 50] = ((in[c + 35] & 0x007ffffffffffc00ULL) >> 10);
        out[w + 51] = (((in[c + 35] & 0xff80000000000000ULL) >> 55) | (in[c + 36] & 0x0000000fffffffffULL) << 9);
        out[w + 52] = (((in[c + 36] & 0xfffffff000000000ULL) >> 36) | (in[c + 37] & 0x000000000001ffffULL) << 28);
        out[w + 53] = ((in[c + 37] & 0x3ffffffffffe0000ULL) >> 17);
        out[w + 54] = (((in[c + 37] & 0xc000000000000000ULL) >> 62) | (in[c + 38] & 0x000007ffffffffffULL) << 2);
        out[w + 55] = (((in[c + 38] & 0xfffff80000000000ULL) >> 43) | (in[c + 39] & 0x0000000000ffffffULL) << 21);
        out[w + 56] = (((in[c + 39] & 0xffffffffff000000ULL) >> 24) | (in[c + 40] & 0x000000000000001fULL) << 40);
        out[w + 57] = ((in[c + 40] & 0x0003ffffffffffe0ULL) >>  5);
        out[w + 58] = (((in[c + 40] & 0xfffc000000000000ULL) >> 50) | (in[c + 41] & 0x000000007fffffffULL) << 14);
        out[w + 59] = (((in[c + 41] & 0xffffffff80000000ULL) >> 31) | (in[c + 42] & 0x0000000000000fffULL) << 33);
        out[w + 60] = ((in[c + 42] & 0x01fffffffffff000ULL) >> 12);
        out[w + 61] = (((in[c + 42] & 0xfe00000000000000ULL) >> 57) | (in[c + 43] & 0x0000003fffffffffULL) << 7);
        out[w + 62] = (((in[c + 43] & 0xffffffc000000000ULL) >> 38) | (in[c + 44] & 0x000000000007ffffULL) << 26);
        out[w + 63] = ((in[c + 44] & 0xfffffffffff80000ULL) >> 19);
    }
}
void
unpack_46_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 23) {
        out[w +  0] = ((in[c +  0] & 0x00003fffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xffffc00000000000ULL) >> 46) | (in[c +  1] & 0x000000000fffffffULL) << 18);
        out[w +  2] = (((in[c +  1] & 0xfffffffff0000000ULL) >> 28) | (in[c +  2] & 0x00000000000003ffULL) << 36);
        out[w +  3] = ((in[c +  2] & 0x00fffffffffffc00ULL) >> 10);
        out[w +  4] = (((in[c +  2] & 0xff00000000000000ULL) >> 56) | (in[c +  3] & 0x0000003fffffffffULL) << 8);
        out[w +  5] = (((in[c +  3] & 0xffffffc000000000ULL) >> 38) | (in[c +  4] & 0x00000000000fffffULL) << 26);
        out[w +  6] = (((in[c +  4] & 0xfffffffffff00000ULL) >> 20) | (in[c +  5] & 0x0000000000000003ULL) << 44);
        out[w +  7] = ((in[c +  5] & 0x0000fffffffffffcULL) >>  2);
        out[w +  8] = (((in[c +  5] & 0xffff000000000000ULL) >> 48) | (in[c +  6] & 0x000000003fffffffULL) << 16);
        out[w +  9] = (((in[c +  6] & 0xffffffffc0000000ULL) >> 30) | (in[c +  7] & 0x0000000000000fffULL) << 34);
        out[w + 10] = ((in[c +  7] & 0x03fffffffffff000ULL) >> 12);
        out[w + 11] = (((in[c +  7] & 0xfc00000000000000ULL) >> 58) | (in[c +  8] & 0x000000ffffffffffULL) << 6);
        out[w + 12] = (((in[c +  8] & 0xffffff0000000000ULL) >> 40) | (in[c +  9] & 0x00000000003fffffULL) << 24);
        out[w + 13] = (((in[c +  9] & 0xffffffffffc00000ULL) >> 22) | (in[c + 10] & 0x000000000000000fULL) << 42);
        out[w + 14] = ((in[c + 10] & 0x0003fffffffffff0ULL) >>  4);
        out[w + 15] = (((in[c + 10] & 0xfffc000000000000ULL) >> 50) | (in[c + 11] & 0x00000000ffffffffULL) << 14);
        out[w + 16] = (((in[c + 11] & 0xffffffff00000000ULL) >> 32) | (in[c + 12] & 0x0000000000003fffULL) << 32);
        out[w + 17] = ((in[c + 12] & 0x0fffffffffffc000ULL) >> 14);
        out[w + 18] = (((in[c + 12] & 0xf000000000000000ULL) >> 60) | (in[c + 13] & 0x000003ffffffffffULL) << 4);
        out[w + 19] = (((in[c + 13] & 0xfffffc0000000000ULL) >> 42) | (in[c + 14] & 0x0000000000ffffffULL) << 22);
        out[w + 20] = (((in[c + 14] & 0xffffffffff000000ULL) >> 24) | (in[c + 15] & 0x000000000000003fULL) << 40);
        out[w + 21] = ((in[c + 15] & 0x000fffffffffffc0ULL) >>  6);
        out[w + 22] = (((in[c + 15] & 0xfff0000000000000ULL) >> 52) | (in[c + 16] & 0x00000003ffffffffULL) << 12);
        out[w + 23] = (((in[c + 16] & 0xfffffffc00000000ULL) >> 34) | (in[c + 17] & 0x000000000000ffffULL) << 30);
        out[w + 24] = ((in[c + 17] & 0x3fffffffffff0000ULL) >> 16);
        out[w + 25] = (((in[c + 17] & 0xc000000000000000ULL) >> 62) | (in[c + 18] & 0x00000fffffffffffULL) << 2);
        out[w + 26] = (((in[c + 18] & 0xfffff00000000000ULL) >> 44) | (in[c + 19] & 0x0000000003ffffffULL) << 20);
        out[w + 27] = (((in[c + 19] & 0xfffffffffc000000ULL) >> 26) | (in[c + 20] & 0x00000000000000ffULL) << 38);
        out[w + 28] = ((in[c + 20] & 0x003fffffffffff00ULL) >>  8);
        out[w + 29] = (((in[c + 20] & 0xffc0000000000000ULL) >> 54) | (in[c + 21] & 0x0000000fffffffffULL) << 10);
        out[w + 30] = (((in[c + 21] & 0xfffffff000000000ULL) >> 36) | (in[c + 22] & 0x000000000003ffffULL) << 28);
        out[w + 31] = ((in[c + 22] & 0xfffffffffffc0000ULL) >> 18);
    }
}
void
unpack_47_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 47) {
        out[w +  0] = ((in[c +  0] & 0x00007fffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xffff800000000000ULL) >> 47) | (in[c +  1] & 0x000000003fffffffULL) << 17);
        out[w +  2] = (((in[c +  1] & 0xffffffffc0000000ULL) >> 30) | (in[c +  2] & 0x0000000000001fffULL) << 34);
        out[w +  3] = ((in[c +  2] & 0x0fffffffffffe000ULL) >> 13);
        out[w +  4] = (((in[c +  2] & 0xf000000000000000ULL) >> 60) | (in[c +  3] & 0x000007ffffffffffULL) << 4);
        out[w +  5] = (((in[c +  3] & 0xfffff80000000000ULL) >> 43) | (in[c +  4] & 0x0000000003ffffffULL) << 21);
        out[w +  6] = (((in[c +  4] & 0xfffffffffc000000ULL) >> 26) | (in[c +  5] & 0x00000000000001ffULL) << 38);
        out[w +  7] = ((in[c +  5] & 0x00fffffffffffe00ULL) >>  9);
        out[w +  8] = (((in[c +  5] & 0xff00000000000000ULL) >> 56) | (in[c +  6] & 0x0000007fffffffffULL) << 8);
        out[w +  9] = (((in[c +  6] & 0xffffff8000000000ULL) >> 39) | (in[c +  7] & 0x00000000003fffffULL) << 25);
        out[w + 10] = (((in[c +  7] & 0xffffffffffc00000ULL) >> 22) | (in[c +  8] & 0x000000000000001fULL) << 42);
        out[w + 11] = ((in[c +  8] & 0x000fffffffffffe0ULL) >>  5);
        out[w + 12] = (((in[c +  8] & 0xfff0000000000000ULL) >> 52) | (in[c +  9] & 0x00000007ffffffffULL) << 12);
        out[w + 13] = (((in[c +  9] & 0xfffffff800000000ULL) >> 35) | (in[c + 10] & 0x000000000003ffffULL) << 29);
        out[w + 14] = (((in[c + 10] & 0xfffffffffffc0000ULL) >> 18) | (in[c + 11] & 0x0000000000000001ULL) << 46);
        out[w + 15] = ((in[c + 11] & 0x0000fffffffffffeULL) >>  1);
        out[w + 16] = (((in[c + 11] & 0xffff000000000000ULL) >> 48) | (in[c + 12] & 0x000000007fffffffULL) << 16);
        out[w + 17] = (((in[c + 12] & 0xffffffff80000000ULL) >> 31) | (in[c + 13] & 0x0000000000003fffULL) << 33);
        out[w + 18] = ((in[c + 13] & 0x1fffffffffffc000ULL) >> 14);
        out[w + 19] = (((in[c + 13] & 0xe000000000000000ULL) >> 61) | (in[c + 14] & 0x00000fffffffffffULL) << 3);
        out[w + 20] = (((in[c + 14] & 0xfffff00000000000ULL) >> 44) | (in[c + 15] & 0x0000000007ffffffULL) << 20);
        out[w + 21] = (((in[c + 15] & 0xfffffffff8000000ULL) >> 27) | (in[c + 16] & 0x00000000000003ffULL) << 37);
        out[w + 22] = ((in[c + 16] & 0x01fffffffffffc00ULL) >> 10);
        out[w + 23] = (((in[c + 16] & 0xfe00000000000000ULL) >> 57) | (in[c + 17] & 0x000000ffffffffffULL) << 7);
        out[w + 24] = (((in[c + 17] & 0xffffff0000000000ULL) >> 40) | (in[c + 18] & 0x00000000007fffffULL) << 24);
        out[w + 25] = (((in[c + 18] & 0xffffffffff800000ULL) >> 23) | (in[c + 19] & 0x000000000000003fULL) << 41);
        out[w + 26] = ((in[c + 19] & 0x001fffffffffffc0ULL) >>  6);
        out[w + 27] = (((in[c + 19] & 0xffe0000000000000ULL) >> 53) | (in[c + 20] & 0x0000000fffffffffULL) << 11);
        out[w + 28] = (((in[c + 20] & 0xfffffff000000000ULL) >> 36) | (in[c + 21] & 0x000000000007ffffULL) << 28);
        out[w + 29] = (((in[c + 21] & 0xfffffffffff80000ULL) >> 19) | (in[c + 22] & 0x0000000000000003ULL) << 45);
        out[w + 30] = ((in[c + 22] & 0x0001fffffffffffcULL) >>  2);
        out[w + 31] = (((in[c + 22] & 0xfffe000000000000ULL) >> 49) | (in[c + 23] & 0x00000000ffffffffULL) << 15);
        out[w + 32] = (((in[c + 23] & 0xffffffff00000000ULL) >> 32) | (in[c + 24] & 0x0000000000007fffULL) << 32);
        out[w + 33] = ((in[c + 24] & 0x3fffffffffff8000ULL) >> 15);
        out[w + 34] = (((in[c + 24] & 0xc000000000000000ULL) >> 62) | (in[c + 25] & 0x00001fffffffffffULL) << 2);
        out[w + 35] = (((in[c + 25] & 0xffffe00000000000ULL) >> 45) | (in[c + 26] & 0x000000000fffffffULL) << 19);
        out[w + 36] = (((in[c + 26] & 0xfffffffff0000000ULL) >> 28) | (in[c + 27] & 0x00000000000007ffULL) << 36);
        out[w + 37] = ((in[c + 27] & 0x03fffffffffff800ULL) >> 11);
        out[w + 38] = (((in[c + 27] & 0xfc00000000000000ULL) >> 58) | (in[c + 28] & 0x000001ffffffffffULL) << 6);
        out[w + 39] = (((in[c + 28] & 0xfffffe0000000000ULL) >> 41) | (in[c + 29] & 0x0000000000ffffffULL) << 23);
        out[w + 40] = (((in[c + 29] & 0xffffffffff000000ULL) >> 24) | (in[c + 30] & 0x000000000000007fULL) << 40);
        out[w + 41] = ((in[c + 30] & 0x003fffffffffff80ULL) >>  7);
        out[w + 42] = (((in[c + 30] & 0xffc0000000000000ULL) >> 54) | (in[c + 31] & 0x0000001fffffffffULL) << 10);
        out[w + 43] = (((in[c + 31] & 0xffffffe000000000ULL) >> 37) | (in[c + 32] & 0x00000000000fffffULL) << 27);
        out[w + 44] = (((in[c + 32] & 0xfffffffffff00000ULL) >> 20) | (in[c + 33] & 0x0000000000000007ULL) << 44);
        out[w + 45] = ((in[c + 33] & 0x0003fffffffffff8ULL) >>  3);
        out[w + 46] = (((in[c + 33] & 0xfffc000000000000ULL) >> 50) | (in[c + 34] & 0x00000001ffffffffULL) << 14);
        out[w + 47] = (((in[c + 34] & 0xfffffffe00000000ULL) >> 33) | (in[c + 35] & 0x000000000000ffffULL) << 31);
        out[w + 48] = ((in[c + 35] & 0x7fffffffffff0000ULL) >> 16);
        out[w + 49] = (((in[c + 35] & 0x8000000000000000ULL) >> 63) | (in[c + 36] & 0x00003fffffffffffULL) << 1);
        out[w + 50] = (((in[c + 36] & 0xffffc00000000000ULL) >> 46) | (in[c + 37] & 0x000000001fffffffULL) << 18);
        out[w + 51] = (((in[c + 37] & 0xffffffffe0000000ULL) >> 29) | (in[c + 38] & 0x0000000000000fffULL) << 35);
        out[w + 52] = ((in[c + 38] & 0x07fffffffffff000ULL) >> 12);
        out[w + 53] = (((in[c + 38] & 0xf800000000000000ULL) >> 59) | (in[c + 39] & 0x000003ffffffffffULL) << 5);
        out[w + 54] = (((in[c + 39] & 0xfffffc0000000000ULL) >> 42) | (in[c + 40] & 0x0000000001ffffffULL) << 22);
        out[w + 55] = (((in[c + 40] & 0xfffffffffe000000ULL) >> 25) | (in[c + 41] & 0x00000000000000ffULL) << 39);
        out[w + 56] = ((in[c + 41] & 0x007fffffffffff00ULL) >>  8);
        out[w + 57] = (((in[c + 41] & 0xff80000000000000ULL) >> 55) | (in[c + 42] & 0x0000003fffffffffULL) << 9);
        out[w + 58] = (((in[c + 42] & 0xffffffc000000000ULL) >> 38) | (in[c + 43] & 0x00000000001fffffULL) << 26);
        out[w + 59] = (((in[c + 43] & 0xffffffffffe00000ULL) >> 21) | (in[c + 44] & 0x000000000000000fULL) << 43);
        out[w + 60] = ((in[c + 44] & 0x0007fffffffffff0ULL) >>  4);
        out[w + 61] = (((in[c + 44] & 0xfff8000000000000ULL) >> 51) | (in[c + 45] & 0x00000003ffffffffULL) << 13);
        out[w + 62] = (((in[c + 45] & 0xfffffffc00000000ULL) >> 34) | (in[c + 46] & 0x000000000001ffffULL) << 30);
        out[w + 63] = ((in[c + 46] & 0xfffffffffffe0000ULL) >> 17);
    }
}
void
unpack_48_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 4, c += 3) {
        out[w + 0] = ((in[c + 0] & 0x0000ffffffffffffULL) >>  0);
        out[w + 1] = (((in[c + 0] & 0xffff000000000000ULL) >> 48) | (in[c + 1] & 0x00000000ffffffffULL) << 16);
        out[w + 2] = (((in[c + 1] & 0xffffffff00000000ULL) >> 32) | (in[c + 2] & 0x000000000000ffffULL) << 32);
        out[w + 3] = ((in[c + 2] & 0xffffffffffff0000ULL) >> 16);
    }
}
void
unpack_49_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 49) {
        out[w +  0] = ((in[c +  0] & 0x0001ffffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xfffe000000000000ULL) >> 49) | (in[c +  1] & 0x00000003ffffffffULL) << 15);
        out[w +  2] = (((in[c +  1] & 0xfffffffc00000000ULL) >> 34) | (in[c +  2] & 0x000000000007ffffULL) << 30);
        out[w +  3] = (((in[c +  2] & 0xfffffffffff80000ULL) >> 19) | (in[c +  3] & 0x000000000000000fULL) << 45);
        out[w +  4] = ((in[c +  3] & 0x001ffffffffffff0ULL) >>  4);
        out[w +  5] = (((in[c +  3] & 0xffe0000000000000ULL) >> 53) | (in[c +  4] & 0x0000003fffffffffULL) << 11);
        out[w +  6] = (((in[c +  4] & 0xffffffc000000000ULL) >> 38) | (in[c +  5] & 0x00000000007fffffULL) << 26);
        out[w +  7] = (((in[c +  5] & 0xffffffffff800000ULL) >> 23) | (in[c +  6] & 0x00000000000000ffULL) << 41);
        out[w +  8] = ((in[c +  6] & 0x01ffffffffffff00ULL) >>  8);
        out[w +  9] = (((in[c +  6] & 0xfe00000000000000ULL) >> 57) | (in[c +  7] & 0x000003ffffffffffULL) << 7);
        out[w + 10] = (((in[c +  7] & 0xfffffc0000000000ULL) >> 42) | (in[c +  8] & 0x0000000007ffffffULL) << 22);
        out[w + 11] = (((in[c +  8] & 0xfffffffff8000000ULL) >> 27) | (in[c +  9] & 0x0000000000000fffULL) << 37);
        out[w + 12] = ((in[c +  9] & 0x1ffffffffffff000ULL) >> 12);
        out[w + 13] = (((in[c +  9] & 0xe000000000000000ULL) >> 61) | (in[c + 10] & 0x00003fffffffffffULL) << 3);
        out[w + 14] = (((in[c + 10] & 0xffffc00000000000ULL) >> 46) | (in[c + 11] & 0x000000007fffffffULL) << 18);
        out[w + 15] = (((in[c + 11] & 0xffffffff80000000ULL) >> 31) | (in[c + 12] & 0x000000000000ffffULL) << 33);
        out[w + 16] = (((in[c + 12] & 0xffffffffffff0000ULL) >> 16) | (in[c + 13] & 0x0000000000000001ULL) << 48);
        out[w + 17] = ((in[c + 13] & 0x0003fffffffffffeULL) >>  1);
        out[w + 18] = (((in[c + 13] & 0xfffc000000000000ULL) >> 50) | (in[c + 14] & 0x00000007ffffffffULL) << 14);
        out[w + 19] = (((in[c + 14] & 0xfffffff800000000ULL) >> 35) | (in[c + 15] & 0x00000000000fffffULL) << 29);
        out[w + 20] = (((in[c + 15] & 0xfffffffffff00000ULL) >> 20) | (in[c + 16] & 0x000000000000001fULL) << 44);
        out[w + 21] = ((in[c + 16] & 0x003fffffffffffe0ULL) >>  5);
        out[w + 22] = (((in[c + 16] & 0xffc0000000000000ULL) >> 54) | (in[c + 17] & 0x0000007fffffffffULL) << 10);
        out[w + 23] = (((in[c + 17] & 0xffffff8000000000ULL) >> 39) | (in[c + 18] & 0x0000000000ffffffULL) << 25);
        out[w + 24] = (((in[c + 18] & 0xffffffffff000000ULL) >> 24) | (in[c + 19] & 0x00000000000001ffULL) << 40);
        out[w + 25] = ((in[c + 19] & 0x03fffffffffffe00ULL) >>  9);
        out[w + 26] = (((in[c + 19] & 0xfc00000000000000ULL) >> 58) | (in[c + 20] & 0x000007ffffffffffULL) << 6);
        out[w + 27] = (((in[c + 20] & 0xfffff80000000000ULL) >> 43) | (in[c + 21] & 0x000000000fffffffULL) << 21);
        out[w + 28] = (((in[c + 21] & 0xfffffffff0000000ULL) >> 28) | (in[c + 22] & 0x0000000000001fffULL) << 36);
        out[w + 29] = ((in[c + 22] & 0x3fffffffffffe000ULL) >> 13);
        out[w + 30] = (((in[c + 22] & 0xc000000000000000ULL) >> 62) | (in[c + 23] & 0x00007fffffffffffULL) << 2);
        out[w + 31] = (((in[c + 23] & 0xffff800000000000ULL) >> 47) | (in[c + 24] & 0x00000000ffffffffULL) << 17);
        out[w + 32] = (((in[c + 24] & 0xffffffff00000000ULL) >> 32) | (in[c + 25] & 0x000000000001ffffULL) << 32);
        out[w + 33] = (((in[c + 25] & 0xfffffffffffe0000ULL) >> 17) | (in[c + 26] & 0x0000000000000003ULL) << 47);
        out[w + 34] = ((in[c + 26] & 0x0007fffffffffffcULL) >>  2);
        out[w + 35] = (((in[c + 26] & 0xfff8000000000000ULL) >> 51) | (in[c + 27] & 0x0000000fffffffffULL) << 13);
        out[w + 36] = (((in[c + 27] & 0xfffffff000000000ULL) >> 36) | (in[c + 28] & 0x00000000001fffffULL) << 28);
        out[w + 37] = (((in[c + 28] & 0xffffffffffe00000ULL) >> 21) | (in[c + 29] & 0x000000000000003fULL) << 43);
        out[w + 38] = ((in[c + 29] & 0x007fffffffffffc0ULL) >>  6);
        out[w + 39] = (((in[c + 29] & 0xff80000000000000ULL) >> 55) | (in[c + 30] & 0x000000ffffffffffULL) << 9);
        out[w + 40] = (((in[c + 30] & 0xffffff0000000000ULL) >> 40) | (in[c + 31] & 0x0000000001ffffffULL) << 24);
        out[w + 41] = (((in[c + 31] & 0xfffffffffe000000ULL) >> 25) | (in[c + 32] & 0x00000000000003ffULL) << 39);
        out[w + 42] = ((in[c + 32] & 0x07fffffffffffc00ULL) >> 10);
        out[w + 43] = (((in[c + 32] & 0xf800000000000000ULL) >> 59) | (in[c + 33] & 0x00000fffffffffffULL) << 5);
        out[w + 44] = (((in[c + 33] & 0xfffff00000000000ULL) >> 44) | (in[c + 34] & 0x000000001fffffffULL) << 20);
        out[w + 45] = (((in[c + 34] & 0xffffffffe0000000ULL) >> 29) | (in[c + 35] & 0x0000000000003fffULL) << 35);
        out[w + 46] = ((in[c + 35] & 0x7fffffffffffc000ULL) >> 14);
        out[w + 47] = (((in[c + 35] & 0x8000000000000000ULL) >> 63) | (in[c + 36] & 0x0000ffffffffffffULL) << 1);
        out[w + 48] = (((in[c + 36] & 0xffff000000000000ULL) >> 48) | (in[c + 37] & 0x00000001ffffffffULL) << 16);
        out[w + 49] = (((in[c + 37] & 0xfffffffe00000000ULL) >> 33) | (in[c + 38] & 0x000000000003ffffULL) << 31);
        out[w + 50] = (((in[c + 38] & 0xfffffffffffc0000ULL) >> 18) | (in[c + 39] & 0x0000000000000007ULL) << 46);
        out[w + 51] = ((in[c + 39] & 0x000ffffffffffff8ULL) >>  3);
        out[w + 52] = (((in[c + 39] & 0xfff0000000000000ULL) >> 52) | (in[c + 40] & 0x0000001fffffffffULL) << 12);
        out[w + 53] = (((in[c + 40] & 0xffffffe000000000ULL) >> 37) | (in[c + 41] & 0x00000000003fffffULL) << 27);
        out[w + 54] = (((in[c + 41] & 0xffffffffffc00000ULL) >> 22) | (in[c + 42] & 0x000000000000007fULL) << 42);
        out[w + 55] = ((in[c + 42] & 0x00ffffffffffff80ULL) >>  7);
        out[w + 56] = (((in[c + 42] & 0xff00000000000000ULL) >> 56) | (in[c + 43] & 0x000001ffffffffffULL) << 8);
        out[w + 57] = (((in[c + 43] & 0xfffffe0000000000ULL) >> 41) | (in[c + 44] & 0x0000000003ffffffULL) << 23);
        out[w + 58] = (((in[c + 44] & 0xfffffffffc000000ULL) >> 26) | (in[c + 45] & 0x00000000000007ffULL) << 38);
        out[w + 59] = ((in[c + 45] & 0x0ffffffffffff800ULL) >> 11);
        out[w + 60] = (((in[c + 45] & 0xf000000000000000ULL) >> 60) | (in[c + 46] & 0x00001fffffffffffULL) << 4);
        out[w + 61] = (((in[c + 46] & 0xffffe00000000000ULL) >> 45) | (in[c + 47] & 0x000000003fffffffULL) << 19);
        out[w + 62] = (((in[c + 47] & 0xffffffffc0000000ULL) >> 30) | (in[c + 48] & 0x0000000000007fffULL) << 34);
        out[w + 63] = ((in[c + 48] & 0xffffffffffff8000ULL) >> 15);
    }
}
void
unpack_50_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 25) {
        out[w +  0] = ((in[c +  0] & 0x0003ffffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xfffc000000000000ULL) >> 50) | (in[c +  1] & 0x0000000fffffffffULL) << 14);
        out[w +  2] = (((in[c +  1] & 0xfffffff000000000ULL) >> 36) | (in[c +  2] & 0x00000000003fffffULL) << 28);
        out[w +  3] = (((in[c +  2] & 0xffffffffffc00000ULL) >> 22) | (in[c +  3] & 0x00000000000000ffULL) << 42);
        out[w +  4] = ((in[c +  3] & 0x03ffffffffffff00ULL) >>  8);
        out[w +  5] = (((in[c +  3] & 0xfc00000000000000ULL) >> 58) | (in[c +  4] & 0x00000fffffffffffULL) << 6);
        out[w +  6] = (((in[c +  4] & 0xfffff00000000000ULL) >> 44) | (in[c +  5] & 0x000000003fffffffULL) << 20);
        out[w +  7] = (((in[c +  5] & 0xffffffffc0000000ULL) >> 30) | (in[c +  6] & 0x000000000000ffffULL) << 34);
        out[w +  8] = (((in[c +  6] & 0xffffffffffff0000ULL) >> 16) | (in[c +  7] & 0x0000000000000003ULL) << 48);
        out[w +  9] = ((in[c +  7] & 0x000ffffffffffffcULL) >>  2);
        out[w + 10] = (((in[c +  7] & 0xfff0000000000000ULL) >> 52) | (in[c +  8] & 0x0000003fffffffffULL) << 12);
        out[w + 11] = (((in[c +  8] & 0xffffffc000000000ULL) >> 38) | (in[c +  9] & 0x0000000000ffffffULL) << 26);
        out[w + 12] = (((in[c +  9] & 0xffffffffff000000ULL) >> 24) | (in[c + 10] & 0x00000000000003ffULL) << 40);
        out[w + 13] = ((in[c + 10] & 0x0ffffffffffffc00ULL) >> 10);
        out[w + 14] = (((in[c + 10] & 0xf000000000000000ULL) >> 60) | (in[c + 11] & 0x00003fffffffffffULL) << 4);
        out[w + 15] = (((in[c + 11] & 0xffffc00000000000ULL) >> 46) | (in[c + 12] & 0x00000000ffffffffULL) << 18);
        out[w + 16] = (((in[c + 12] & 0xffffffff00000000ULL) >> 32) | (in[c + 13] & 0x000000000003ffffULL) << 32);
        out[w + 17] = (((in[c + 13] & 0xfffffffffffc0000ULL) >> 18) | (in[c + 14] & 0x000000000000000fULL) << 46);
        out[w + 18] = ((in[c + 14] & 0x003ffffffffffff0ULL) >>  4);
        out[w + 19] = (((in[c + 14] & 0xffc0000000000000ULL) >> 54) | (in[c + 15] & 0x000000ffffffffffULL) << 10);
        out[w + 20] = (((in[c + 15] & 0xffffff0000000000ULL) >> 40) | (in[c + 16] & 0x0000000003ffffffULL) << 24);
        out[w + 21] = (((in[c + 16] & 0xfffffffffc000000ULL) >> 26) | (in[c + 17] & 0x0000000000000fffULL) << 38);
        out[w + 22] = ((in[c + 17] & 0x3ffffffffffff000ULL) >> 12);
        out[w + 23] = (((in[c + 17] & 0xc000000000000000ULL) >> 62) | (in[c + 18] & 0x0000ffffffffffffULL) << 2);
        out[w + 24] = (((in[c + 18] & 0xffff000000000000ULL) >> 48) | (in[c + 19] & 0x00000003ffffffffULL) << 16);
        out[w + 25] = (((in[c + 19] & 0xfffffffc00000000ULL) >> 34) | (in[c + 20] & 0x00000000000fffffULL) << 30);
        out[w + 26] = (((in[c + 20] & 0xfffffffffff00000ULL) >> 20) | (in[c + 21] & 0x000000000000003fULL) << 44);
        out[w + 27] = ((in[c + 21] & 0x00ffffffffffffc0ULL) >>  6);
        out[w + 28] = (((in[c + 21] & 0xff00000000000000ULL) >> 56) | (in[c + 22] & 0x000003ffffffffffULL) << 8);
        out[w + 29] = (((in[c + 22] & 0xfffffc0000000000ULL) >> 42) | (in[c + 23] & 0x000000000fffffffULL) << 22);
        out[w + 30] = (((in[c + 23] & 0xfffffffff0000000ULL) >> 28) | (in[c + 24] & 0x0000000000003fffULL) << 36);
        out[w + 31] = ((in[c + 24] & 0xffffffffffffc000ULL) >> 14);
    }
}
void
unpack_51_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 51) {
        out[w +  0] = ((in[c +  0] & 0x0007ffffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xfff8000000000000ULL) >> 51) | (in[c +  1] & 0x0000003fffffffffULL) << 13);
        out[w +  2] = (((in[c +  1] & 0xffffffc000000000ULL) >> 38) | (in[c +  2] & 0x0000000001ffffffULL) << 26);
        out[w +  3] = (((in[c +  2] & 0xfffffffffe000000ULL) >> 25) | (in[c +  3] & 0x0000000000000fffULL) << 39);
        out[w +  4] = ((in[c +  3] & 0x7ffffffffffff000ULL) >> 12);
        out[w +  5] = (((in[c +  3] & 0x8000000000000000ULL) >> 63) | (in[c +  4] & 0x0003ffffffffffffULL) << 1);
        out[w +  6] = (((in[c +  4] & 0xfffc000000000000ULL) >> 50) | (in[c +  5] & 0x0000001fffffffffULL) << 14);
        out[w +  7] = (((in[c +  5] & 0xffffffe000000000ULL) >> 37) | (in[c +  6] & 0x0000000000ffffffULL) << 27);
        out[w +  8] = (((in[c +  6] & 0xffffffffff000000ULL) >> 24) | (in[c +  7] & 0x00000000000007ffULL) << 40);
        out[w +  9] = ((in[c +  7] & 0x3ffffffffffff800ULL) >> 11);
        out[w + 10] = (((in[c +  7] & 0xc000000000000000ULL) >> 62) | (in[c +  8] & 0x0001ffffffffffffULL) << 2);
        out[w + 11] = (((in[c +  8] & 0xfffe000000000000ULL) >> 49) | (in[c +  9] & 0x0000000fffffffffULL) << 15);
        out[w + 12] = (((in[c +  9] & 0xfffffff000000000ULL) >> 36) | (in[c + 10] & 0x00000000007fffffULL) << 28);
        out[w + 13] = (((in[c + 10] & 0xffffffffff800000ULL) >> 23) | (in[c + 11] & 0x00000000000003ffULL) << 41);
        out[w + 14] = ((in[c + 11] & 0x1ffffffffffffc00ULL) >> 10);
        out[w + 15] = (((in[c + 11] & 0xe000000000000000ULL) >> 61) | (in[c + 12] & 0x0000ffffffffffffULL) << 3);
        out[w + 16] = (((in[c + 12] & 0xffff000000000000ULL) >> 48) | (in[c + 13] & 0x00000007ffffffffULL) << 16);
        out[w + 17] = (((in[c + 13] & 0xfffffff800000000ULL) >> 35) | (in[c + 14] & 0x00000000003fffffULL) << 29);
        out[w + 18] = (((in[c + 14] & 0xffffffffffc00000ULL) >> 22) | (in[c + 15] & 0x00000000000001ffULL) << 42);
        out[w + 19] = ((in[c + 15] & 0x0ffffffffffffe00ULL) >>  9);
        out[w + 20] = (((in[c + 15] & 0xf000000000000000ULL) >> 60) | (in[c + 16] & 0x00007fffffffffffULL) << 4);
        out[w + 21] = (((in[c + 16] & 0xffff800000000000ULL) >> 47) | (in[c + 17] & 0x00000003ffffffffULL) << 17);
        out[w + 22] = (((in[c + 17] & 0xfffffffc00000000ULL) >> 34) | (in[c + 18] & 0x00000000001fffffULL) << 30);
        out[w + 23] = (((in[c + 18] & 0xffffffffffe00000ULL) >> 21) | (in[c + 19] & 0x00000000000000ffULL) << 43);
        out[w + 24] = ((in[c + 19] & 0x07ffffffffffff00ULL) >>  8);
        out[w + 25] = (((in[c + 19] & 0xf800000000000000ULL) >> 59) | (in[c + 20] & 0x00003fffffffffffULL) << 5);
        out[w + 26] = (((in[c + 20] & 0xffffc00000000000ULL) >> 46) | (in[c + 21] & 0x00000001ffffffffULL) << 18);
        out[w + 27] = (((in[c + 21] & 0xfffffffe00000000ULL) >> 33) | (in[c + 22] & 0x00000000000fffffULL) << 31);
        out[w + 28] = (((in[c + 22] & 0xfffffffffff00000ULL) >> 20) | (in[c + 23] & 0x000000000000007fULL) << 44);
        out[w + 29] = ((in[c + 23] & 0x03ffffffffffff80ULL) >>  7);
        out[w + 30] = (((in[c + 23] & 0xfc00000000000000ULL) >> 58) | (in[c + 24] & 0x00001fffffffffffULL) << 6);
        out[w + 31] = (((in[c + 24] & 0xffffe00000000000ULL) >> 45) | (in[c + 25] & 0x00000000ffffffffULL) << 19);
        out[w + 32] = (((in[c + 25] & 0xffffffff00000000ULL) >> 32) | (in[c + 26] & 0x000000000007ffffULL) << 32);
        out[w + 33] = (((in[c + 26] & 0xfffffffffff80000ULL) >> 19) | (in[c + 27] & 0x000000000000003fULL) << 45);
        out[w + 34] = ((in[c + 27] & 0x01ffffffffffffc0ULL) >>  6);
        out[w + 35] = (((in[c + 27] & 0xfe00000000000000ULL) >> 57) | (in[c + 28] & 0x00000fffffffffffULL) << 7);
        out[w + 36] = (((in[c + 28] & 0xfffff00000000000ULL) >> 44) | (in[c + 29] & 0x000000007fffffffULL) << 20);
        out[w + 37] = (((in[c + 29] & 0xffffffff80000000ULL) >> 31) | (in[c + 30] & 0x000000000003ffffULL) << 33);
        out[w + 38] = (((in[c + 30] & 0xfffffffffffc0000ULL) >> 18) | (in[c + 31] & 0x000000000000001fULL) << 46);
        out[w + 39] = ((in[c + 31] & 0x00ffffffffffffe0ULL) >>  5);
        out[w + 40] = (((in[c + 31] & 0xff00000000000000ULL) >> 56) | (in[c + 32] & 0x000007ffffffffffULL) << 8);
        out[w + 41] = (((in[c + 32] & 0xfffff80000000000ULL) >> 43) | (in[c + 33] & 0x000000003fffffffULL) << 21);
        out[w + 42] = (((in[c + 33] & 0xffffffffc0000000ULL) >> 30) | (in[c + 34] & 0x000000000001ffffULL) << 34);
        out[w + 43] = (((in[c + 34] & 0xfffffffffffe0000ULL) >> 17) | (in[c + 35] & 0x000000000000000fULL) << 47);
        out[w + 44] = ((in[c + 35] & 0x007ffffffffffff0ULL) >>  4);
        out[w + 45] = (((in[c + 35] & 0xff80000000000000ULL) >> 55) | (in[c + 36] & 0x000003ffffffffffULL) << 9);
        out[w + 46] = (((in[c + 36] & 0xfffffc0000000000ULL) >> 42) | (in[c + 37] & 0x000000001fffffffULL) << 22);
        out[w + 47] = (((in[c + 37] & 0xffffffffe0000000ULL) >> 29) | (in[c + 38] & 0x000000000000ffffULL) << 35);
        out[w + 48] = (((in[c + 38] & 0xffffffffffff0000ULL) >> 16) | (in[c + 39] & 0x0000000000000007ULL) << 48);
        out[w + 49] = ((in[c + 39] & 0x003ffffffffffff8ULL) >>  3);
        out[w + 50] = (((in[c + 39] & 0xffc0000000000000ULL) >> 54) | (in[c + 40] & 0x000001ffffffffffULL) << 10);
        out[w + 51] = (((in[c + 40] & 0xfffffe0000000000ULL) >> 41) | (in[c + 41] & 0x000000000fffffffULL) << 23);
        out[w + 52] = (((in[c + 41] & 0xfffffffff0000000ULL) >> 28) | (in[c + 42] & 0x0000000000007fffULL) << 36);
        out[w + 53] = (((in[c + 42] & 0xffffffffffff8000ULL) >> 15) | (in[c + 43] & 0x0000000000000003ULL) << 49);
        out[w + 54] = ((in[c + 43] & 0x001ffffffffffffcULL) >>  2);
        out[w + 55] = (((in[c + 43] & 0xffe0000000000000ULL) >> 53) | (in[c + 44] & 0x000000ffffffffffULL) << 11);
        out[w + 56] = (((in[c + 44] & 0xffffff0000000000ULL) >> 40) | (in[c + 45] & 0x0000000007ffffffULL) << 24);
        out[w + 57] = (((in[c + 45] & 0xfffffffff8000000ULL) >> 27) | (in[c + 46] & 0x0000000000003fffULL) << 37);
        out[w + 58] = (((in[c + 46] & 0xffffffffffffc000ULL) >> 14) | (in[c + 47] & 0x0000000000000001ULL) << 50);
        out[w + 59] = ((in[c + 47] & 0x000ffffffffffffeULL) >>  1);
        out[w + 60] = (((in[c + 47] & 0xfff0000000000000ULL) >> 52) | (in[c + 48] & 0x0000007fffffffffULL) << 12);
        out[w + 61] = (((in[c + 48] & 0xffffff8000000000ULL) >> 39) | (in[c + 49] & 0x0000000003ffffffULL) << 25);
        out[w + 62] = (((in[c + 49] & 0xfffffffffc000000ULL) >> 26) | (in[c + 50] & 0x0000000000001fffULL) << 38);
        out[w + 63] = ((in[c + 50] & 0xffffffffffffe000ULL) >> 13);
    }
}
void
unpack_52_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 16, c += 13) {
        out[w +  0] = ((in[c +  0] & 0x000fffffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xfff0000000000000ULL) >> 52) | (in[c +  1] & 0x000000ffffffffffULL) << 12);
        out[w +  2] = (((in[c +  1] & 0xffffff0000000000ULL) >> 40) | (in[c +  2] & 0x000000000fffffffULL) << 24);
        out[w +  3] = (((in[c +  2] & 0xfffffffff0000000ULL) >> 28) | (in[c +  3] & 0x000000000000ffffULL) << 36);
        out[w +  4] = (((in[c +  3] & 0xffffffffffff0000ULL) >> 16) | (in[c +  4] & 0x000000000000000fULL) << 48);
        out[w +  5] = ((in[c +  4] & 0x00fffffffffffff0ULL) >>  4);
        out[w +  6] = (((in[c +  4] & 0xff00000000000000ULL) >> 56) | (in[c +  5] & 0x00000fffffffffffULL) << 8);
        out[w +  7] = (((in[c +  5] & 0xfffff00000000000ULL) >> 44) | (in[c +  6] & 0x00000000ffffffffULL) << 20);
        out[w +  8] = (((in[c +  6] & 0xffffffff00000000ULL) >> 32) | (in[c +  7] & 0x00000000000fffffULL) << 32);
        out[w +  9] = (((in[c +  7] & 0xfffffffffff00000ULL) >> 20) | (in[c +  8] & 0x00000000000000ffULL) << 44);
        out[w + 10] = ((in[c +  8] & 0x0fffffffffffff00ULL) >>  8);
        out[w + 11] = (((in[c +  8] & 0xf000000000000000ULL) >> 60) | (in[c +  9] & 0x0000ffffffffffffULL) << 4);
        out[w + 12] = (((in[c +  9] & 0xffff000000000000ULL) >> 48) | (in[c + 10] & 0x0000000fffffffffULL) << 16);
        out[w + 13] = (((in[c + 10] & 0xfffffff000000000ULL) >> 36) | (in[c + 11] & 0x0000000000ffffffULL) << 28);
        out[w + 14] = (((in[c + 11] & 0xffffffffff000000ULL) >> 24) | (in[c + 12] & 0x0000000000000fffULL) << 40);
        out[w + 15] = ((in[c + 12] & 0xfffffffffffff000ULL) >> 12);
    }
}
void
unpack_53_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 53) {
        out[w +  0] = ((in[c +  0] & 0x001fffffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xffe0000000000000ULL) >> 53) | (in[c +  1] & 0x000003ffffffffffULL) << 11);
        out[w +  2] = (((in[c +  1] & 0xfffffc0000000000ULL) >> 42) | (in[c +  2] & 0x000000007fffffffULL) << 22);
        out[w +  3] = (((in[c +  2] & 0xffffffff80000000ULL) >> 31) | (in[c +  3] & 0x00000000000fffffULL) << 33);
        out[w +  4] = (((in[c +  3] & 0xfffffffffff00000ULL) >> 20) | (in[c +  4] & 0x00000000000001ffULL) << 44);
        out[w +  5] = ((in[c +  4] & 0x3ffffffffffffe00ULL) >>  9);
        out[w +  6] = (((in[c +  4] & 0xc000000000000000ULL) >> 62) | (in[c +  5] & 0x0007ffffffffffffULL) << 2);
        out[w +  7] = (((in[c +  5] & 0xfff8000000000000ULL) >> 51) | (in[c +  6] & 0x000000ffffffffffULL) << 13);
        out[w +  8] = (((in[c +  6] & 0xffffff0000000000ULL) >> 40) | (in[c +  7] & 0x000000001fffffffULL) << 24);
        out[w +  9] = (((in[c +  7] & 0xffffffffe0000000ULL) >> 29) | (in[c +  8] & 0x000000000003ffffULL) << 35);
        out[w + 10] = (((in[c +  8] & 0xfffffffffffc0000ULL) >> 18) | (in[c +  9] & 0x000000000000007fULL) << 46);
        out[w + 11] = ((in[c +  9] & 0x0fffffffffffff80ULL) >>  7);
        out[w + 12] = (((in[c +  9] & 0xf000000000000000ULL) >> 60) | (in[c + 10] & 0x0001ffffffffffffULL) << 4);
        out[w + 13] = (((in[c + 10] & 0xfffe000000000000ULL) >> 49) | (in[c + 11] & 0x0000003fffffffffULL) << 15);
        out[w + 14] = (((in[c + 11] & 0xffffffc000000000ULL) >> 38) | (in[c + 12] & 0x0000000007ffffffULL) << 26);
        out[w + 15] = (((in[c + 12] & 0xfffffffff8000000ULL) >> 27) | (in[c + 13] & 0x000000000000ffffULL) << 37);
        out[w + 16] = (((in[c + 13] & 0xffffffffffff0000ULL) >> 16) | (in[c + 14] & 0x000000000000001fULL) << 48);
        out[w + 17] = ((in[c + 14] & 0x03ffffffffffffe0ULL) >>  5);
        out[w + 18] = (((in[c + 14] & 0xfc00000000000000ULL) >> 58) | (in[c + 15] & 0x00007fffffffffffULL) << 6);
        out[w + 19] = (((in[c + 15] & 0xffff800000000000ULL) >> 47) | (in[c + 16] & 0x0000000fffffffffULL) << 17);
        out[w + 20] = (((in[c + 16] & 0xfffffff000000000ULL) >> 36) | (in[c + 17] & 0x0000000001ffffffULL) << 28);
        out[w + 21] = (((in[c + 17] & 0xfffffffffe000000ULL) >> 25) | (in[c + 18] & 0x0000000000003fffULL) << 39);
        out[w + 22] = (((in[c + 18] & 0xffffffffffffc000ULL) >> 14) | (in[c + 19] & 0x0000000000000007ULL) << 50);
        out[w + 23] = ((in[c + 19] & 0x00fffffffffffff8ULL) >>  3);
        out[w + 24] = (((in[c + 19] & 0xff00000000000000ULL) >> 56) | (in[c + 20] & 0x00001fffffffffffULL) << 8);
        out[w + 25] = (((in[c + 20] & 0xffffe00000000000ULL) >> 45) | (in[c + 21] & 0x00000003ffffffffULL) << 19);
        out[w + 26] = (((in[c + 21] & 0xfffffffc00000000ULL) >> 34) | (in[c + 22] & 0x00000000007fffffULL) << 30);
        out[w + 27] = (((in[c + 22] & 0xffffffffff800000ULL) >> 23) | (in[c + 23] & 0x0000000000000fffULL) << 41);
        out[w + 28] = (((in[c + 23] & 0xfffffffffffff000ULL) >> 12) | (in[c + 24] & 0x0000000000000001ULL) << 52);
        out[w + 29] = ((in[c + 24] & 0x003ffffffffffffeULL) >>  1);
        out[w + 30] = (((in[c + 24] & 0xffc0000000000000ULL) >> 54) | (in[c + 25] & 0x000007ffffffffffULL) << 10);
        out[w + 31] = (((in[c + 25] & 0xfffff80000000000ULL) >> 43) | (in[c + 26] & 0x00000000ffffffffULL) << 21);
        out[w + 32] = (((in[c + 26] & 0xffffffff00000000ULL) >> 32) | (in[c + 27] & 0x00000000001fffffULL) << 32);
        out[w + 33] = (((in[c + 27] & 0xffffffffffe00000ULL) >> 21) | (in[c + 28] & 0x00000000000003ffULL) << 43);
        out[w + 34] = ((in[c + 28] & 0x7ffffffffffffc00ULL) >> 10);
        out[w + 35] = (((in[c + 28] & 0x8000000000000000ULL) >> 63) | (in[c + 29] & 0x000fffffffffffffULL) << 1);
        out[w + 36] = (((in[c + 29] & 0xfff0000000000000ULL) >> 52) | (in[c + 30] & 0x000001ffffffffffULL) << 12);
        out[w + 37] = (((in[c + 30] & 0xfffffe0000000000ULL) >> 41) | (in[c + 31] & 0x000000003fffffffULL) << 23);
        out[w + 38] = (((in[c + 31] & 0xffffffffc0000000ULL) >> 30) | (in[c + 32] & 0x000000000007ffffULL) << 34);
        out[w + 39] = (((in[c + 32] & 0xfffffffffff80000ULL) >> 19) | (in[c + 33] & 0x00000000000000ffULL) << 45);
        out[w + 40] = ((in[c + 33] & 0x1fffffffffffff00ULL) >>  8);
        out[w + 41] = (((in[c + 33] & 0xe000000000000000ULL) >> 61) | (in[c + 34] & 0x0003ffffffffffffULL) << 3);
        out[w + 42] = (((in[c + 34] & 0xfffc000000000000ULL) >> 50) | (in[c + 35] & 0x0000007fffffffffULL) << 14);
        out[w + 43] = (((in[c + 35] & 0xffffff8000000000ULL) >> 39) | (in[c + 36] & 0x000000000fffffffULL) << 25);
        out[w + 44] = (((in[c + 36] & 0xfffffffff0000000ULL) >> 28) | (in[c + 37] & 0x000000000001ffffULL) << 36);
        out[w + 45] = (((in[c + 37] & 0xfffffffffffe0000ULL) >> 17) | (in[c + 38] & 0x000000000000003fULL) << 47);
        out[w + 46] = ((in[c + 38] & 0x07ffffffffffffc0ULL) >>  6);
        out[w + 47] = (((in[c + 38] & 0xf800000000000000ULL) >> 59) | (in[c + 39] & 0x0000ffffffffffffULL) << 5);
        out[w + 48] = (((in[c + 39] & 0xffff000000000000ULL) >> 48) | (in[c + 40] & 0x0000001fffffffffULL) << 16);
        out[w + 49] = (((in[c + 40] & 0xffffffe000000000ULL) >> 37) | (in[c + 41] & 0x0000000003ffffffULL) << 27);
        out[w + 50] = (((in[c + 41] & 0xfffffffffc000000ULL) >> 26) | (in[c + 42] & 0x0000000000007fffULL) << 38);
        out[w + 51] = (((in[c + 42] & 0xffffffffffff8000ULL) >> 15) | (in[c + 43] & 0x000000000000000fULL) << 49);
        out[w + 52] = ((in[c + 43] & 0x01fffffffffffff0ULL) >>  4);
        out[w + 53] = (((in[c + 43] & 0xfe00000000000000ULL) >> 57) | (in[c + 44] & 0x00003fffffffffffULL) << 7);
        out[w + 54] = (((in[c + 44] & 0xffffc00000000000ULL) >> 46) | (in[c + 45] & 0x00000007ffffffffULL) << 18);
        out[w + 55] = (((in[c + 45] & 0xfffffff800000000ULL) >> 35) | (in[c + 46] & 0x0000000000ffffffULL) << 29);
        out[w + 56] = (((in[c + 46] & 0xffffffffff000000ULL) >> 24) | (in[c + 47] & 0x0000000000001fffULL) << 40);
        out[w + 57] = (((in[c + 47] & 0xffffffffffffe000ULL) >> 13) | (in[c + 48] & 0x0000000000000003ULL) << 51);
        out[w + 58] = ((in[c + 48] & 0x007ffffffffffffcULL) >>  2);
        out[w + 59] = (((in[c + 48] & 0xff80000000000000ULL) >> 55) | (in[c + 49] & 0x00000fffffffffffULL) << 9);
        out[w + 60] = (((in[c + 49] & 0xfffff00000000000ULL) >> 44) | (in[c + 50] & 0x00000001ffffffffULL) << 20);
        out[w + 61] = (((in[c + 50] & 0xfffffffe00000000ULL) >> 33) | (in[c + 51] & 0x00000000003fffffULL) << 31);
        out[w + 62] = (((in[c + 51] & 0xffffffffffc00000ULL) >> 22) | (in[c + 52] & 0x00000000000007ffULL) << 42);
        out[w + 63] = ((in[c + 52] & 0xfffffffffffff800ULL) >> 11);
    }
}
void
unpack_54_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 27) {
        out[w +  0] = ((in[c +  0] & 0x003fffffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xffc0000000000000ULL) >> 54) | (in[c +  1] & 0x00000fffffffffffULL) << 10);
        out[w +  2] = (((in[c +  1] & 0xfffff00000000000ULL) >> 44) | (in[c +  2] & 0x00000003ffffffffULL) << 20);
        out[w +  3] = (((in[c +  2] & 0xfffffffc00000000ULL) >> 34) | (in[c +  3] & 0x0000000000ffffffULL) << 30);
        out[w +  4] = (((in[c +  3] & 0xffffffffff000000ULL) >> 24) | (in[c +  4] & 0x0000000000003fffULL) << 40);
        out[w +  5] = (((in[c +  4] & 0xffffffffffffc000ULL) >> 14) | (in[c +  5] & 0x000000000000000fULL) << 50);
        out[w +  6] = ((in[c +  5] & 0x03fffffffffffff0ULL) >>  4);
        out[w +  7] = (((in[c +  5] & 0xfc00000000000000ULL) >> 58) | (in[c +  6] & 0x0000ffffffffffffULL) << 6);
        out[w +  8] = (((in[c +  6] & 0xffff000000000000ULL) >> 48) | (in[c +  7] & 0x0000003fffffffffULL) << 16);
        out[w +  9] = (((in[c +  7] & 0xffffffc000000000ULL) >> 38) | (in[c +  8] & 0x000000000fffffffULL) << 26);
        out[w + 10] = (((in[c +  8] & 0xfffffffff0000000ULL) >> 28) | (in[c +  9] & 0x000000000003ffffULL) << 36);
        out[w + 11] = (((in[c +  9] & 0xfffffffffffc0000ULL) >> 18) | (in[c + 10] & 0x00000000000000ffULL) << 46);
        out[w + 12] = ((in[c + 10] & 0x3fffffffffffff00ULL) >>  8);
        out[w + 13] = (((in[c + 10] & 0xc000000000000000ULL) >> 62) | (in[c + 11] & 0x000fffffffffffffULL) << 2);
        out[w + 14] = (((in[c + 11] & 0xfff0000000000000ULL) >> 52) | (in[c + 12] & 0x000003ffffffffffULL) << 12);
        out[w + 15] = (((in[c + 12] & 0xfffffc0000000000ULL) >> 42) | (in[c + 13] & 0x00000000ffffffffULL) << 22);
        out[w + 16] = (((in[c + 13] & 0xffffffff00000000ULL) >> 32) | (in[c + 14] & 0x00000000003fffffULL) << 32);
        out[w + 17] = (((in[c + 14] & 0xffffffffffc00000ULL) >> 22) | (in[c + 15] & 0x0000000000000fffULL) << 42);
        out[w + 18] = (((in[c + 15] & 0xfffffffffffff000ULL) >> 12) | (in[c + 16] & 0x0000000000000003ULL) << 52);
        out[w + 19] = ((in[c + 16] & 0x00fffffffffffffcULL) >>  2);
        out[w + 20] = (((in[c + 16] & 0xff00000000000000ULL) >> 56) | (in[c + 17] & 0x00003fffffffffffULL) << 8);
        out[w + 21] = (((in[c + 17] & 0xffffc00000000000ULL) >> 46) | (in[c + 18] & 0x0000000fffffffffULL) << 18);
        out[w + 22] = (((in[c + 18] & 0xfffffff000000000ULL) >> 36) | (in[c + 19] & 0x0000000003ffffffULL) << 28);
        out[w + 23] = (((in[c + 19] & 0xfffffffffc000000ULL) >> 26) | (in[c + 20] & 0x000000000000ffffULL) << 38);
        out[w + 24] = (((in[c + 20] & 0xffffffffffff0000ULL) >> 16) | (in[c + 21] & 0x000000000000003fULL) << 48);
        out[w + 25] = ((in[c + 21] & 0x0fffffffffffffc0ULL) >>  6);
        out[w + 26] = (((in[c + 21] & 0xf000000000000000ULL) >> 60) | (in[c + 22] & 0x0003ffffffffffffULL) << 4);
        out[w + 27] = (((in[c + 22] & 0xfffc000000000000ULL) >> 50) | (in[c + 23] & 0x000000ffffffffffULL) << 14);
        out[w + 28] = (((in[c + 23] & 0xffffff0000000000ULL) >> 40) | (in[c + 24] & 0x000000003fffffffULL) << 24);
        out[w + 29] = (((in[c + 24] & 0xffffffffc0000000ULL) >> 30) | (in[c + 25] & 0x00000000000fffffULL) << 34);
        out[w + 30] = (((in[c + 25] & 0xfffffffffff00000ULL) >> 20) | (in[c + 26] & 0x00000000000003ffULL) << 44);
        out[w + 31] = ((in[c + 26] & 0xfffffffffffffc00ULL) >> 10);
    }
}
void
unpack_55_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 55) {
        out[w +  0] = ((in[c +  0] & 0x007fffffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xff80000000000000ULL) >> 55) | (in[c +  1] & 0x00003fffffffffffULL) << 9);
        out[w +  2] = (((in[c +  1] & 0xffffc00000000000ULL) >> 46) | (in[c +  2] & 0x0000001fffffffffULL) << 18);
        out[w +  3] = (((in[c +  2] & 0xffffffe000000000ULL) >> 37) | (in[c +  3] & 0x000000000fffffffULL) << 27);
        out[w +  4] = (((in[c +  3] & 0xfffffffff0000000ULL) >> 28) | (in[c +  4] & 0x000000000007ffffULL) << 36);
        out[w +  5] = (((in[c +  4] & 0xfffffffffff80000ULL) >> 19) | (in[c +  5] & 0x00000000000003ffULL) << 45);
        out[w +  6] = (((in[c +  5] & 0xfffffffffffffc00ULL) >> 10) | (in[c +  6] & 0x0000000000000001ULL) << 54);
        out[w +  7] = ((in[c +  6] & 0x00fffffffffffffeULL) >>  1);
        out[w +  8] = (((in[c +  6] & 0xff00000000000000ULL) >> 56) | (in[c +  7] & 0x00007fffffffffffULL) << 8);
        out[w +  9] = (((in[c +  7] & 0xffff800000000000ULL) >> 47) | (in[c +  8] & 0x0000003fffffffffULL) << 17);
        out[w + 10] = (((in[c +  8] & 0xffffffc000000000ULL) >> 38) | (in[c +  9] & 0x000000001fffffffULL) << 26);
        out[w + 11] = (((in[c +  9] & 0xffffffffe0000000ULL) >> 29) | (in[c + 10] & 0x00000000000fffffULL) << 35);
        out[w + 12] = (((in[c + 10] & 0xfffffffffff00000ULL) >> 20) | (in[c + 11] & 0x00000000000007ffULL) << 44);
        out[w + 13] = (((in[c + 11] & 0xfffffffffffff800ULL) >> 11) | (in[c + 12] & 0x0000000000000003ULL) << 53);
        out[w + 14] = ((in[c + 12] & 0x01fffffffffffffcULL) >>  2);
        out[w + 15] = (((in[c + 12] & 0xfe00000000000000ULL) >> 57) | (in[c + 13] & 0x0000ffffffffffffULL) << 7);
        out[w + 16] = (((in[c + 13] & 0xffff000000000000ULL) >> 48) | (in[c + 14] & 0x0000007fffffffffULL) << 16);
        out[w + 17] = (((in[c + 14] & 0xffffff8000000000ULL) >> 39) | (in[c + 15] & 0x000000003fffffffULL) << 25);
        out[w + 18] = (((in[c + 15] & 0xffffffffc0000000ULL) >> 30) | (in[c + 16] & 0x00000000001fffffULL) << 34);
        out[w + 19] = (((in[c + 16] & 0xffffffffffe00000ULL) >> 21) | (in[c + 17] & 0x0000000000000fffULL) << 43);
        out[w + 20] = (((in[c + 17] & 0xfffffffffffff000ULL) >> 12) | (in[c + 18] & 0x0000000000000007ULL) << 52);
        out[w + 21] = ((in[c + 18] & 0x03fffffffffffff8ULL) >>  3);
        out[w + 22] = (((in[c + 18] & 0xfc00000000000000ULL) >> 58) | (in[c + 19] & 0x0001ffffffffffffULL) << 6);
        out[w + 23] = (((in[c + 19] & 0xfffe000000000000ULL) >> 49) | (in[c + 20] & 0x000000ffffffffffULL) << 15);
        out[w + 24] = (((in[c + 20] & 0xffffff0000000000ULL) >> 40) | (in[c + 21] & 0x000000007fffffffULL) << 24);
        out[w + 25] = (((in[c + 21] & 0xffffffff80000000ULL) >> 31) | (in[c + 22] & 0x00000000003fffffULL) << 33);
        out[w + 26] = (((in[c + 22] & 0xffffffffffc00000ULL) >> 22) | (in[c + 23] & 0x0000000000001fffULL) << 42);
        out[w + 27] = (((in[c + 23] & 0xffffffffffffe000ULL) >> 13) | (in[c + 24] & 0x000000000000000fULL) << 51);
        out[w + 28] = ((in[c + 24] & 0x07fffffffffffff0ULL) >>  4);
        out[w + 29] = (((in[c + 24] & 0xf800000000000000ULL) >> 59) | (in[c + 25] & 0x0003ffffffffffffULL) << 5);
        out[w + 30] = (((in[c + 25] & 0xfffc000000000000ULL) >> 50) | (in[c + 26] & 0x000001ffffffffffULL) << 14);
        out[w + 31] = (((in[c + 26] & 0xfffffe0000000000ULL) >> 41) | (in[c + 27] & 0x00000000ffffffffULL) << 23);
        out[w + 32] = (((in[c + 27] & 0xffffffff00000000ULL) >> 32) | (in[c + 28] & 0x00000000007fffffULL) << 32);
        out[w + 33] = (((in[c + 28] & 0xffffffffff800000ULL) >> 23) | (in[c + 29] & 0x0000000000003fffULL) << 41);
        out[w + 34] = (((in[c + 29] & 0xffffffffffffc000ULL) >> 14) | (in[c + 30] & 0x000000000000001fULL) << 50);
        out[w + 35] = ((in[c + 30] & 0x0fffffffffffffe0ULL) >>  5);
        out[w + 36] = (((in[c + 30] & 0xf000000000000000ULL) >> 60) | (in[c + 31] & 0x0007ffffffffffffULL) << 4);
        out[w + 37] = (((in[c + 31] & 0xfff8000000000000ULL) >> 51) | (in[c + 32] & 0x000003ffffffffffULL) << 13);
        out[w + 38] = (((in[c + 32] & 0xfffffc0000000000ULL) >> 42) | (in[c + 33] & 0x00000001ffffffffULL) << 22);
        out[w + 39] = (((in[c + 33] & 0xfffffffe00000000ULL) >> 33) | (in[c + 34] & 0x0000000000ffffffULL) << 31);
        out[w + 40] = (((in[c + 34] & 0xffffffffff000000ULL) >> 24) | (in[c + 35] & 0x0000000000007fffULL) << 40);
        out[w + 41] = (((in[c + 35] & 0xffffffffffff8000ULL) >> 15) | (in[c + 36] & 0x000000000000003fULL) << 49);
        out[w + 42] = ((in[c + 36] & 0x1fffffffffffffc0ULL) >>  6);
        out[w + 43] = (((in[c + 36] & 0xe000000000000000ULL) >> 61) | (in[c + 37] & 0x000fffffffffffffULL) << 3);
        out[w + 44] = (((in[c + 37] & 0xfff0000000000000ULL) >> 52) | (in[c + 38] & 0x000007ffffffffffULL) << 12);
        out[w + 45] = (((in[c + 38] & 0xfffff80000000000ULL) >> 43) | (in[c + 39] & 0x00000003ffffffffULL) << 21);
        out[w + 46] = (((in[c + 39] & 0xfffffffc00000000ULL) >> 34) | (in[c + 40] & 0x0000000001ffffffULL) << 30);
        out[w + 47] = (((in[c + 40] & 0xfffffffffe000000ULL) >> 25) | (in[c + 41] & 0x000000000000ffffULL) << 39);
        out[w + 48] = (((in[c + 41] & 0xffffffffffff0000ULL) >> 16) | (in[c + 42] & 0x000000000000007fULL) << 48);
        out[w + 49] = ((in[c + 42] & 0x3fffffffffffff80ULL) >>  7);
        out[w + 50] = (((in[c + 42] & 0xc000000000000000ULL) >> 62) | (in[c + 43] & 0x001fffffffffffffULL) << 2);
        out[w + 51] = (((in[c + 43] & 0xffe0000000000000ULL) >> 53) | (in[c + 44] & 0x00000fffffffffffULL) << 11);
        out[w + 52] = (((in[c + 44] & 0xfffff00000000000ULL) >> 44) | (in[c + 45] & 0x00000007ffffffffULL) << 20);
        out[w + 53] = (((in[c + 45] & 0xfffffff800000000ULL) >> 35) | (in[c + 46] & 0x0000000003ffffffULL) << 29);
        out[w + 54] = (((in[c + 46] & 0xfffffffffc000000ULL) >> 26) | (in[c + 47] & 0x000000000001ffffULL) << 38);
        out[w + 55] = (((in[c + 47] & 0xfffffffffffe0000ULL) >> 17) | (in[c + 48] & 0x00000000000000ffULL) << 47);
        out[w + 56] = ((in[c + 48] & 0x7fffffffffffff00ULL) >>  8);
        out[w + 57] = (((in[c + 48] & 0x8000000000000000ULL) >> 63) | (in[c + 49] & 0x003fffffffffffffULL) << 1);
        out[w + 58] = (((in[c + 49] & 0xffc0000000000000ULL) >> 54) | (in[c + 50] & 0x00001fffffffffffULL) << 10);
        out[w + 59] = (((in[c + 50] & 0xffffe00000000000ULL) >> 45) | (in[c + 51] & 0x0000000fffffffffULL) << 19);
        out[w + 60] = (((in[c + 51] & 0xfffffff000000000ULL) >> 36) | (in[c + 52] & 0x0000000007ffffffULL) << 28);
        out[w + 61] = (((in[c + 52] & 0xfffffffff8000000ULL) >> 27) | (in[c + 53] & 0x000000000003ffffULL) << 37);
        out[w + 62] = (((in[c + 53] & 0xfffffffffffc0000ULL) >> 18) | (in[c + 54] & 0x00000000000001ffULL) << 46);
        out[w + 63] = ((in[c + 54] & 0xfffffffffffffe00ULL) >>  9);
    }
}
void
unpack_56_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 8, c += 7) {
        out[w + 0] = ((in[c + 0] & 0x00ffffffffffffffULL) >>  0);
        out[w + 1] = (((in[c + 0] & 0xff00000000000000ULL) >> 56) | (in[c + 1] & 0x0000ffffffffffffULL) << 8);
        out[w + 2] = (((in[c + 1] & 0xffff000000000000ULL) >> 48) | (in[c + 2] & 0x000000ffffffffffULL) << 16);
        out[w + 3] = (((in[c + 2] & 0xffffff0000000000ULL) >> 40) | (in[c + 3] & 0x00000000ffffffffULL) << 24);
        out[w + 4] = (((in[c + 3] & 0xffffffff00000000ULL) >> 32) | (in[c + 4] & 0x0000000000ffffffULL) << 32);
        out[w + 5] = (((in[c + 4] & 0xffffffffff000000ULL) >> 24) | (in[c + 5] & 0x000000000000ffffULL) << 40);
        out[w + 6] = (((in[c + 5] & 0xffffffffffff0000ULL) >> 16) | (in[c + 6] & 0x00000000000000ffULL) << 48);
        out[w + 7] = ((in[c + 6] & 0xffffffffffffff00ULL) >>  8);
    }
}
void
unpack_57_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 57) {
        out[w +  0] = ((in[c +  0] & 0x01ffffffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xfe00000000000000ULL) >> 57) | (in[c +  1] & 0x0003ffffffffffffULL) << 7);
        out[w +  2] = (((in[c +  1] & 0xfffc000000000000ULL) >> 50) | (in[c +  2] & 0x000007ffffffffffULL) << 14);
        out[w +  3] = (((in[c +  2] & 0xfffff80000000000ULL) >> 43) | (in[c +  3] & 0x0000000fffffffffULL) << 21);
        out[w +  4] = (((in[c +  3] & 0xfffffff000000000ULL) >> 36) | (in[c +  4] & 0x000000001fffffffULL) << 28);
        out[w +  5] = (((in[c +  4] & 0xffffffffe0000000ULL) >> 29) | (in[c +  5] & 0x00000000003fffffULL) << 35);
        out[w +  6] = (((in[c +  5] & 0xffffffffffc00000ULL) >> 22) | (in[c +  6] & 0x0000000000007fffULL) << 42);
        out[w +  7] = (((in[c +  6] & 0xffffffffffff8000ULL) >> 15) | (in[c +  7] & 0x00000000000000ffULL) << 49);
        out[w +  8] = (((in[c +  7] & 0xffffffffffffff00ULL) >>  8) | (in[c +  8] & 0x0000000000000001ULL) << 56);
        out[w +  9] = ((in[c +  8] & 0x03fffffffffffffeULL) >>  1);
        out[w + 10] = (((in[c +  8] & 0xfc00000000000000ULL) >> 58) | (in[c +  9] & 0x0007ffffffffffffULL) << 6);
        out[w + 11] = (((in[c +  9] & 0xfff8000000000000ULL) >> 51) | (in[c + 10] & 0x00000fffffffffffULL) << 13);
        out[w + 12] = (((in[c + 10] & 0xfffff00000000000ULL) >> 44) | (in[c + 11] & 0x0000001fffffffffULL) << 20);
        out[w + 13] = (((in[c + 11] & 0xffffffe000000000ULL) >> 37) | (in[c + 12] & 0x000000003fffffffULL) << 27);
        out[w + 14] = (((in[c + 12] & 0xffffffffc0000000ULL) >> 30) | (in[c + 13] & 0x00000000007fffffULL) << 34);
        out[w + 15] = (((in[c + 13] & 0xffffffffff800000ULL) >> 23) | (in[c + 14] & 0x000000000000ffffULL) << 41);
        out[w + 16] = (((in[c + 14] & 0xffffffffffff0000ULL) >> 16) | (in[c + 15] & 0x00000000000001ffULL) << 48);
        out[w + 17] = (((in[c + 15] & 0xfffffffffffffe00ULL) >>  9) | (in[c + 16] & 0x0000000000000003ULL) << 55);
        out[w + 18] = ((in[c + 16] & 0x07fffffffffffffcULL) >>  2);
        out[w + 19] = (((in[c + 16] & 0xf800000000000000ULL) >> 59) | (in[c + 17] & 0x000fffffffffffffULL) << 5);
        out[w + 20] = (((in[c + 17] & 0xfff0000000000000ULL) >> 52) | (in[c + 18] & 0x00001fffffffffffULL) << 12);
        out[w + 21] = (((in[c + 18] & 0xffffe00000000000ULL) >> 45) | (in[c + 19] & 0x0000003fffffffffULL) << 19);
        out[w + 22] = (((in[c + 19] & 0xffffffc000000000ULL) >> 38) | (in[c + 20] & 0x000000007fffffffULL) << 26);
        out[w + 23] = (((in[c + 20] & 0xffffffff80000000ULL) >> 31) | (in[c + 21] & 0x0000000000ffffffULL) << 33);
        out[w + 24] = (((in[c + 21] & 0xffffffffff000000ULL) >> 24) | (in[c + 22] & 0x000000000001ffffULL) << 40);
        out[w + 25] = (((in[c + 22] & 0xfffffffffffe0000ULL) >> 17) | (in[c + 23] & 0x00000000000003ffULL) << 47);
        out[w + 26] = (((in[c + 23] & 0xfffffffffffffc00ULL) >> 10) | (in[c + 24] & 0x0000000000000007ULL) << 54);
        out[w + 27] = ((in[c + 24] & 0x0ffffffffffffff8ULL) >>  3);
        out[w + 28] = (((in[c + 24] & 0xf000000000000000ULL) >> 60) | (in[c + 25] & 0x001fffffffffffffULL) << 4);
        out[w + 29] = (((in[c + 25] & 0xffe0000000000000ULL) >> 53) | (in[c + 26] & 0x00003fffffffffffULL) << 11);
        out[w + 30] = (((in[c + 26] & 0xffffc00000000000ULL) >> 46) | (in[c + 27] & 0x0000007fffffffffULL) << 18);
        out[w + 31] = (((in[c + 27] & 0xffffff8000000000ULL) >> 39) | (in[c + 28] & 0x00000000ffffffffULL) << 25);
        out[w + 32] = (((in[c + 28] & 0xffffffff00000000ULL) >> 32) | (in[c + 29] & 0x0000000001ffffffULL) << 32);
        out[w + 33] = (((in[c + 29] & 0xfffffffffe000000ULL) >> 25) | (in[c + 30] & 0x000000000003ffffULL) << 39);
        out[w + 34] = (((in[c + 30] & 0xfffffffffffc0000ULL) >> 18) | (in[c + 31] & 0x00000000000007ffULL) << 46);
        out[w + 35] = (((in[c + 31] & 0xfffffffffffff800ULL) >> 11) | (in[c + 32] & 0x000000000000000fULL) << 53);
        out[w + 36] = ((in[c + 32] & 0x1ffffffffffffff0ULL) >>  4);
        out[w + 37] = (((in[c + 32] & 0xe000000000000000ULL) >> 61) | (in[c + 33] & 0x003fffffffffffffULL) << 3);
        out[w + 38] = (((in[c + 33] & 0xffc0000000000000ULL) >> 54) | (in[c + 34] & 0x00007fffffffffffULL) << 10);
        out[w + 39] = (((in[c + 34] & 0xffff800000000000ULL) >> 47) | (in[c + 35] & 0x000000ffffffffffULL) << 17);
        out[w + 40] = (((in[c + 35] & 0xffffff0000000000ULL) >> 40) | (in[c + 36] & 0x00000001ffffffffULL) << 24);
        out[w + 41] = (((in[c + 36] & 0xfffffffe00000000ULL) >> 33) | (in[c + 37] & 0x0000000003ffffffULL) << 31);
        out[w + 42] = (((in[c + 37] & 0xfffffffffc000000ULL) >> 26) | (in[c + 38] & 0x000000000007ffffULL) << 38);
        out[w + 43] = (((in[c + 38] & 0xfffffffffff80000ULL) >> 19) | (in[c + 39] & 0x0000000000000fffULL) << 45);
        out[w + 44] = (((in[c + 39] & 0xfffffffffffff000ULL) >> 12) | (in[c + 40] & 0x000000000000001fULL) << 52);
        out[w + 45] = ((in[c + 40] & 0x3fffffffffffffe0ULL) >>  5);
        out[w + 46] = (((in[c + 40] & 0xc000000000000000ULL) >> 62) | (in[c + 41] & 0x007fffffffffffffULL) << 2);
        out[w + 47] = (((in[c + 41] & 0xff80000000000000ULL) >> 55) | (in[c + 42] & 0x0000ffffffffffffULL) << 9);
        out[w + 48] = (((in[c + 42] & 0xffff000000000000ULL) >> 48) | (in[c + 43] & 0x000001ffffffffffULL) << 16);
        out[w + 49] = (((in[c + 43] & 0xfffffe0000000000ULL) >> 41) | (in[c + 44] & 0x00000003ffffffffULL) << 23);
        out[w + 50] = (((in[c + 44] & 0xfffffffc00000000ULL) >> 34) | (in[c + 45] & 0x0000000007ffffffULL) << 30);
        out[w + 51] = (((in[c + 45] & 0xfffffffff8000000ULL) >> 27) | (in[c + 46] & 0x00000000000fffffULL) << 37);
        out[w + 52] = (((in[c + 46] & 0xfffffffffff00000ULL) >> 20) | (in[c + 47] & 0x0000000000001fffULL) << 44);
        out[w + 53] = (((in[c + 47] & 0xffffffffffffe000ULL) >> 13) | (in[c + 48] & 0x000000000000003fULL) << 51);
        out[w + 54] = ((in[c + 48] & 0x7fffffffffffffc0ULL) >>  6);
        out[w + 55] = (((in[c + 48] & 0x8000000000000000ULL) >> 63) | (in[c + 49] & 0x00ffffffffffffffULL) << 1);
        out[w + 56] = (((in[c + 49] & 0xff00000000000000ULL) >> 56) | (in[c + 50] & 0x0001ffffffffffffULL) << 8);
        out[w + 57] = (((in[c + 50] & 0xfffe000000000000ULL) >> 49) | (in[c + 51] & 0x000003ffffffffffULL) << 15);
        out[w + 58] = (((in[c + 51] & 0xfffffc0000000000ULL) >> 42) | (in[c + 52] & 0x00000007ffffffffULL) << 22);
        out[w + 59] = (((in[c + 52] & 0xfffffff800000000ULL) >> 35) | (in[c + 53] & 0x000000000fffffffULL) << 29);
        out[w + 60] = (((in[c + 53] & 0xfffffffff0000000ULL) >> 28) | (in[c + 54] & 0x00000000001fffffULL) << 36);
        out[w + 61] = (((in[c + 54] & 0xffffffffffe00000ULL) >> 21) | (in[c + 55] & 0x0000000000003fffULL) << 43);
        out[w + 62] = (((in[c + 55] & 0xffffffffffffc000ULL) >> 14) | (in[c + 56] & 0x000000000000007fULL) << 50);
        out[w + 63] = ((in[c + 56] & 0xffffffffffffff80ULL) >>  7);
    }
}
void
unpack_58_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 29) {
        out[w +  0] = ((in[c +  0] & 0x03ffffffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xfc00000000000000ULL) >> 58) | (in[c +  1] & 0x000fffffffffffffULL) << 6);
        out[w +  2] = (((in[c +  1] & 0xfff0000000000000ULL) >> 52) | (in[c +  2] & 0x00003fffffffffffULL) << 12);
        out[w +  3] = (((in[c +  2] & 0xffffc00000000000ULL) >> 46) | (in[c +  3] & 0x000000ffffffffffULL) << 18);
        out[w +  4] = (((in[c +  3] & 0xffffff0000000000ULL) >> 40) | (in[c +  4] & 0x00000003ffffffffULL) << 24);
        out[w +  5] = (((in[c +  4] & 0xfffffffc00000000ULL) >> 34) | (in[c +  5] & 0x000000000fffffffULL) << 30);
        out[w +  6] = (((in[c +  5] & 0xfffffffff0000000ULL) >> 28) | (in[c +  6] & 0x00000000003fffffULL) << 36);
        out[w +  7] = (((in[c +  6] & 0xffffffffffc00000ULL) >> 22) | (in[c +  7] & 0x000000000000ffffULL) << 42);
        out[w +  8] = (((in[c +  7] & 0xffffffffffff0000ULL) >> 16) | (in[c +  8] & 0x00000000000003ffULL) << 48);
        out[w +  9] = (((in[c +  8] & 0xfffffffffffffc00ULL) >> 10) | (in[c +  9] & 0x000000000000000fULL) << 54);
        out[w + 10] = ((in[c +  9] & 0x3ffffffffffffff0ULL) >>  4);
        out[w + 11] = (((in[c +  9] & 0xc000000000000000ULL) >> 62) | (in[c + 10] & 0x00ffffffffffffffULL) << 2);
        out[w + 12] = (((in[c + 10] & 0xff00000000000000ULL) >> 56) | (in[c + 11] & 0x0003ffffffffffffULL) << 8);
        out[w + 13] = (((in[c + 11] & 0xfffc000000000000ULL) >> 50) | (in[c + 12] & 0x00000fffffffffffULL) << 14);
        out[w + 14] = (((in[c + 12] & 0xfffff00000000000ULL) >> 44) | (in[c + 13] & 0x0000003fffffffffULL) << 20);
        out[w + 15] = (((in[c + 13] & 0xffffffc000000000ULL) >> 38) | (in[c + 14] & 0x00000000ffffffffULL) << 26);
        out[w + 16] = (((in[c + 14] & 0xffffffff00000000ULL) >> 32) | (in[c + 15] & 0x0000000003ffffffULL) << 32);
        out[w + 17] = (((in[c + 15] & 0xfffffffffc000000ULL) >> 26) | (in[c + 16] & 0x00000000000fffffULL) << 38);
        out[w + 18] = (((in[c + 16] & 0xfffffffffff00000ULL) >> 20) | (in[c + 17] & 0x0000000000003fffULL) << 44);
        out[w + 19] = (((in[c + 17] & 0xffffffffffffc000ULL) >> 14) | (in[c + 18] & 0x00000000000000ffULL) << 50);
        out[w + 20] = (((in[c + 18] & 0xffffffffffffff00ULL) >>  8) | (in[c + 19] & 0x0000000000000003ULL) << 56);
        out[w + 21] = ((in[c + 19] & 0x0ffffffffffffffcULL) >>  2);
        out[w + 22] = (((in[c + 19] & 0xf000000000000000ULL) >> 60) | (in[c + 20] & 0x003fffffffffffffULL) << 4);
        out[w + 23] = (((in[c + 20] & 0xffc0000000000000ULL) >> 54) | (in[c + 21] & 0x0000ffffffffffffULL) << 10);
        out[w + 24] = (((in[c + 21] & 0xffff000000000000ULL) >> 48) | (in[c + 22] & 0x000003ffffffffffULL) << 16);
        out[w + 25] = (((in[c + 22] & 0xfffffc0000000000ULL) >> 42) | (in[c + 23] & 0x0000000fffffffffULL) << 22);
        out[w + 26] = (((in[c + 23] & 0xfffffff000000000ULL) >> 36) | (in[c + 24] & 0x000000003fffffffULL) << 28);
        out[w + 27] = (((in[c + 24] & 0xffffffffc0000000ULL) >> 30) | (in[c + 25] & 0x0000000000ffffffULL) << 34);
        out[w + 28] = (((in[c + 25] & 0xffffffffff000000ULL) >> 24) | (in[c + 26] & 0x000000000003ffffULL) << 40);
        out[w + 29] = (((in[c + 26] & 0xfffffffffffc0000ULL) >> 18) | (in[c + 27] & 0x0000000000000fffULL) << 46);
        out[w + 30] = (((in[c + 27] & 0xfffffffffffff000ULL) >> 12) | (in[c + 28] & 0x000000000000003fULL) << 52);
        out[w + 31] = ((in[c + 28] & 0xffffffffffffffc0ULL) >>  6);
    }
}
void
unpack_59_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 59) {
        out[w +  0] = ((in[c +  0] & 0x07ffffffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xf800000000000000ULL) >> 59) | (in[c +  1] & 0x003fffffffffffffULL) << 5);
        out[w +  2] = (((in[c +  1] & 0xffc0000000000000ULL) >> 54) | (in[c +  2] & 0x0001ffffffffffffULL) << 10);
        out[w +  3] = (((in[c +  2] & 0xfffe000000000000ULL) >> 49) | (in[c +  3] & 0x00000fffffffffffULL) << 15);
        out[w +  4] = (((in[c +  3] & 0xfffff00000000000ULL) >> 44) | (in[c +  4] & 0x0000007fffffffffULL) << 20);
        out[w +  5] = (((in[c +  4] & 0xffffff8000000000ULL) >> 39) | (in[c +  5] & 0x00000003ffffffffULL) << 25);
        out[w +  6] = (((in[c +  5] & 0xfffffffc00000000ULL) >> 34) | (in[c +  6] & 0x000000001fffffffULL) << 30);
        out[w +  7] = (((in[c +  6] & 0xffffffffe0000000ULL) >> 29) | (in[c +  7] & 0x0000000000ffffffULL) << 35);
        out[w +  8] = (((in[c +  7] & 0xffffffffff000000ULL) >> 24) | (in[c +  8] & 0x000000000007ffffULL) << 40);
        out[w +  9] = (((in[c +  8] & 0xfffffffffff80000ULL) >> 19) | (in[c +  9] & 0x0000000000003fffULL) << 45);
        out[w + 10] = (((in[c +  9] & 0xffffffffffffc000ULL) >> 14) | (in[c + 10] & 0x00000000000001ffULL) << 50);
        out[w + 11] = (((in[c + 10] & 0xfffffffffffffe00ULL) >>  9) | (in[c + 11] & 0x000000000000000fULL) << 55);
        out[w + 12] = ((in[c + 11] & 0x7ffffffffffffff0ULL) >>  4);
        out[w + 13] = (((in[c + 11] & 0x8000000000000000ULL) >> 63) | (in[c + 12] & 0x03ffffffffffffffULL) << 1);
        out[w + 14] = (((in[c + 12] & 0xfc00000000000000ULL) >> 58) | (in[c + 13] & 0x001fffffffffffffULL) << 6);
        out[w + 15] = (((in[c + 13] & 0xffe0000000000000ULL) >> 53) | (in[c + 14] & 0x0000ffffffffffffULL) << 11);
        out[w + 16] = (((in[c + 14] & 0xffff000000000000ULL) >> 48) | (in[c + 15] & 0x000007ffffffffffULL) << 16);
        out[w + 17] = (((in[c + 15] & 0xfffff80000000000ULL) >> 43) | (in[c + 16] & 0x0000003fffffffffULL) << 21);
        out[w + 18] = (((in[c + 16] & 0xffffffc000000000ULL) >> 38) | (in[c + 17] & 0x00000001ffffffffULL) << 26);
        out[w + 19] = (((in[c + 17] & 0xfffffffe00000000ULL) >> 33) | (in[c + 18] & 0x000000000fffffffULL) << 31);
        out[w + 20] = (((in[c + 18] & 0xfffffffff0000000ULL) >> 28) | (in[c + 19] & 0x00000000007fffffULL) << 36);
        out[w + 21] = (((in[c + 19] & 0xffffffffff800000ULL) >> 23) | (in[c + 20] & 0x000000000003ffffULL) << 41);
        out[w + 22] = (((in[c + 20] & 0xfffffffffffc0000ULL) >> 18) | (in[c + 21] & 0x0000000000001fffULL) << 46);
        out[w + 23] = (((in[c + 21] & 0xffffffffffffe000ULL) >> 13) | (in[c + 22] & 0x00000000000000ffULL) << 51);
        out[w + 24] = (((in[c + 22] & 0xffffffffffffff00ULL) >>  8) | (in[c + 23] & 0x0000000000000007ULL) << 56);
        out[w + 25] = ((in[c + 23] & 0x3ffffffffffffff8ULL) >>  3);
        out[w + 26] = (((in[c + 23] & 0xc000000000000000ULL) >> 62) | (in[c + 24] & 0x01ffffffffffffffULL) << 2);
        out[w + 27] = (((in[c + 24] & 0xfe00000000000000ULL) >> 57) | (in[c + 25] & 0x000fffffffffffffULL) << 7);
        out[w + 28] = (((in[c + 25] & 0xfff0000000000000ULL) >> 52) | (in[c + 26] & 0x00007fffffffffffULL) << 12);
        out[w + 29] = (((in[c + 26] & 0xffff800000000000ULL) >> 47) | (in[c + 27] & 0x000003ffffffffffULL) << 17);
        out[w + 30] = (((in[c + 27] & 0xfffffc0000000000ULL) >> 42) | (in[c + 28] & 0x0000001fffffffffULL) << 22);
        out[w + 31] = (((in[c + 28] & 0xffffffe000000000ULL) >> 37) | (in[c + 29] & 0x00000000ffffffffULL) << 27);
        out[w + 32] = (((in[c + 29] & 0xffffffff00000000ULL) >> 32) | (in[c + 30] & 0x0000000007ffffffULL) << 32);
        out[w + 33] = (((in[c + 30] & 0xfffffffff8000000ULL) >> 27) | (in[c + 31] & 0x00000000003fffffULL) << 37);
        out[w + 34] = (((in[c + 31] & 0xffffffffffc00000ULL) >> 22) | (in[c + 32] & 0x000000000001ffffULL) << 42);
        out[w + 35] = (((in[c + 32] & 0xfffffffffffe0000ULL) >> 17) | (in[c + 33] & 0x0000000000000fffULL) << 47);
        out[w + 36] = (((in[c + 33] & 0xfffffffffffff000ULL) >> 12) | (in[c + 34] & 0x000000000000007fULL) << 52);
        out[w + 37] = (((in[c + 34] & 0xffffffffffffff80ULL) >>  7) | (in[c + 35] & 0x0000000000000003ULL) << 57);
        out[w + 38] = ((in[c + 35] & 0x1ffffffffffffffcULL) >>  2);
        out[w + 39] = (((in[c + 35] & 0xe000000000000000ULL) >> 61) | (in[c + 36] & 0x00ffffffffffffffULL) << 3);
        out[w + 40] = (((in[c + 36] & 0xff00000000000000ULL) >> 56) | (in[c + 37] & 0x0007ffffffffffffULL) << 8);
        out[w + 41] = (((in[c + 37] & 0xfff8000000000000ULL) >> 51) | (in[c + 38] & 0x00003fffffffffffULL) << 13);
        out[w + 42] = (((in[c + 38] & 0xffffc00000000000ULL) >> 46) | (in[c + 39] & 0x000001ffffffffffULL) << 18);
        out[w + 43] = (((in[c + 39] & 0xfffffe0000000000ULL) >> 41) | (in[c + 40] & 0x0000000fffffffffULL) << 23);
        out[w + 44] = (((in[c + 40] & 0xfffffff000000000ULL) >> 36) | (in[c + 41] & 0x000000007fffffffULL) << 28);
        out[w + 45] = (((in[c + 41] & 0xffffffff80000000ULL) >> 31) | (in[c + 42] & 0x0000000003ffffffULL) << 33);
        out[w + 46] = (((in[c + 42] & 0xfffffffffc000000ULL) >> 26) | (in[c + 43] & 0x00000000001fffffULL) << 38);
        out[w + 47] = (((in[c + 43] & 0xffffffffffe00000ULL) >> 21) | (in[c + 44] & 0x000000000000ffffULL) << 43);
        out[w + 48] = (((in[c + 44] & 0xffffffffffff0000ULL) >> 16) | (in[c + 45] & 0x00000000000007ffULL) << 48);
        out[w + 49] = (((in[c + 45] & 0xfffffffffffff800ULL) >> 11) | (in[c + 46] & 0x000000000000003fULL) << 53);
        out[w + 50] = (((in[c + 46] & 0xffffffffffffffc0ULL) >>  6) | (in[c + 47] & 0x0000000000000001ULL) << 58);
        out[w + 51] = ((in[c + 47] & 0x0ffffffffffffffeULL) >>  1);
        out[w + 52] = (((in[c + 47] & 0xf000000000000000ULL) >> 60) | (in[c + 48] & 0x007fffffffffffffULL) << 4);
        out[w + 53] = (((in[c + 48] & 0xff80000000000000ULL) >> 55) | (in[c + 49] & 0x0003ffffffffffffULL) << 9);
        out[w + 54] = (((in[c + 49] & 0xfffc000000000000ULL) >> 50) | (in[c + 50] & 0x00001fffffffffffULL) << 14);
        out[w + 55] = (((in[c + 50] & 0xffffe00000000000ULL) >> 45) | (in[c + 51] & 0x000000ffffffffffULL) << 19);
        out[w + 56] = (((in[c + 51] & 0xffffff0000000000ULL) >> 40) | (in[c + 52] & 0x00000007ffffffffULL) << 24);
        out[w + 57] = (((in[c + 52] & 0xfffffff800000000ULL) >> 35) | (in[c + 53] & 0x000000003fffffffULL) << 29);
        out[w + 58] = (((in[c + 53] & 0xffffffffc0000000ULL) >> 30) | (in[c + 54] & 0x0000000001ffffffULL) << 34);
        out[w + 59] = (((in[c + 54] & 0xfffffffffe000000ULL) >> 25) | (in[c + 55] & 0x00000000000fffffULL) << 39);
        out[w + 60] = (((in[c + 55] & 0xfffffffffff00000ULL) >> 20) | (in[c + 56] & 0x0000000000007fffULL) << 44);
        out[w + 61] = (((in[c + 56] & 0xffffffffffff8000ULL) >> 15) | (in[c + 57] & 0x00000000000003ffULL) << 49);
        out[w + 62] = (((in[c + 57] & 0xfffffffffffffc00ULL) >> 10) | (in[c + 58] & 0x000000000000001fULL) << 54);
        out[w + 63] = ((in[c + 58] & 0xffffffffffffffe0ULL) >>  5);
    }
}
void
unpack_60_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 16, c += 15) {
        out[w +  0] = ((in[c +  0] & 0x0fffffffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xf000000000000000ULL) >> 60) | (in[c +  1] & 0x00ffffffffffffffULL) << 4);
        out[w +  2] = (((in[c +  1] & 0xff00000000000000ULL) >> 56) | (in[c +  2] & 0x000fffffffffffffULL) << 8);
        out[w +  3] = (((in[c +  2] & 0xfff0000000000000ULL) >> 52) | (in[c +  3] & 0x0000ffffffffffffULL) << 12);
        out[w +  4] = (((in[c +  3] & 0xffff000000000000ULL) >> 48) | (in[c +  4] & 0x00000fffffffffffULL) << 16);
        out[w +  5] = (((in[c +  4] & 0xfffff00000000000ULL) >> 44) | (in[c +  5] & 0x000000ffffffffffULL) << 20);
        out[w +  6] = (((in[c +  5] & 0xffffff0000000000ULL) >> 40) | (in[c +  6] & 0x0000000fffffffffULL) << 24);
        out[w +  7] = (((in[c +  6] & 0xfffffff000000000ULL) >> 36) | (in[c +  7] & 0x00000000ffffffffULL) << 28);
        out[w +  8] = (((in[c +  7] & 0xffffffff00000000ULL) >> 32) | (in[c +  8] & 0x000000000fffffffULL) << 32);
        out[w +  9] = (((in[c +  8] & 0xfffffffff0000000ULL) >> 28) | (in[c +  9] & 0x0000000000ffffffULL) << 36);
        out[w + 10] = (((in[c +  9] & 0xffffffffff000000ULL) >> 24) | (in[c + 10] & 0x00000000000fffffULL) << 40);
        out[w + 11] = (((in[c + 10] & 0xfffffffffff00000ULL) >> 20) | (in[c + 11] & 0x000000000000ffffULL) << 44);
        out[w + 12] = (((in[c + 11] & 0xffffffffffff0000ULL) >> 16) | (in[c + 12] & 0x0000000000000fffULL) << 48);
        out[w + 13] = (((in[c + 12] & 0xfffffffffffff000ULL) >> 12) | (in[c + 13] & 0x00000000000000ffULL) << 52);
        out[w + 14] = (((in[c + 13] & 0xffffffffffffff00ULL) >>  8) | (in[c + 14] & 0x000000000000000fULL) << 56);
        out[w + 15] = ((in[c + 14] & 0xfffffffffffffff0ULL) >>  4);
    }
}
void
unpack_61_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 61) {
        out[w +  0] = ((in[c +  0] & 0x1fffffffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xe000000000000000ULL) >> 61) | (in[c +  1] & 0x03ffffffffffffffULL) << 3);
        out[w +  2] = (((in[c +  1] & 0xfc00000000000000ULL) >> 58) | (in[c +  2] & 0x007fffffffffffffULL) << 6);
        out[w +  3] = (((in[c +  2] & 0xff80000000000000ULL) >> 55) | (in[c +  3] & 0x000fffffffffffffULL) << 9);
        out[w +  4] = (((in[c +  3] & 0xfff0000000000000ULL) >> 52) | (in[c +  4] & 0x0001ffffffffffffULL) << 12);
        out[w +  5] = (((in[c +  4] & 0xfffe000000000000ULL) >> 49) | (in[c +  5] & 0x00003fffffffffffULL) << 15);
        out[w +  6] = (((in[c +  5] & 0xffffc00000000000ULL) >> 46) | (in[c +  6] & 0x000007ffffffffffULL) << 18);
        out[w +  7] = (((in[c +  6] & 0xfffff80000000000ULL) >> 43) | (in[c +  7] & 0x000000ffffffffffULL) << 21);
        out[w +  8] = (((in[c +  7] & 0xffffff0000000000ULL) >> 40) | (in[c +  8] & 0x0000001fffffffffULL) << 24);
        out[w +  9] = (((in[c +  8] & 0xffffffe000000000ULL) >> 37) | (in[c +  9] & 0x00000003ffffffffULL) << 27);
        out[w + 10] = (((in[c +  9] & 0xfffffffc00000000ULL) >> 34) | (in[c + 10] & 0x000000007fffffffULL) << 30);
        out[w + 11] = (((in[c + 10] & 0xffffffff80000000ULL) >> 31) | (in[c + 11] & 0x000000000fffffffULL) << 33);
        out[w + 12] = (((in[c + 11] & 0xfffffffff0000000ULL) >> 28) | (in[c + 12] & 0x0000000001ffffffULL) << 36);
        out[w + 13] = (((in[c + 12] & 0xfffffffffe000000ULL) >> 25) | (in[c + 13] & 0x00000000003fffffULL) << 39);
        out[w + 14] = (((in[c + 13] & 0xffffffffffc00000ULL) >> 22) | (in[c + 14] & 0x000000000007ffffULL) << 42);
        out[w + 15] = (((in[c + 14] & 0xfffffffffff80000ULL) >> 19) | (in[c + 15] & 0x000000000000ffffULL) << 45);
        out[w + 16] = (((in[c + 15] & 0xffffffffffff0000ULL) >> 16) | (in[c + 16] & 0x0000000000001fffULL) << 48);
        out[w + 17] = (((in[c + 16] & 0xffffffffffffe000ULL) >> 13) | (in[c + 17] & 0x00000000000003ffULL) << 51);
        out[w + 18] = (((in[c + 17] & 0xfffffffffffffc00ULL) >> 10) | (in[c + 18] & 0x000000000000007fULL) << 54);
        out[w + 19] = (((in[c + 18] & 0xffffffffffffff80ULL) >>  7) | (in[c + 19] & 0x000000000000000fULL) << 57);
        out[w + 20] = (((in[c + 19] & 0xfffffffffffffff0ULL) >>  4) | (in[c + 20] & 0x0000000000000001ULL) << 60);
        out[w + 21] = ((in[c + 20] & 0x3ffffffffffffffeULL) >>  1);
        out[w + 22] = (((in[c + 20] & 0xc000000000000000ULL) >> 62) | (in[c + 21] & 0x07ffffffffffffffULL) << 2);
        out[w + 23] = (((in[c + 21] & 0xf800000000000000ULL) >> 59) | (in[c + 22] & 0x00ffffffffffffffULL) << 5);
        out[w + 24] = (((in[c + 22] & 0xff00000000000000ULL) >> 56) | (in[c + 23] & 0x001fffffffffffffULL) << 8);
        out[w + 25] = (((in[c + 23] & 0xffe0000000000000ULL) >> 53) | (in[c + 24] & 0x0003ffffffffffffULL) << 11);
        out[w + 26] = (((in[c + 24] & 0xfffc000000000000ULL) >> 50) | (in[c + 25] & 0x00007fffffffffffULL) << 14);
        out[w + 27] = (((in[c + 25] & 0xffff800000000000ULL) >> 47) | (in[c + 26] & 0x00000fffffffffffULL) << 17);
        out[w + 28] = (((in[c + 26] & 0xfffff00000000000ULL) >> 44) | (in[c + 27] & 0x000001ffffffffffULL) << 20);
        out[w + 29] = (((in[c + 27] & 0xfffffe0000000000ULL) >> 41) | (in[c + 28] & 0x0000003fffffffffULL) << 23);
        out[w + 30] = (((in[c + 28] & 0xffffffc000000000ULL) >> 38) | (in[c + 29] & 0x00000007ffffffffULL) << 26);
        out[w + 31] = (((in[c + 29] & 0xfffffff800000000ULL) >> 35) | (in[c + 30] & 0x00000000ffffffffULL) << 29);
        out[w + 32] = (((in[c + 30] & 0xffffffff00000000ULL) >> 32) | (in[c + 31] & 0x000000001fffffffULL) << 32);
        out[w + 33] = (((in[c + 31] & 0xffffffffe0000000ULL) >> 29) | (in[c + 32] & 0x0000000003ffffffULL) << 35);
        out[w + 34] = (((in[c + 32] & 0xfffffffffc000000ULL) >> 26) | (in[c + 33] & 0x00000000007fffffULL) << 38);
        out[w + 35] = (((in[c + 33] & 0xffffffffff800000ULL) >> 23) | (in[c + 34] & 0x00000000000fffffULL) << 41);
        out[w + 36] = (((in[c + 34] & 0xfffffffffff00000ULL) >> 20) | (in[c + 35] & 0x000000000001ffffULL) << 44);
        out[w + 37] = (((in[c + 35] & 0xfffffffffffe0000ULL) >> 17) | (in[c + 36] & 0x0000000000003fffULL) << 47);
        out[w + 38] = (((in[c + 36] & 0xffffffffffffc000ULL) >> 14) | (in[c + 37] & 0x00000000000007ffULL) << 50);
        out[w + 39] = (((in[c + 37] & 0xfffffffffffff800ULL) >> 11) | (in[c + 38] & 0x00000000000000ffULL) << 53);
        out[w + 40] = (((in[c + 38] & 0xffffffffffffff00ULL) >>  8) | (in[c + 39] & 0x000000000000001fULL) << 56);
        out[w + 41] = (((in[c + 39] & 0xffffffffffffffe0ULL) >>  5) | (in[c + 40] & 0x0000000000000003ULL) << 59);
        out[w + 42] = ((in[c + 40] & 0x7ffffffffffffffcULL) >>  2);
        out[w + 43] = (((in[c + 40] & 0x8000000000000000ULL) >> 63) | (in[c + 41] & 0x0fffffffffffffffULL) << 1);
        out[w + 44] = (((in[c + 41] & 0xf000000000000000ULL) >> 60) | (in[c + 42] & 0x01ffffffffffffffULL) << 4);
        out[w + 45] = (((in[c + 42] & 0xfe00000000000000ULL) >> 57) | (in[c + 43] & 0x003fffffffffffffULL) << 7);
        out[w + 46] = (((in[c + 43] & 0xffc0000000000000ULL) >> 54) | (in[c + 44] & 0x0007ffffffffffffULL) << 10);
        out[w + 47] = (((in[c + 44] & 0xfff8000000000000ULL) >> 51) | (in[c + 45] & 0x0000ffffffffffffULL) << 13);
        out[w + 48] = (((in[c + 45] & 0xffff000000000000ULL) >> 48) | (in[c + 46] & 0x00001fffffffffffULL) << 16);
        out[w + 49] = (((in[c + 46] & 0xffffe00000000000ULL) >> 45) | (in[c + 47] & 0x000003ffffffffffULL) << 19);
        out[w + 50] = (((in[c + 47] & 0xfffffc0000000000ULL) >> 42) | (in[c + 48] & 0x0000007fffffffffULL) << 22);
        out[w + 51] = (((in[c + 48] & 0xffffff8000000000ULL) >> 39) | (in[c + 49] & 0x0000000fffffffffULL) << 25);
        out[w + 52] = (((in[c + 49] & 0xfffffff000000000ULL) >> 36) | (in[c + 50] & 0x00000001ffffffffULL) << 28);
        out[w + 53] = (((in[c + 50] & 0xfffffffe00000000ULL) >> 33) | (in[c + 51] & 0x000000003fffffffULL) << 31);
        out[w + 54] = (((in[c + 51] & 0xffffffffc0000000ULL) >> 30) | (in[c + 52] & 0x0000000007ffffffULL) << 34);
        out[w + 55] = (((in[c + 52] & 0xfffffffff8000000ULL) >> 27) | (in[c + 53] & 0x0000000000ffffffULL) << 37);
        out[w + 56] = (((in[c + 53] & 0xffffffffff000000ULL) >> 24) | (in[c + 54] & 0x00000000001fffffULL) << 40);
        out[w + 57] = (((in[c + 54] & 0xffffffffffe00000ULL) >> 21) | (in[c + 55] & 0x000000000003ffffULL) << 43);
        out[w + 58] = (((in[c + 55] & 0xfffffffffffc0000ULL) >> 18) | (in[c + 56] & 0x0000000000007fffULL) << 46);
        out[w + 59] = (((in[c + 56] & 0xffffffffffff8000ULL) >> 15) | (in[c + 57] & 0x0000000000000fffULL) << 49);
        out[w + 60] = (((in[c + 57] & 0xfffffffffffff000ULL) >> 12) | (in[c + 58] & 0x00000000000001ffULL) << 52);
        out[w + 61] = (((in[c + 58] & 0xfffffffffffffe00ULL) >>  9) | (in[c + 59] & 0x000000000000003fULL) << 55);
        out[w + 62] = (((in[c + 59] & 0xffffffffffffffc0ULL) >>  6) | (in[c + 60] & 0x0000000000000007ULL) << 58);
        out[w + 63] = ((in[c + 60] & 0xfffffffffffffff8ULL) >>  3);
    }
}
void
unpack_62_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 32, c += 31) {
        out[w +  0] = ((in[c +  0] & 0x3fffffffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0xc000000000000000ULL) >> 62) | (in[c +  1] & 0x0fffffffffffffffULL) << 2);
        out[w +  2] = (((in[c +  1] & 0xf000000000000000ULL) >> 60) | (in[c +  2] & 0x03ffffffffffffffULL) << 4);
        out[w +  3] = (((in[c +  2] & 0xfc00000000000000ULL) >> 58) | (in[c +  3] & 0x00ffffffffffffffULL) << 6);
        out[w +  4] = (((in[c +  3] & 0xff00000000000000ULL) >> 56) | (in[c +  4] & 0x003fffffffffffffULL) << 8);
        out[w +  5] = (((in[c +  4] & 0xffc0000000000000ULL) >> 54) | (in[c +  5] & 0x000fffffffffffffULL) << 10);
        out[w +  6] = (((in[c +  5] & 0xfff0000000000000ULL) >> 52) | (in[c +  6] & 0x0003ffffffffffffULL) << 12);
        out[w +  7] = (((in[c +  6] & 0xfffc000000000000ULL) >> 50) | (in[c +  7] & 0x0000ffffffffffffULL) << 14);
        out[w +  8] = (((in[c +  7] & 0xffff000000000000ULL) >> 48) | (in[c +  8] & 0x00003fffffffffffULL) << 16);
        out[w +  9] = (((in[c +  8] & 0xffffc00000000000ULL) >> 46) | (in[c +  9] & 0x00000fffffffffffULL) << 18);
        out[w + 10] = (((in[c +  9] & 0xfffff00000000000ULL) >> 44) | (in[c + 10] & 0x000003ffffffffffULL) << 20);
        out[w + 11] = (((in[c + 10] & 0xfffffc0000000000ULL) >> 42) | (in[c + 11] & 0x000000ffffffffffULL) << 22);
        out[w + 12] = (((in[c + 11] & 0xffffff0000000000ULL) >> 40) | (in[c + 12] & 0x0000003fffffffffULL) << 24);
        out[w + 13] = (((in[c + 12] & 0xffffffc000000000ULL) >> 38) | (in[c + 13] & 0x0000000fffffffffULL) << 26);
        out[w + 14] = (((in[c + 13] & 0xfffffff000000000ULL) >> 36) | (in[c + 14] & 0x00000003ffffffffULL) << 28);
        out[w + 15] = (((in[c + 14] & 0xfffffffc00000000ULL) >> 34) | (in[c + 15] & 0x00000000ffffffffULL) << 30);
        out[w + 16] = (((in[c + 15] & 0xffffffff00000000ULL) >> 32) | (in[c + 16] & 0x000000003fffffffULL) << 32);
        out[w + 17] = (((in[c + 16] & 0xffffffffc0000000ULL) >> 30) | (in[c + 17] & 0x000000000fffffffULL) << 34);
        out[w + 18] = (((in[c + 17] & 0xfffffffff0000000ULL) >> 28) | (in[c + 18] & 0x0000000003ffffffULL) << 36);
        out[w + 19] = (((in[c + 18] & 0xfffffffffc000000ULL) >> 26) | (in[c + 19] & 0x0000000000ffffffULL) << 38);
        out[w + 20] = (((in[c + 19] & 0xffffffffff000000ULL) >> 24) | (in[c + 20] & 0x00000000003fffffULL) << 40);
        out[w + 21] = (((in[c + 20] & 0xffffffffffc00000ULL) >> 22) | (in[c + 21] & 0x00000000000fffffULL) << 42);
        out[w + 22] = (((in[c + 21] & 0xfffffffffff00000ULL) >> 20) | (in[c + 22] & 0x000000000003ffffULL) << 44);
        out[w + 23] = (((in[c + 22] & 0xfffffffffffc0000ULL) >> 18) | (in[c + 23] & 0x000000000000ffffULL) << 46);
        out[w + 24] = (((in[c + 23] & 0xffffffffffff0000ULL) >> 16) | (in[c + 24] & 0x0000000000003fffULL) << 48);
        out[w + 25] = (((in[c + 24] & 0xffffffffffffc000ULL) >> 14) | (in[c + 25] & 0x0000000000000fffULL) << 50);
        out[w + 26] = (((in[c + 25] & 0xfffffffffffff000ULL) >> 12) | (in[c + 26] & 0x00000000000003ffULL) << 52);
        out[w + 27] = (((in[c + 26] & 0xfffffffffffffc00ULL) >> 10) | (in[c + 27] & 0x00000000000000ffULL) << 54);
        out[w + 28] = (((in[c + 27] & 0xffffffffffffff00ULL) >>  8) | (in[c + 28] & 0x000000000000003fULL) << 56);
        out[w + 29] = (((in[c + 28] & 0xffffffffffffffc0ULL) >>  6) | (in[c + 29] & 0x000000000000000fULL) << 58);
        out[w + 30] = (((in[c + 29] & 0xfffffffffffffff0ULL) >>  4) | (in[c + 30] & 0x0000000000000003ULL) << 60);
        out[w + 31] = ((in[c + 30] & 0xfffffffffffffffcULL) >>  2);
    }
}
void
unpack_63_into_64(
    uint64_t* __restrict__ out,
    const uint64_t* __restrict__ in,
    uint32_t n
)
{
    for (uint32_t w = 0, c = 0; w < n; w += 64, c += 63) {
        out[w +  0] = ((in[c +  0] & 0x7fffffffffffffffULL) >>  0);
        out[w +  1] = (((in[c +  0] & 0x8000000000000000ULL) >> 63) | (in[c +  1] & 0x3fffffffffffffffULL) << 1);
        out[w +  2] = (((in[c +  1] & 0xc000000000000000ULL) >> 62) | (in[c +  2] & 0x1fffffffffffffffULL) << 2);
        out[w +  3] = (((in[c +  2] & 0xe000000000000000ULL) >> 61) | (in[c +  3] & 0x0fffffffffffffffULL) << 3);
        out[w +  4] = (((in[c +  3] & 0xf000000000000000ULL) >> 60) | (in[c +  4] & 0x07ffffffffffffffULL) << 4);
        out[w +  5] = (((in[c +  4] & 0xf800000000000000ULL) >> 59) | (in[c +  5] & 0x03ffffffffffffffULL) << 5);
        out[w +  6] = (((in[c +  5] & 0xfc00000000000000ULL) >> 58) | (in[c +  6] & 0x01ffffffffffffffULL) << 6);
        out[w +  7] = (((in[c +  6] & 0xfe00000000000000ULL) >> 57) | (in[c +  7] & 0x00ffffffffffffffULL) << 7);
        out[w +  8] = (((in[c +  7] & 0xff00000000000000ULL) >> 56) | (in[c +  8] & 0x007fffffffffffffULL) << 8);
        out[w +  9] = (((in[c +  8] & 0xff80000000000000ULL) >> 55) | (in[c +  9] & 0x003fffffffffffffULL) << 9);
        out[w + 10] = (((in[c +  9] & 0xffc0000000000000ULL) >> 54) | (in[c + 10] & 0x001fffffffffffffULL) << 10);
        out[w + 11] = (((in[c + 10] & 0xffe0000000000000ULL) >> 53) | (in[c + 11] & 0x000fffffffffffffULL) << 11);
        out[w + 12] = (((in[c + 11] & 0xfff0000000000000ULL) >> 52) | (in[c + 12] & 0x0007ffffffffffffULL) << 12);
        out[w + 13] = (((in[c + 12] & 0xfff8000000000000ULL) >> 51) | (in[c + 13] & 0x0003ffffffffffffULL) << 13);
        out[w + 14] = (((in[c + 13] & 0xfffc000000000000ULL) >> 50) | (in[c + 14] & 0x0001ffffffffffffULL) << 14);
        out[w + 15] = (((in[c + 14] & 0xfffe000000000000ULL) >> 49) | (in[c + 15] & 0x0000ffffffffffffULL) << 15);
        out[w + 16] = (((in[c + 15] & 0xffff000000000000ULL) >> 48) | (in[c + 16] & 0x00007fffffffffffULL) << 16);
        out[w + 17] = (((in[c + 16] & 0xffff800000000000ULL) >> 47) | (in[c + 17] & 0x00003fffffffffffULL) << 17);
        out[w + 18] = (((in[c + 17] & 0xffffc00000000000ULL) >> 46) | (in[c + 18] & 0x00001fffffffffffULL) << 18);
        out[w + 19] = (((in[c + 18] & 0xffffe00000000000ULL) >> 45) | (in[c + 19] & 0x00000fffffffffffULL) << 19);
        out[w + 20] = (((in[c + 19] & 0xfffff00000000000ULL) >> 44) | (in[c + 20] & 0x000007ffffffffffULL) << 20);
        out[w + 21] = (((in[c + 20] & 0xfffff80000000000ULL) >> 43) | (in[c + 21] & 0x000003ffffffffffULL) << 21);
        out[w + 22] = (((in[c + 21] & 0xfffffc0000000000ULL) >> 42) | (in[c + 22] & 0x000001ffffffffffULL) << 22);
        out[w + 23] = (((in[c + 22] & 0xfffffe0000000000ULL) >> 41) | (in[c + 23] & 0x000000ffffffffffULL) << 23);
        out[w + 24] = (((in[c + 23] & 0xffffff0000000000ULL) >> 40) | (in[c + 24] & 0x0000007fffffffffULL) << 24);
        out[w + 25] = (((in[c + 24] & 0xffffff8000000000ULL) >> 39) | (in[c + 25] & 0x0000003fffffffffULL) << 25);
        out[w + 26] = (((in[c + 25] & 0xffffffc000000000ULL) >> 38) | (in[c + 26] & 0x0000001fffffffffULL) << 26);
        out[w + 27] = (((in[c + 26] & 0xffffffe000000000ULL) >> 37) | (in[c + 27] & 0x0000000fffffffffULL) << 27);
        out[w + 28] = (((in[c + 27] & 0xfffffff000000000ULL) >> 36) | (in[c + 28] & 0x00000007ffffffffULL) << 28);
        out[w + 29] = (((in[c + 28] & 0xfffffff800000000ULL) >> 35) | (in[c + 29] & 0x00000003ffffffffULL) << 29);
        out[w + 30] = (((in[c + 29] & 0xfffffffc00000000ULL) >> 34) | (in[c + 30] & 0x00000001ffffffffULL) << 30);
        out[w + 31] = (((in[c + 30] & 0xfffffffe00000000ULL) >> 33) | (in[c + 31] & 0x00000000ffffffffULL) << 31);
        out[w + 32] = (((in[c + 31] & 0xffffffff00000000ULL) >> 32) | (in[c + 32] & 0x000000007fffffffULL) << 32);
        out[w + 33] = (((in[c + 32] & 0xffffffff80000000ULL) >> 31) | (in[c + 33] & 0x000000003fffffffULL) << 33);
        out[w + 34] = (((in[c + 33] & 0xffffffffc0000000ULL) >> 30) | (in[c + 34] & 0x000000001fffffffULL) << 34);
        out[w + 35] = (((in[c + 34] & 0xffffffffe0000000ULL) >> 29) | (in[c + 35] & 0x000000000fffffffULL) << 35);
        out[w + 36] = (((in[c + 35] & 0xfffffffff0000000ULL) >> 28) | (in[c + 36] & 0x0000000007ffffffULL) << 36);
        out[w + 37] = (((in[c + 36] & 0xfffffffff8000000ULL) >> 27) | (in[c + 37] & 0x0000000003ffffffULL) << 37);
        out[w + 38] = (((in[c + 37] & 0xfffffffffc000000ULL) >> 26) | (in[c + 38] & 0x0000000001ffffffULL) << 38);
        out[w + 39] = (((in[c + 38] & 0xfffffffffe000000ULL) >> 25) | (in[c + 39] & 0x0000000000ffffffULL) << 39);
        out[w + 40] = (((in[c + 39] & 0xffffffffff000000ULL) >> 24) | (in[c + 40] & 0x00000000007fffffULL) << 40);
        out[w + 41] = (((in[c + 40] & 0xffffffffff800000ULL) >> 23) | (in[c + 41] & 0x00000000003fffffULL) << 41);
        out[w + 42] = (((in[c + 41] & 0xffffffffffc00000ULL) >> 22) | (in[c + 42] & 0x00000000001fffffULL) << 42);
        out[w + 43] = (((in[c + 42] & 0xffffffffffe00000ULL) >> 21) | (in[c + 43] & 0x00000000000fffffULL) << 43);
        out[w + 44] = (((in[c + 43] & 0xfffffffffff00000ULL) >> 20) | (in[c + 44] & 0x000000000007ffffULL) << 44);
        out[w + 45] = (((in[c + 44] & 0xfffffffffff80000ULL) >> 19) | (in[c + 45] & 0x000000000003ffffULL) << 45);
        out[w + 46] = (((in[c + 45] & 0xfffffffffffc0000ULL) >> 18) | (in[c + 46] & 0x000000000001ffffULL) << 46);
        out[w + 47] = (((in[c + 46] & 0xfffffffffffe0000ULL) >> 17) | (in[c + 47] & 0x000000000000ffffULL) << 47);
        out[w + 48] = (((in[c + 47] & 0xffffffffffff0000ULL) >> 16) | (in[c + 48] & 0x0000000000007fffULL) << 48);
        out[w + 49] = (((in[c + 48] & 0xffffffffffff8000ULL) >> 15) | (in[c + 49] & 0x0000000000003fffULL) << 49);
        out[w + 50] = (((in[c + 49] & 0xffffffffffffc000ULL) >> 14) | (in[c + 50] & 0x0000000000001fffULL) << 50);
        out[w + 51] = (((in[c + 50] & 0xffffffffffffe000ULL) >> 13) | (in[c + 51] & 0x0000000000000fffULL) << 51);
        out[w + 52] = (((in[c + 51] & 0xfffffffffffff000ULL) >> 12) | (in[c + 52] & 0x00000000000007ffULL) << 52);
        out[w + 53] = (((in[c + 52] & 0xfffffffffffff800ULL) >> 11) | (in[c + 53] & 0x00000000000003ffULL) << 53);
        out[w + 54] = (((in[c + 53] & 0xfffffffffffffc00ULL) >> 10) | (in[c + 54] & 0x00000000000001ffULL) << 54);
        out[w + 55] = (((in[c + 54] & 0xfffffffffffffe00ULL) >>  9) | (in[c + 55] & 0x00000000000000ffULL) << 55);
        out[w + 56] = (((in[c + 55] & 0xffffffffffffff00ULL) >>  8) | (in[c + 56] & 0x000000000000007fULL) << 56);
        out[w + 57] = (((in[c + 56] & 0xffffffffffffff80ULL) >>  7) | (in[c + 57] & 0x000000000000003fULL) << 57);
        out[w + 58] = (((in[c + 57] & 0xffffffffffffffc0ULL) >>  6) | (in[c + 58] & 0x000000000000001fULL) << 58);
        out[w + 59] = (((in[c + 58] & 0xffffffffffffffe0ULL) >>  5) | (in[c + 59] & 0x000000000000000fULL) << 59);
        out[w + 60] = (((in[c + 59] & 0xfffffffffffffff0ULL) >>  4) | (in[c + 60] & 0x0000000000000007ULL) << 60);
        out[w + 61] = (((in[c + 60] & 0xfffffffffffffff8ULL) >>  3) | (in[c + 61] & 0x0000000000000003ULL) << 61);
        out[w + 62] = (((in[c + 61] & 0xfffffffffffffffcULL) >>  2) | (in[c + 62] & 0x0000000000000001ULL) << 62);
        out[w + 63] = ((in[c + 62] & 0xfffffffffffffffeULL) >>  1);
    }
}

packer_64_ptr packer_64_table[64] = {
    0,
    pack_64_into_1,
    pack_64_into_2,
    pack_64_into_3,
    pack_64_into_4,
    pack_64_into_5,
    pack_64_into_6,
    pack_64_into_7,
    pack_64_into_8,
    pack_64_into_9,
    pack_64_into_10,
    pack_64_into_11,
    pack_64_into_12,
    pack_64_into_13,
    pack_64_into_14,
    pack_64_into_15,
    pack_64_into_16,
    pack_64_into_17,
    pack_64_into_18,
    pack_64_into_19,
    pack_64_into_20,
    pack_64_into_21,
    pack_64_into_22,
    pack_64_into_23,
    pack_64_into_24,
    pack_64_into_25,
    pack_64_into_26,
    pack_64_into_27,
    pack_64_into_28,
    pack_64_into_29,
    pack_64_into_30,
    pack_64_into_31,
    pack_64_into_32,
    pack_64_into_33,
    pack_64_into_34,
    pack_64_into_35,
    pack_64_into_36,
    pack_64_into_37,
    pack_64_into_38,
    pack_64_into_39,
    pack_64_into_40,
    pack_64_into_41,
    pack_64_into_42,
    pack_64_into_43,
    pack_64_into_44,
    pack_64_into_45,
    pack_64_into_46,
    pack_64_into_47,
    pack_64_into_48,
    pack_64_into_49,
    pack_64_into_50,
    pack_64_into_51,
    pack_64_into_52,
    pack_64_into_53,
    pack_64_into_54,
    pack_64_into_55,
    pack_64_into_56,
    pack_64_into_57,
    pack_64_into_58,
    pack_64_into_59,
    pack_64_into_60,
    pack_64_into_61,
    pack_64_into_62,
    pack_64_into_63
};

unpacker_64_ptr unpacker_64_table[64] = {
    0,
    unpack_1_into_64,
    unpack_2_into_64,
    unpack_3_into_64,
    unpack_4_into_64,
    unpack_5_into_64,
    unpack_6_into_64,
    unpack_7_into_64,
    unpack_8_into_64,
    unpack_9_into_64,
    unpack_10_into_64,
    unpack_11_into_64,
    unpack_12_into_64,
    unpack_13_into_64,
    unpack_14_into_64,
    unpack_15_into_64,
    unpack_16_into_64,
    unpack_17_into_64,
    unpack_18_into_64,
    unpack_19_into_64,
    unpack_20_into_64,
    unpack_21_into_64,
    unpack_22_into_64,
    unpack_23_into_64,
    unpack_24_into_64,
    unpack_25_into_64,
    unpack_26_into_64,
    unpack_27_into_64,
    unpack_28_into_64,
    unpack_29_into_64,
    unpack_30_into_64,
    unpack_31_into_64,
    unpack_32_into_64,
    unpack_33_into_64,
    unpack_34_into_64,
    unpack_35_into_64,
    unpack_36_into_64,
    unpack_37_into_64,
    unpack_38_into_64,
    unpack_39_into_64,
    unpack_40_into_64,
    unpack_41_into_64,
    unpack_42_into_64,
    unpack_43_into_64,
    unpack_44_into_64,
    unpack_45_into_64,
    unpack_46_into_64,
    unpack_47_into_64,
    unpack_48_into_64,
    unpack_49_into_64,
    unpack_50_into_64,
    unpack_51_into_64,
    unpack_52_into_64,
    unpack_53_into_64,
    unpack_54_into_64,
    unpack_55_into_64,
    unpack_56_into_64,
    unpack_57_into_64,
    unpack_58_into_64,
    unpack_59_into_64,
    unpack_60_into_64,
    unpack_61_into_64,
    unpack_62_into_64,
    unpack_63_into_64
};

} // namespace pack
} // namespace cxxu
